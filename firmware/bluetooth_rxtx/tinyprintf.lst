ARM GAS  /tmp/cc8BcSyl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tinyprintf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uldivmod
  16              		.section	.text.ulli2a,"ax",%progbits
  17              		.align	1
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	ulli2a:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "tinyprintf.c"
   1:tinyprintf.c  **** /*
   2:tinyprintf.c  **** File: tinyprintf.c
   3:tinyprintf.c  **** 
   4:tinyprintf.c  **** Copyright (C) 2004  Kustaa Nyholm
   5:tinyprintf.c  **** 
   6:tinyprintf.c  **** This library is free software; you can redistribute it and/or
   7:tinyprintf.c  **** modify it under the terms of the GNU Lesser General Public
   8:tinyprintf.c  **** License as published by the Free Software Foundation; either
   9:tinyprintf.c  **** version 2.1 of the License, or (at your option) any later version.
  10:tinyprintf.c  **** 
  11:tinyprintf.c  **** This library is distributed in the hope that it will be useful,
  12:tinyprintf.c  **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:tinyprintf.c  **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  14:tinyprintf.c  **** Lesser General Public License for more details.
  15:tinyprintf.c  **** 
  16:tinyprintf.c  **** You should have received a copy of the GNU Lesser General Public
  17:tinyprintf.c  **** License along with this library; if not, write to the Free Software
  18:tinyprintf.c  **** Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  19:tinyprintf.c  **** 
  20:tinyprintf.c  **** */
  21:tinyprintf.c  **** 
  22:tinyprintf.c  **** #include "tinyprintf.h"
  23:tinyprintf.c  **** 
  24:tinyprintf.c  **** 
  25:tinyprintf.c  **** /*
  26:tinyprintf.c  ****  * Configuration
  27:tinyprintf.c  ****  */
  28:tinyprintf.c  **** 
  29:tinyprintf.c  **** /* Enable long int support */
  30:tinyprintf.c  **** #define PRINTF_LONG_SUPPORT
  31:tinyprintf.c  **** 
ARM GAS  /tmp/cc8BcSyl.s 			page 2


  32:tinyprintf.c  **** /* Enable long long int support (implies long int support) */
  33:tinyprintf.c  **** #define PRINTF_LONG_LONG_SUPPORT
  34:tinyprintf.c  **** 
  35:tinyprintf.c  **** /* Enable %z (size_t) support */
  36:tinyprintf.c  **** #define PRINTF_SIZE_T_SUPPORT
  37:tinyprintf.c  **** 
  38:tinyprintf.c  **** /*
  39:tinyprintf.c  ****  * Configuration adjustments
  40:tinyprintf.c  ****  */
  41:tinyprintf.c  **** #ifdef PRINTF_SIZE_T_SUPPORT
  42:tinyprintf.c  **** #include <sys/types.h>
  43:tinyprintf.c  **** #endif
  44:tinyprintf.c  **** 
  45:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
  46:tinyprintf.c  **** # define PRINTF_LONG_SUPPORT
  47:tinyprintf.c  **** #endif
  48:tinyprintf.c  **** 
  49:tinyprintf.c  **** /* __SIZEOF_<type>__ defined at least by gcc */
  50:tinyprintf.c  **** #ifdef __SIZEOF_POINTER__
  51:tinyprintf.c  **** # define SIZEOF_POINTER __SIZEOF_POINTER__
  52:tinyprintf.c  **** #endif
  53:tinyprintf.c  **** #ifdef __SIZEOF_LONG_LONG__
  54:tinyprintf.c  **** # define SIZEOF_LONG_LONG __SIZEOF_LONG_LONG__
  55:tinyprintf.c  **** #endif
  56:tinyprintf.c  **** #ifdef __SIZEOF_LONG__
  57:tinyprintf.c  **** # define SIZEOF_LONG __SIZEOF_LONG__
  58:tinyprintf.c  **** #endif
  59:tinyprintf.c  **** #ifdef __SIZEOF_INT__
  60:tinyprintf.c  **** # define SIZEOF_INT __SIZEOF_INT__
  61:tinyprintf.c  **** #endif
  62:tinyprintf.c  **** 
  63:tinyprintf.c  **** #ifdef __GNUC__
  64:tinyprintf.c  **** # define _TFP_GCC_NO_INLINE_  __attribute__ ((noinline))
  65:tinyprintf.c  **** #else
  66:tinyprintf.c  **** # define _TFP_GCC_NO_INLINE_
  67:tinyprintf.c  **** #endif
  68:tinyprintf.c  **** 
  69:tinyprintf.c  **** /*
  70:tinyprintf.c  ****  * Implementation
  71:tinyprintf.c  ****  */
  72:tinyprintf.c  **** struct param {
  73:tinyprintf.c  ****     char lz:1;          /**<  Leading zeros */
  74:tinyprintf.c  ****     char alt:1;         /**<  alternate form */
  75:tinyprintf.c  ****     char uc:1;          /**<  Upper case (for base16 only) */
  76:tinyprintf.c  ****     char align_left:1;  /**<  0 == align right (default), 1 == align left */
  77:tinyprintf.c  ****     unsigned int width; /**<  field width */
  78:tinyprintf.c  ****     char sign;          /**<  The sign to display (if any) */
  79:tinyprintf.c  ****     unsigned int base;  /**<  number base (e.g.: 8, 10, 16) */
  80:tinyprintf.c  ****     char *bf;           /**<  Buffer to output */
  81:tinyprintf.c  **** };
  82:tinyprintf.c  **** 
  83:tinyprintf.c  **** 
  84:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
  85:tinyprintf.c  **** static void _TFP_GCC_NO_INLINE_ ulli2a(
  86:tinyprintf.c  ****     unsigned long long int num, struct param *p)
  87:tinyprintf.c  **** {
  28              		.loc 1 87 1 view -0
ARM GAS  /tmp/cc8BcSyl.s 			page 3


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 87 1 is_stmt 0 view .LVU1
  33 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              		.cfi_def_cfa_offset 48
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  88:tinyprintf.c  ****     int n = 0;
  44              		.loc 1 88 5 is_stmt 1 view .LVU2
  45              	.LVL1:
  89:tinyprintf.c  ****     unsigned long long int d = 1;
  46              		.loc 1 89 5 view .LVU3
  90:tinyprintf.c  ****     char *bf = p->bf;
  47              		.loc 1 90 5 view .LVU4
  91:tinyprintf.c  ****     while (num / d >= p->base)
  48              		.loc 1 91 24 is_stmt 0 view .LVU5
  49 0004 4FF00009 		mov	r9, #0
  50 0008 D2E90336 		ldrd	r3, r6, [r2, #12]
  87:tinyprintf.c  ****     int n = 0;
  51              		.loc 1 87 1 view .LVU6
  52 000c 0746     		mov	r7, r0
  53 000e 8A46     		mov	r10, r1
  54 0010 9346     		mov	fp, r2
  55              		.loc 1 91 24 view .LVU7
  56 0012 9846     		mov	r8, r3
  89:tinyprintf.c  ****     char *bf = p->bf;
  57              		.loc 1 89 28 view .LVU8
  58 0014 0124     		movs	r4, #1
  59 0016 0025     		movs	r5, #0
  60              	.LVL2:
  61              	.L2:
  62              		.loc 1 91 11 is_stmt 1 view .LVU9
  63              		.loc 1 91 16 is_stmt 0 view .LVU10
  64 0018 2246     		mov	r2, r4
  65 001a 2B46     		mov	r3, r5
  66 001c 3846     		mov	r0, r7
  67 001e 5146     		mov	r1, r10
  68 0020 FFF7FEFF 		bl	__aeabi_uldivmod
  69              	.LVL3:
  70              		.loc 1 91 11 view .LVU11
  71 0024 4945     		cmp	r1, r9
  72 0026 08BF     		it	eq
  73 0028 4045     		cmpeq	r0, r8
  74 002a 09D2     		bcs	.L3
  88:tinyprintf.c  ****     unsigned long long int d = 1;
  75              		.loc 1 88 9 view .LVU12
  76 002c 4FF00009 		mov	r9, #0
  77              	.LVL4:
  78              	.L4:
ARM GAS  /tmp/cc8BcSyl.s 			page 4


  92:tinyprintf.c  ****         d *= p->base;
  93:tinyprintf.c  ****     while (d != 0) {
  79              		.loc 1 93 11 is_stmt 1 view .LVU13
  80 0030 54EA0503 		orrs	r3, r4, r5
  81 0034 0CD1     		bne	.L8
  94:tinyprintf.c  ****         int dgt = num / d;
  95:tinyprintf.c  ****         num %= d;
  96:tinyprintf.c  ****         d /= p->base;
  97:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
  98:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
  99:tinyprintf.c  ****             ++n;
 100:tinyprintf.c  ****         }
 101:tinyprintf.c  ****     }
 102:tinyprintf.c  ****     *bf = 0;
  82              		.loc 1 102 5 view .LVU14
  83              		.loc 1 102 9 is_stmt 0 view .LVU15
  84 0036 0023     		movs	r3, #0
  85 0038 3370     		strb	r3, [r6]
 103:tinyprintf.c  **** }
  86              		.loc 1 103 1 view .LVU16
  87 003a 03B0     		add	sp, sp, #12
  88              		.cfi_remember_state
  89              		.cfi_def_cfa_offset 36
  90              		@ sp needed
  91 003c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
  92              	.LVL5:
  93              	.L3:
  94              		.cfi_restore_state
  92:tinyprintf.c  ****         d *= p->base;
  95              		.loc 1 92 9 is_stmt 1 view .LVU17
  92:tinyprintf.c  ****         d *= p->base;
  96              		.loc 1 92 11 is_stmt 0 view .LVU18
  97 0040 04FB09F3 		mul	r3, r4, r9
  98 0044 08FB0533 		mla	r3, r8, r5, r3
  99 0048 A4FB0845 		umull	r4, r5, r4, r8
 100              	.LVL6:
  92:tinyprintf.c  ****         d *= p->base;
 101              		.loc 1 92 11 view .LVU19
 102 004c 1D44     		add	r5, r5, r3
 103              	.LVL7:
  92:tinyprintf.c  ****         d *= p->base;
 104              		.loc 1 92 11 view .LVU20
 105 004e E3E7     		b	.L2
 106              	.LVL8:
 107              	.L8:
 108              	.LBB2:
  94:tinyprintf.c  ****         int dgt = num / d;
 109              		.loc 1 94 9 is_stmt 1 view .LVU21
 110 0050 3846     		mov	r0, r7
 111 0052 5146     		mov	r1, r10
 112 0054 2246     		mov	r2, r4
 113 0056 2B46     		mov	r3, r5
 114 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 115              	.LVL9:
 116 005c 9A46     		mov	r10, r3
 117              	.LVL10:
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
ARM GAS  /tmp/cc8BcSyl.s 			page 5


 118              		.loc 1 96 15 is_stmt 0 view .LVU22
 119 005e DBF80C30 		ldr	r3, [fp, #12]
 120 0062 1746     		mov	r7, r2
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 121              		.loc 1 96 15 view .LVU23
 122 0064 1946     		mov	r1, r3
 123 0066 0022     		movs	r2, #0
 124 0068 8046     		mov	r8, r0
 125              	.LVL11:
  95:tinyprintf.c  ****         d /= p->base;
 126              		.loc 1 95 9 is_stmt 1 view .LVU24
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 127              		.loc 1 96 9 view .LVU25
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 128              		.loc 1 96 15 is_stmt 0 view .LVU26
 129 006a CDE90012 		strd	r1, [sp]
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 130              		.loc 1 96 11 view .LVU27
 131 006e 1346     		mov	r3, r2
 132 0070 2046     		mov	r0, r4
 133              	.LVL12:
  96:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 134              		.loc 1 96 11 view .LVU28
 135 0072 0A46     		mov	r2, r1
 136 0074 2946     		mov	r1, r5
 137 0076 FFF7FEFF 		bl	__aeabi_uldivmod
 138              	.LVL13:
  97:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 139              		.loc 1 97 9 is_stmt 1 view .LVU29
  97:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 140              		.loc 1 97 12 is_stmt 0 view .LVU30
 141 007a B9F1000F 		cmp	r9, #0
 142 007e 0BD1     		bne	.L5
 143              	.LVL14:
  97:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 144              		.loc 1 97 15 discriminator 1 view .LVU31
 145 0080 B8F1000F 		cmp	r8, #0
 146 0084 08DC     		bgt	.L5
  97:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 147              		.loc 1 97 26 discriminator 2 view .LVU32
 148 0086 DDE90023 		ldrd	r2, [sp]
 149 008a 9D42     		cmp	r5, r3
 150 008c 08BF     		it	eq
 151 008e 9442     		cmpeq	r4, r2
 152 0090 12D3     		bcc	.L10
 153              	.LVL15:
 154              	.L7:
  98:tinyprintf.c  ****             ++n;
 155              		.loc 1 98 16 view .LVU33
 156 0092 0446     		mov	r4, r0
 157 0094 0D46     		mov	r5, r1
 158 0096 CBE7     		b	.L4
 159              	.LVL16:
 160              	.L5:
  98:tinyprintf.c  ****             ++n;
 161              		.loc 1 98 13 is_stmt 1 view .LVU34
  98:tinyprintf.c  ****             ++n;
ARM GAS  /tmp/cc8BcSyl.s 			page 6


 162              		.loc 1 98 25 is_stmt 0 view .LVU35
 163 0098 B8F1090F 		cmp	r8, #9
 164 009c 0CDD     		ble	.L10
  98:tinyprintf.c  ****             ++n;
 165              		.loc 1 98 52 discriminator 1 view .LVU36
 166 009e 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  98:tinyprintf.c  ****             ++n;
 167              		.loc 1 98 25 discriminator 1 view .LVU37
 168 00a2 13F0040F 		tst	r3, #4
 169 00a6 14BF     		ite	ne
 170 00a8 3723     		movne	r3, #55
 171 00aa 5723     		moveq	r3, #87
 172              	.L6:
 173              	.LVL17:
  98:tinyprintf.c  ****             ++n;
 174              		.loc 1 98 25 discriminator 8 view .LVU38
 175 00ac 9844     		add	r8, r8, r3
 176              	.LVL18:
  98:tinyprintf.c  ****             ++n;
 177              		.loc 1 98 19 discriminator 8 view .LVU39
 178 00ae 06F8018B 		strb	r8, [r6], #1
 179              	.LVL19:
  99:tinyprintf.c  ****         }
 180              		.loc 1 99 13 is_stmt 1 discriminator 8 view .LVU40
 181 00b2 09F10109 		add	r9, r9, #1
 182              	.LVL20:
  99:tinyprintf.c  ****         }
 183              		.loc 1 99 13 is_stmt 0 discriminator 8 view .LVU41
 184 00b6 ECE7     		b	.L7
 185              	.LVL21:
 186              	.L10:
  98:tinyprintf.c  ****             ++n;
 187              		.loc 1 98 25 view .LVU42
 188 00b8 3023     		movs	r3, #48
 189 00ba F7E7     		b	.L6
 190              	.LBE2:
 191              		.cfi_endproc
 192              	.LFE0:
 194              		.section	.text.uli2a,"ax",%progbits
 195              		.align	1
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu softvfp
 201              	uli2a:
 202              	.LVL22:
 203              	.LFB2:
 104:tinyprintf.c  **** 
 105:tinyprintf.c  **** static void lli2a(long long int num, struct param *p)
 106:tinyprintf.c  **** {
 107:tinyprintf.c  ****     if (num < 0) {
 108:tinyprintf.c  ****         num = -num;
 109:tinyprintf.c  ****         p->sign = '-';
 110:tinyprintf.c  ****     }
 111:tinyprintf.c  ****     ulli2a(num, p);
 112:tinyprintf.c  **** }
 113:tinyprintf.c  **** #endif
ARM GAS  /tmp/cc8BcSyl.s 			page 7


 114:tinyprintf.c  **** 
 115:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 116:tinyprintf.c  **** static void uli2a(unsigned long int num, struct param *p)
 117:tinyprintf.c  **** {
 204              		.loc 1 117 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		.loc 1 117 1 is_stmt 0 view .LVU44
 209 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 210              		.cfi_def_cfa_offset 20
 211              		.cfi_offset 4, -20
 212              		.cfi_offset 5, -16
 213              		.cfi_offset 6, -12
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 118:tinyprintf.c  ****     int n = 0;
 216              		.loc 1 118 5 is_stmt 1 view .LVU45
 217              	.LVL23:
 119:tinyprintf.c  ****     unsigned long int d = 1;
 218              		.loc 1 119 5 view .LVU46
 120:tinyprintf.c  ****     char *bf = p->bf;
 219              		.loc 1 120 5 view .LVU47
 119:tinyprintf.c  ****     unsigned long int d = 1;
 220              		.loc 1 119 23 is_stmt 0 view .LVU48
 221 0002 0123     		movs	r3, #1
 121:tinyprintf.c  ****     while (num / d >= p->base)
 222              		.loc 1 121 24 view .LVU49
 223 0004 D1E90342 		ldrd	r4, r2, [r1, #12]
 224              	.LVL24:
 225              	.L13:
 226              		.loc 1 121 11 is_stmt 1 view .LVU50
 227              		.loc 1 121 16 is_stmt 0 view .LVU51
 228 0008 B0FBF3F5 		udiv	r5, r0, r3
 229              		.loc 1 121 11 view .LVU52
 230 000c A542     		cmp	r5, r4
 231 000e 03D2     		bcs	.L14
 118:tinyprintf.c  ****     unsigned long int d = 1;
 232              		.loc 1 118 9 view .LVU53
 233 0010 0025     		movs	r5, #0
 234              	.LVL25:
 235              	.L15:
 122:tinyprintf.c  ****         d *= p->base;
 123:tinyprintf.c  ****     while (d != 0) {
 236              		.loc 1 123 11 is_stmt 1 view .LVU54
 237 0012 1BB9     		cbnz	r3, .L19
 124:tinyprintf.c  ****         int dgt = num / d;
 125:tinyprintf.c  ****         num %= d;
 126:tinyprintf.c  ****         d /= p->base;
 127:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 128:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 129:tinyprintf.c  ****             ++n;
 130:tinyprintf.c  ****         }
 131:tinyprintf.c  ****     }
 132:tinyprintf.c  ****     *bf = 0;
 238              		.loc 1 132 5 view .LVU55
 239              		.loc 1 132 9 is_stmt 0 view .LVU56
ARM GAS  /tmp/cc8BcSyl.s 			page 8


 240 0014 1370     		strb	r3, [r2]
 133:tinyprintf.c  **** }
 241              		.loc 1 133 1 view .LVU57
 242 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 243              	.LVL26:
 244              	.L14:
 122:tinyprintf.c  ****         d *= p->base;
 245              		.loc 1 122 9 is_stmt 1 view .LVU58
 122:tinyprintf.c  ****         d *= p->base;
 246              		.loc 1 122 11 is_stmt 0 view .LVU59
 247 0018 6343     		muls	r3, r4, r3
 248              	.LVL27:
 122:tinyprintf.c  ****         d *= p->base;
 249              		.loc 1 122 11 view .LVU60
 250 001a F5E7     		b	.L13
 251              	.LVL28:
 252              	.L19:
 253              	.LBB3:
 124:tinyprintf.c  ****         int dgt = num / d;
 254              		.loc 1 124 9 is_stmt 1 view .LVU61
 124:tinyprintf.c  ****         int dgt = num / d;
 255              		.loc 1 124 23 is_stmt 0 view .LVU62
 256 001c B0FBF3F4 		udiv	r4, r0, r3
 257              	.LVL29:
 125:tinyprintf.c  ****         d /= p->base;
 258              		.loc 1 125 9 is_stmt 1 view .LVU63
 126:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 259              		.loc 1 126 15 is_stmt 0 view .LVU64
 260 0020 CE68     		ldr	r6, [r1, #12]
 125:tinyprintf.c  ****         d /= p->base;
 261              		.loc 1 125 13 view .LVU65
 262 0022 03FB1400 		mls	r0, r3, r4, r0
 263              	.LVL30:
 126:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 264              		.loc 1 126 9 is_stmt 1 view .LVU66
 126:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 265              		.loc 1 126 11 is_stmt 0 view .LVU67
 266 0026 B3FBF6F7 		udiv	r7, r3, r6
 267              	.LVL31:
 127:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 268              		.loc 1 127 9 is_stmt 1 view .LVU68
 127:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 269              		.loc 1 127 12 is_stmt 0 view .LVU69
 270 002a 2DB9     		cbnz	r5, .L16
 271              	.LVL32:
 127:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 272              		.loc 1 127 15 discriminator 1 view .LVU70
 273 002c 002C     		cmp	r4, #0
 274 002e 03DC     		bgt	.L16
 127:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 275              		.loc 1 127 26 discriminator 2 view .LVU71
 276 0030 9E42     		cmp	r6, r3
 277 0032 0ED8     		bhi	.L21
 278              	.LVL33:
 279              	.L18:
 128:tinyprintf.c  ****             ++n;
 280              		.loc 1 128 16 view .LVU72
ARM GAS  /tmp/cc8BcSyl.s 			page 9


 281 0034 3B46     		mov	r3, r7
 282 0036 ECE7     		b	.L15
 283              	.L16:
 128:tinyprintf.c  ****             ++n;
 284              		.loc 1 128 13 is_stmt 1 view .LVU73
 128:tinyprintf.c  ****             ++n;
 285              		.loc 1 128 25 is_stmt 0 view .LVU74
 286 0038 092C     		cmp	r4, #9
 287 003a 0ADD     		ble	.L21
 128:tinyprintf.c  ****             ++n;
 288              		.loc 1 128 52 discriminator 1 view .LVU75
 289 003c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 128:tinyprintf.c  ****             ++n;
 290              		.loc 1 128 25 discriminator 1 view .LVU76
 291 003e 13F0040F 		tst	r3, #4
 292 0042 14BF     		ite	ne
 293 0044 3723     		movne	r3, #55
 294 0046 5723     		moveq	r3, #87
 295              	.L17:
 296              	.LVL34:
 128:tinyprintf.c  ****             ++n;
 297              		.loc 1 128 25 discriminator 8 view .LVU77
 298 0048 2344     		add	r3, r3, r4
 128:tinyprintf.c  ****             ++n;
 299              		.loc 1 128 19 discriminator 8 view .LVU78
 300 004a 02F8013B 		strb	r3, [r2], #1
 301              	.LVL35:
 129:tinyprintf.c  ****         }
 302              		.loc 1 129 13 is_stmt 1 discriminator 8 view .LVU79
 303 004e 0135     		adds	r5, r5, #1
 304              	.LVL36:
 129:tinyprintf.c  ****         }
 305              		.loc 1 129 13 is_stmt 0 discriminator 8 view .LVU80
 306 0050 F0E7     		b	.L18
 307              	.LVL37:
 308              	.L21:
 128:tinyprintf.c  ****             ++n;
 309              		.loc 1 128 25 view .LVU81
 310 0052 3023     		movs	r3, #48
 311 0054 F8E7     		b	.L17
 312              	.LBE3:
 313              		.cfi_endproc
 314              	.LFE2:
 316              		.section	.text.ui2a,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu softvfp
 323              	ui2a:
 324              	.LVL38:
 325              	.LFB4:
 134:tinyprintf.c  **** 
 135:tinyprintf.c  **** static void li2a(long num, struct param *p)
 136:tinyprintf.c  **** {
 137:tinyprintf.c  ****     if (num < 0) {
 138:tinyprintf.c  ****         num = -num;
ARM GAS  /tmp/cc8BcSyl.s 			page 10


 139:tinyprintf.c  ****         p->sign = '-';
 140:tinyprintf.c  ****     }
 141:tinyprintf.c  ****     uli2a(num, p);
 142:tinyprintf.c  **** }
 143:tinyprintf.c  **** #endif
 144:tinyprintf.c  **** 
 145:tinyprintf.c  **** static void ui2a(unsigned int num, struct param *p)
 146:tinyprintf.c  **** {
 326              		.loc 1 146 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		.loc 1 146 1 is_stmt 0 view .LVU83
 331 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 332              		.cfi_def_cfa_offset 20
 333              		.cfi_offset 4, -20
 334              		.cfi_offset 5, -16
 335              		.cfi_offset 6, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 147:tinyprintf.c  ****     int n = 0;
 338              		.loc 1 147 5 is_stmt 1 view .LVU84
 339              	.LVL39:
 148:tinyprintf.c  ****     unsigned int d = 1;
 340              		.loc 1 148 5 view .LVU85
 149:tinyprintf.c  ****     char *bf = p->bf;
 341              		.loc 1 149 5 view .LVU86
 148:tinyprintf.c  ****     unsigned int d = 1;
 342              		.loc 1 148 18 is_stmt 0 view .LVU87
 343 0002 0123     		movs	r3, #1
 150:tinyprintf.c  ****     while (num / d >= p->base)
 344              		.loc 1 150 24 view .LVU88
 345 0004 D1E90342 		ldrd	r4, r2, [r1, #12]
 346              	.LVL40:
 347              	.L24:
 348              		.loc 1 150 11 is_stmt 1 view .LVU89
 349              		.loc 1 150 16 is_stmt 0 view .LVU90
 350 0008 B0FBF3F5 		udiv	r5, r0, r3
 351              		.loc 1 150 11 view .LVU91
 352 000c A542     		cmp	r5, r4
 353 000e 03D2     		bcs	.L25
 147:tinyprintf.c  ****     unsigned int d = 1;
 354              		.loc 1 147 9 view .LVU92
 355 0010 0025     		movs	r5, #0
 356              	.LVL41:
 357              	.L26:
 151:tinyprintf.c  ****         d *= p->base;
 152:tinyprintf.c  ****     while (d != 0) {
 358              		.loc 1 152 11 is_stmt 1 view .LVU93
 359 0012 1BB9     		cbnz	r3, .L30
 153:tinyprintf.c  ****         int dgt = num / d;
 154:tinyprintf.c  ****         num %= d;
 155:tinyprintf.c  ****         d /= p->base;
 156:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 157:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 158:tinyprintf.c  ****             ++n;
 159:tinyprintf.c  ****         }
ARM GAS  /tmp/cc8BcSyl.s 			page 11


 160:tinyprintf.c  ****     }
 161:tinyprintf.c  ****     *bf = 0;
 360              		.loc 1 161 5 view .LVU94
 361              		.loc 1 161 9 is_stmt 0 view .LVU95
 362 0014 1370     		strb	r3, [r2]
 162:tinyprintf.c  **** }
 363              		.loc 1 162 1 view .LVU96
 364 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 365              	.LVL42:
 366              	.L25:
 151:tinyprintf.c  ****         d *= p->base;
 367              		.loc 1 151 9 is_stmt 1 view .LVU97
 151:tinyprintf.c  ****         d *= p->base;
 368              		.loc 1 151 11 is_stmt 0 view .LVU98
 369 0018 6343     		muls	r3, r4, r3
 370              	.LVL43:
 151:tinyprintf.c  ****         d *= p->base;
 371              		.loc 1 151 11 view .LVU99
 372 001a F5E7     		b	.L24
 373              	.LVL44:
 374              	.L30:
 375              	.LBB4:
 153:tinyprintf.c  ****         int dgt = num / d;
 376              		.loc 1 153 9 is_stmt 1 view .LVU100
 153:tinyprintf.c  ****         int dgt = num / d;
 377              		.loc 1 153 23 is_stmt 0 view .LVU101
 378 001c B0FBF3F4 		udiv	r4, r0, r3
 379              	.LVL45:
 154:tinyprintf.c  ****         d /= p->base;
 380              		.loc 1 154 9 is_stmt 1 view .LVU102
 155:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 381              		.loc 1 155 15 is_stmt 0 view .LVU103
 382 0020 CE68     		ldr	r6, [r1, #12]
 154:tinyprintf.c  ****         d /= p->base;
 383              		.loc 1 154 13 view .LVU104
 384 0022 03FB1400 		mls	r0, r3, r4, r0
 385              	.LVL46:
 155:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 386              		.loc 1 155 9 is_stmt 1 view .LVU105
 155:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 387              		.loc 1 155 11 is_stmt 0 view .LVU106
 388 0026 B3FBF6F7 		udiv	r7, r3, r6
 389              	.LVL47:
 156:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 390              		.loc 1 156 9 is_stmt 1 view .LVU107
 156:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 391              		.loc 1 156 12 is_stmt 0 view .LVU108
 392 002a 2DB9     		cbnz	r5, .L27
 393              	.LVL48:
 156:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 394              		.loc 1 156 15 discriminator 1 view .LVU109
 395 002c 002C     		cmp	r4, #0
 396 002e 03DC     		bgt	.L27
 156:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 397              		.loc 1 156 26 discriminator 2 view .LVU110
 398 0030 9E42     		cmp	r6, r3
 399 0032 0ED8     		bhi	.L32
ARM GAS  /tmp/cc8BcSyl.s 			page 12


 400              	.LVL49:
 401              	.L29:
 157:tinyprintf.c  ****             ++n;
 402              		.loc 1 157 16 view .LVU111
 403 0034 3B46     		mov	r3, r7
 404 0036 ECE7     		b	.L26
 405              	.L27:
 157:tinyprintf.c  ****             ++n;
 406              		.loc 1 157 13 is_stmt 1 view .LVU112
 157:tinyprintf.c  ****             ++n;
 407              		.loc 1 157 25 is_stmt 0 view .LVU113
 408 0038 092C     		cmp	r4, #9
 409 003a 0ADD     		ble	.L32
 157:tinyprintf.c  ****             ++n;
 410              		.loc 1 157 52 discriminator 1 view .LVU114
 411 003c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 157:tinyprintf.c  ****             ++n;
 412              		.loc 1 157 25 discriminator 1 view .LVU115
 413 003e 13F0040F 		tst	r3, #4
 414 0042 14BF     		ite	ne
 415 0044 3723     		movne	r3, #55
 416 0046 5723     		moveq	r3, #87
 417              	.L28:
 418              	.LVL50:
 157:tinyprintf.c  ****             ++n;
 419              		.loc 1 157 25 discriminator 8 view .LVU116
 420 0048 2344     		add	r3, r3, r4
 157:tinyprintf.c  ****             ++n;
 421              		.loc 1 157 19 discriminator 8 view .LVU117
 422 004a 02F8013B 		strb	r3, [r2], #1
 423              	.LVL51:
 158:tinyprintf.c  ****         }
 424              		.loc 1 158 13 is_stmt 1 discriminator 8 view .LVU118
 425 004e 0135     		adds	r5, r5, #1
 426              	.LVL52:
 158:tinyprintf.c  ****         }
 427              		.loc 1 158 13 is_stmt 0 discriminator 8 view .LVU119
 428 0050 F0E7     		b	.L29
 429              	.LVL53:
 430              	.L32:
 157:tinyprintf.c  ****             ++n;
 431              		.loc 1 157 25 view .LVU120
 432 0052 3023     		movs	r3, #48
 433 0054 F8E7     		b	.L28
 434              	.LBE4:
 435              		.cfi_endproc
 436              	.LFE4:
 438              		.section	.text.putchw,"ax",%progbits
 439              		.align	1
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu softvfp
 445              	putchw:
 446              	.LVL54:
 447              	.LFB8:
 163:tinyprintf.c  **** 
ARM GAS  /tmp/cc8BcSyl.s 			page 13


 164:tinyprintf.c  **** static void i2a(int num, struct param *p)
 165:tinyprintf.c  **** {
 166:tinyprintf.c  ****     if (num < 0) {
 167:tinyprintf.c  ****         num = -num;
 168:tinyprintf.c  ****         p->sign = '-';
 169:tinyprintf.c  ****     }
 170:tinyprintf.c  ****     ui2a(num, p);
 171:tinyprintf.c  **** }
 172:tinyprintf.c  **** 
 173:tinyprintf.c  **** static int a2d(char ch)
 174:tinyprintf.c  **** {
 175:tinyprintf.c  ****     if (ch >= '0' && ch <= '9')
 176:tinyprintf.c  ****         return ch - '0';
 177:tinyprintf.c  ****     else if (ch >= 'a' && ch <= 'f')
 178:tinyprintf.c  ****         return ch - 'a' + 10;
 179:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 180:tinyprintf.c  ****         return ch - 'A' + 10;
 181:tinyprintf.c  ****     else
 182:tinyprintf.c  ****         return -1;
 183:tinyprintf.c  **** }
 184:tinyprintf.c  **** 
 185:tinyprintf.c  **** static char a2u(char ch, const char **src, int base, unsigned int *nump)
 186:tinyprintf.c  **** {
 187:tinyprintf.c  ****     const char *p = *src;
 188:tinyprintf.c  ****     unsigned int num = 0;
 189:tinyprintf.c  ****     int digit;
 190:tinyprintf.c  ****     while ((digit = a2d(ch)) >= 0) {
 191:tinyprintf.c  ****         if (digit > base)
 192:tinyprintf.c  ****             break;
 193:tinyprintf.c  ****         num = num * base + digit;
 194:tinyprintf.c  ****         ch = *p++;
 195:tinyprintf.c  ****     }
 196:tinyprintf.c  ****     *src = p;
 197:tinyprintf.c  ****     *nump = num;
 198:tinyprintf.c  ****     return ch;
 199:tinyprintf.c  **** }
 200:tinyprintf.c  **** 
 201:tinyprintf.c  **** static void putchw(void *putp, putcf putf, struct param *p)
 202:tinyprintf.c  **** {
 448              		.loc 1 202 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		.loc 1 202 1 is_stmt 0 view .LVU122
 453 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 4, -24
 456              		.cfi_offset 5, -20
 457              		.cfi_offset 6, -16
 458              		.cfi_offset 7, -12
 459              		.cfi_offset 8, -8
 460              		.cfi_offset 14, -4
 203:tinyprintf.c  ****     char ch;
 461              		.loc 1 203 5 is_stmt 1 view .LVU123
 204:tinyprintf.c  ****     int n = p->width;
 462              		.loc 1 204 5 view .LVU124
 202:tinyprintf.c  ****     char ch;
ARM GAS  /tmp/cc8BcSyl.s 			page 14


 463              		.loc 1 202 1 is_stmt 0 view .LVU125
 464 0004 0646     		mov	r6, r0
 465 0006 0F46     		mov	r7, r1
 466 0008 1546     		mov	r5, r2
 467              		.loc 1 204 9 view .LVU126
 468 000a 5468     		ldr	r4, [r2, #4]
 469              	.LVL55:
 205:tinyprintf.c  ****     char *bf = p->bf;
 470              		.loc 1 205 5 is_stmt 1 view .LVU127
 471              		.loc 1 205 11 is_stmt 0 view .LVU128
 472 000c 1369     		ldr	r3, [r2, #16]
 473              	.LVL56:
 206:tinyprintf.c  **** 
 207:tinyprintf.c  ****     /* Number of filling characters */
 208:tinyprintf.c  ****     while (*bf++ && n > 0)
 474              		.loc 1 208 5 is_stmt 1 view .LVU129
 475              	.L35:
 476              		.loc 1 208 11 view .LVU130
 477              		.loc 1 208 11 is_stmt 0 view .LVU131
 478 000e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 479              	.LVL57:
 480              		.loc 1 208 11 view .LVU132
 481 0012 0AB1     		cbz	r2, .L36
 482              		.loc 1 208 18 discriminator 1 view .LVU133
 483 0014 002C     		cmp	r4, #0
 484 0016 44DC     		bgt	.L37
 485              	.L36:
 209:tinyprintf.c  ****         n--;
 210:tinyprintf.c  ****     if (p->sign)
 486              		.loc 1 210 5 is_stmt 1 view .LVU134
 487              		.loc 1 210 8 is_stmt 0 view .LVU135
 488 0018 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 489              	.LVL58:
 490              		.loc 1 210 8 view .LVU136
 491 001a 03B1     		cbz	r3, .L38
 211:tinyprintf.c  ****         n--;
 492              		.loc 1 211 9 is_stmt 1 view .LVU137
 493              		.loc 1 211 10 is_stmt 0 view .LVU138
 494 001c 013C     		subs	r4, r4, #1
 495              	.LVL59:
 496              	.L38:
 212:tinyprintf.c  ****     if (p->alt && p->base == 16)
 497              		.loc 1 212 5 is_stmt 1 view .LVU139
 498              		.loc 1 212 9 is_stmt 0 view .LVU140
 499 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 500              		.loc 1 212 8 view .LVU141
 501 0020 9907     		lsls	r1, r3, #30
 502              	.LVL60:
 503              		.loc 1 212 8 view .LVU142
 504 0022 03D5     		bpl	.L39
 505              		.loc 1 212 20 discriminator 1 view .LVU143
 506 0024 EA68     		ldr	r2, [r5, #12]
 507              		.loc 1 212 16 discriminator 1 view .LVU144
 508 0026 102A     		cmp	r2, #16
 509 0028 3DD1     		bne	.L40
 213:tinyprintf.c  ****         n -= 2;
 510              		.loc 1 213 9 is_stmt 1 view .LVU145
ARM GAS  /tmp/cc8BcSyl.s 			page 15


 511              		.loc 1 213 11 is_stmt 0 view .LVU146
 512 002a 023C     		subs	r4, r4, #2
 513              	.LVL61:
 514              	.L39:
 214:tinyprintf.c  ****     else if (p->alt && p->base == 8)
 215:tinyprintf.c  ****         n--;
 216:tinyprintf.c  **** 
 217:tinyprintf.c  ****     /* Fill with space to align to the right, before alternate or sign */
 218:tinyprintf.c  ****     if (!p->lz && !p->align_left) {
 515              		.loc 1 218 5 is_stmt 1 view .LVU147
 516              		.loc 1 218 8 is_stmt 0 view .LVU148
 517 002c 13F0090F 		tst	r3, #9
 518 0030 08D1     		bne	.L41
 519              		.loc 1 218 8 view .LVU149
 520 0032 A046     		mov	r8, r4
 521              	.LVL62:
 522              	.L42:
 219:tinyprintf.c  ****         while (n-- > 0)
 523              		.loc 1 219 15 is_stmt 1 view .LVU150
 524              		.loc 1 219 15 is_stmt 0 view .LVU151
 525 0034 B8F1000F 		cmp	r8, #0
 526 0038 3ADC     		bgt	.L43
 527 003a 631E     		subs	r3, r4, #1
 528 003c 002C     		cmp	r4, #0
 529 003e B4BF     		ite	lt
 530 0040 1C46     		movlt	r4, r3
 531 0042 1C1B     		subge	r4, r3, r4
 532              	.LVL63:
 533              	.L41:
 220:tinyprintf.c  ****             putf(putp, ' ');
 221:tinyprintf.c  ****     }
 222:tinyprintf.c  **** 
 223:tinyprintf.c  ****     /* print sign */
 224:tinyprintf.c  ****     if (p->sign)
 534              		.loc 1 224 5 is_stmt 1 view .LVU152
 535              		.loc 1 224 10 is_stmt 0 view .LVU153
 536 0044 297A     		ldrb	r1, [r5, #8]	@ zero_extendqisi2
 537              		.loc 1 224 8 view .LVU154
 538 0046 09B1     		cbz	r1, .L44
 225:tinyprintf.c  ****         putf(putp, p->sign);
 539              		.loc 1 225 9 is_stmt 1 view .LVU155
 540 0048 3046     		mov	r0, r6
 541 004a B847     		blx	r7
 542              	.LVL64:
 543              	.L44:
 226:tinyprintf.c  **** 
 227:tinyprintf.c  ****     /* Alternate */
 228:tinyprintf.c  ****     if (p->alt && p->base == 16) {
 544              		.loc 1 228 5 view .LVU156
 545              		.loc 1 228 9 is_stmt 0 view .LVU157
 546 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 547              		.loc 1 228 8 view .LVU158
 548 004e 9A07     		lsls	r2, r3, #30
 549 0050 0DD5     		bpl	.L45
 550              		.loc 1 228 20 discriminator 1 view .LVU159
 551 0052 EB68     		ldr	r3, [r5, #12]
 552              		.loc 1 228 16 discriminator 1 view .LVU160
ARM GAS  /tmp/cc8BcSyl.s 			page 16


 553 0054 102B     		cmp	r3, #16
 554 0056 31D1     		bne	.L46
 229:tinyprintf.c  ****         putf(putp, '0');
 555              		.loc 1 229 9 is_stmt 1 view .LVU161
 556 0058 3021     		movs	r1, #48
 557 005a 3046     		mov	r0, r6
 558 005c B847     		blx	r7
 559              	.LVL65:
 230:tinyprintf.c  ****         putf(putp, (p->uc ? 'X' : 'x'));
 560              		.loc 1 230 9 view .LVU162
 561              		.loc 1 230 27 is_stmt 0 view .LVU163
 562 005e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 563              		.loc 1 230 9 view .LVU164
 564 0060 13F0040F 		tst	r3, #4
 565 0064 14BF     		ite	ne
 566 0066 5821     		movne	r1, #88
 567 0068 7821     		moveq	r1, #120
 568              	.L75:
 231:tinyprintf.c  ****     } else if (p->alt && p->base == 8) {
 232:tinyprintf.c  ****         putf(putp, '0');
 569              		.loc 1 232 9 view .LVU165
 570 006a 3046     		mov	r0, r6
 571 006c B847     		blx	r7
 572              	.LVL66:
 573              	.L45:
 233:tinyprintf.c  ****     }
 234:tinyprintf.c  **** 
 235:tinyprintf.c  ****     /* Fill with zeros, after alternate or sign */
 236:tinyprintf.c  ****     if (p->lz) {
 574              		.loc 1 236 5 is_stmt 1 view .LVU166
 575              		.loc 1 236 9 is_stmt 0 view .LVU167
 576 006e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 577              		.loc 1 236 8 view .LVU168
 578 0070 DB07     		lsls	r3, r3, #31
 579 0072 08D5     		bpl	.L48
 580 0074 A046     		mov	r8, r4
 581              	.LVL67:
 582              	.L49:
 237:tinyprintf.c  ****         while (n-- > 0)
 583              		.loc 1 237 15 is_stmt 1 view .LVU169
 584              		.loc 1 237 15 is_stmt 0 view .LVU170
 585 0076 B8F1000F 		cmp	r8, #0
 586 007a 23DC     		bgt	.L50
 587 007c 631E     		subs	r3, r4, #1
 588 007e 002C     		cmp	r4, #0
 589 0080 B4BF     		ite	lt
 590 0082 1C46     		movlt	r4, r3
 591 0084 1C1B     		subge	r4, r3, r4
 592              	.LVL68:
 593              	.L48:
 238:tinyprintf.c  ****             putf(putp, '0');
 239:tinyprintf.c  ****     }
 240:tinyprintf.c  **** 
 241:tinyprintf.c  ****     /* Put actual buffer */
 242:tinyprintf.c  ****     bf = p->bf;
 594              		.loc 1 242 5 is_stmt 1 view .LVU171
 595              		.loc 1 242 8 is_stmt 0 view .LVU172
ARM GAS  /tmp/cc8BcSyl.s 			page 17


 596 0086 D5F81080 		ldr	r8, [r5, #16]
 597              	.LVL69:
 243:tinyprintf.c  ****     while ((ch = *bf++))
 598              		.loc 1 243 5 is_stmt 1 view .LVU173
 599              	.L51:
 600              		.loc 1 243 11 view .LVU174
 601              		.loc 1 243 16 is_stmt 0 view .LVU175
 602 008a 18F8011B 		ldrb	r1, [r8], #1	@ zero_extendqisi2
 603              	.LVL70:
 604              		.loc 1 243 11 view .LVU176
 605 008e F9B9     		cbnz	r1, .L52
 244:tinyprintf.c  ****         putf(putp, ch);
 245:tinyprintf.c  **** 
 246:tinyprintf.c  ****     /* Fill with space to align to the left, after string */
 247:tinyprintf.c  ****     if (!p->lz && p->align_left) {
 606              		.loc 1 247 5 is_stmt 1 view .LVU177
 607              		.loc 1 247 16 is_stmt 0 view .LVU178
 608 0090 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 609              		.loc 1 247 8 view .LVU179
 610 0092 03F00903 		and	r3, r3, #9
 611 0096 082B     		cmp	r3, #8
 612 0098 01D1     		bne	.L34
 613              	.LVL71:
 614              	.L54:
 248:tinyprintf.c  ****         while (n-- > 0)
 615              		.loc 1 248 15 is_stmt 1 view .LVU180
 616              		.loc 1 248 15 is_stmt 0 view .LVU181
 617 009a 002C     		cmp	r4, #0
 618 009c 1BDC     		bgt	.L55
 619              	.LVL72:
 620              	.L34:
 249:tinyprintf.c  ****             putf(putp, ' ');
 250:tinyprintf.c  ****     }
 251:tinyprintf.c  **** }
 621              		.loc 1 251 1 view .LVU182
 622 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 623              	.LVL73:
 624              	.L37:
 209:tinyprintf.c  ****     if (p->sign)
 625              		.loc 1 209 9 is_stmt 1 view .LVU183
 209:tinyprintf.c  ****     if (p->sign)
 626              		.loc 1 209 10 is_stmt 0 view .LVU184
 627 00a2 013C     		subs	r4, r4, #1
 628              	.LVL74:
 209:tinyprintf.c  ****     if (p->sign)
 629              		.loc 1 209 10 view .LVU185
 630 00a4 B3E7     		b	.L35
 631              	.LVL75:
 632              	.L40:
 214:tinyprintf.c  ****         n--;
 633              		.loc 1 214 10 is_stmt 1 discriminator 1 view .LVU186
 214:tinyprintf.c  ****         n--;
 634              		.loc 1 214 21 is_stmt 0 discriminator 1 view .LVU187
 635 00a6 082A     		cmp	r2, #8
 215:tinyprintf.c  **** 
 636              		.loc 1 215 9 is_stmt 1 discriminator 1 view .LVU188
 215:tinyprintf.c  **** 
ARM GAS  /tmp/cc8BcSyl.s 			page 18


 637              		.loc 1 215 10 is_stmt 0 discriminator 1 view .LVU189
 638 00a8 08BF     		it	eq
 639 00aa 04F1FF34 		addeq	r4, r4, #-1
 640              	.LVL76:
 215:tinyprintf.c  **** 
 641              		.loc 1 215 10 discriminator 1 view .LVU190
 642 00ae BDE7     		b	.L39
 643              	.LVL77:
 644              	.L43:
 220:tinyprintf.c  ****     }
 645              		.loc 1 220 13 is_stmt 1 view .LVU191
 646 00b0 2021     		movs	r1, #32
 647 00b2 3046     		mov	r0, r6
 648 00b4 B847     		blx	r7
 649              	.LVL78:
 650 00b6 08F1FF38 		add	r8, r8, #-1
 651              	.LVL79:
 220:tinyprintf.c  ****     }
 652              		.loc 1 220 13 is_stmt 0 view .LVU192
 653 00ba BBE7     		b	.L42
 654              	.LVL80:
 655              	.L46:
 231:tinyprintf.c  ****         putf(putp, '0');
 656              		.loc 1 231 12 is_stmt 1 discriminator 1 view .LVU193
 231:tinyprintf.c  ****         putf(putp, '0');
 657              		.loc 1 231 23 is_stmt 0 discriminator 1 view .LVU194
 658 00bc 082B     		cmp	r3, #8
 659 00be D6D1     		bne	.L45
 232:tinyprintf.c  ****     }
 660              		.loc 1 232 9 is_stmt 1 view .LVU195
 661 00c0 3021     		movs	r1, #48
 662 00c2 D2E7     		b	.L75
 663              	.LVL81:
 664              	.L50:
 238:tinyprintf.c  ****     }
 665              		.loc 1 238 13 view .LVU196
 666 00c4 3021     		movs	r1, #48
 667 00c6 3046     		mov	r0, r6
 668 00c8 B847     		blx	r7
 669              	.LVL82:
 670 00ca 08F1FF38 		add	r8, r8, #-1
 671              	.LVL83:
 238:tinyprintf.c  ****     }
 672              		.loc 1 238 13 is_stmt 0 view .LVU197
 673 00ce D2E7     		b	.L49
 674              	.LVL84:
 675              	.L52:
 244:tinyprintf.c  **** 
 676              		.loc 1 244 9 is_stmt 1 view .LVU198
 677 00d0 3046     		mov	r0, r6
 678 00d2 B847     		blx	r7
 679              	.LVL85:
 244:tinyprintf.c  **** 
 680              		.loc 1 244 9 is_stmt 0 view .LVU199
 681 00d4 D9E7     		b	.L51
 682              	.LVL86:
 683              	.L55:
ARM GAS  /tmp/cc8BcSyl.s 			page 19


 249:tinyprintf.c  ****     }
 684              		.loc 1 249 13 is_stmt 1 view .LVU200
 685 00d6 2021     		movs	r1, #32
 686 00d8 3046     		mov	r0, r6
 687 00da B847     		blx	r7
 688              	.LVL87:
 689 00dc 013C     		subs	r4, r4, #1
 690              	.LVL88:
 249:tinyprintf.c  ****     }
 691              		.loc 1 249 13 is_stmt 0 view .LVU201
 692 00de DCE7     		b	.L54
 693              		.cfi_endproc
 694              	.LFE8:
 696              		.section	.text._vsnprintf_putcf,"ax",%progbits
 697              		.align	1
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu softvfp
 703              	_vsnprintf_putcf:
 704              	.LVL89:
 705              	.LFB12:
 252:tinyprintf.c  **** 
 253:tinyprintf.c  **** void tfp_format(void *putp, putcf putf, const char *fmt, va_list va)
 254:tinyprintf.c  **** {
 255:tinyprintf.c  ****     struct param p;
 256:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 257:tinyprintf.c  ****     char bf[23];  /* long = 64b on some architectures */
 258:tinyprintf.c  **** #else
 259:tinyprintf.c  ****     char bf[12];  /* int = 32b on some architectures */
 260:tinyprintf.c  **** #endif
 261:tinyprintf.c  ****     char ch;
 262:tinyprintf.c  ****     p.bf = bf;
 263:tinyprintf.c  **** 
 264:tinyprintf.c  ****     while ((ch = *(fmt++))) {
 265:tinyprintf.c  ****         if (ch != '%') {
 266:tinyprintf.c  **** 			// Ubertooth-specific hack: turn \n into \r\n
 267:tinyprintf.c  **** 			if (ch == '\n')
 268:tinyprintf.c  **** 				putf(putp, '\r');
 269:tinyprintf.c  ****             putf(putp, ch);
 270:tinyprintf.c  ****         } else {
 271:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 272:tinyprintf.c  ****             char lng = 0;  /* 1 for long, 2 for long long */
 273:tinyprintf.c  **** #endif
 274:tinyprintf.c  ****             /* Init parameter struct */
 275:tinyprintf.c  ****             p.lz = 0;
 276:tinyprintf.c  ****             p.alt = 0;
 277:tinyprintf.c  ****             p.width = 0;
 278:tinyprintf.c  ****             p.align_left = 0;
 279:tinyprintf.c  ****             p.sign = 0;
 280:tinyprintf.c  **** 
 281:tinyprintf.c  ****             /* Flags */
 282:tinyprintf.c  ****             while ((ch = *(fmt++))) {
 283:tinyprintf.c  ****                 switch (ch) {
 284:tinyprintf.c  ****                 case '-':
 285:tinyprintf.c  ****                     p.align_left = 1;
 286:tinyprintf.c  ****                     continue;
ARM GAS  /tmp/cc8BcSyl.s 			page 20


 287:tinyprintf.c  ****                 case '0':
 288:tinyprintf.c  ****                     p.lz = 1;
 289:tinyprintf.c  ****                     continue;
 290:tinyprintf.c  ****                 case '#':
 291:tinyprintf.c  ****                     p.alt = 1;
 292:tinyprintf.c  ****                     continue;
 293:tinyprintf.c  ****                 default:
 294:tinyprintf.c  ****                     break;
 295:tinyprintf.c  ****                 }
 296:tinyprintf.c  ****                 break;
 297:tinyprintf.c  ****             }
 298:tinyprintf.c  **** 
 299:tinyprintf.c  ****             /* Width */
 300:tinyprintf.c  ****             if (ch >= '0' && ch <= '9') {
 301:tinyprintf.c  ****                 ch = a2u(ch, &fmt, 10, &(p.width));
 302:tinyprintf.c  ****             }
 303:tinyprintf.c  **** 
 304:tinyprintf.c  ****             /* We accept 'x.y' format but don't support it completely:
 305:tinyprintf.c  ****              * we ignore the 'y' digit => this ignores 0-fill
 306:tinyprintf.c  ****              * size and makes it == width (ie. 'x') */
 307:tinyprintf.c  ****             if (ch == '.') {
 308:tinyprintf.c  ****               p.lz = 1;  /* zero-padding */
 309:tinyprintf.c  ****               /* ignore actual 0-fill size: */
 310:tinyprintf.c  ****               do {
 311:tinyprintf.c  ****                 ch = *(fmt++);
 312:tinyprintf.c  ****               } while ((ch >= '0') && (ch <= '9'));
 313:tinyprintf.c  ****             }
 314:tinyprintf.c  **** 
 315:tinyprintf.c  **** #ifdef PRINTF_SIZE_T_SUPPORT
 316:tinyprintf.c  **** # ifdef PRINTF_LONG_SUPPORT
 317:tinyprintf.c  ****             if (ch == 'z') {
 318:tinyprintf.c  ****                 ch = *(fmt++);
 319:tinyprintf.c  ****                 if (sizeof(size_t) == sizeof(unsigned long int))
 320:tinyprintf.c  ****                     lng = 1;
 321:tinyprintf.c  **** #  ifdef PRINTF_LONG_LONG_SUPPORT
 322:tinyprintf.c  ****                 else if (sizeof(size_t) == sizeof(unsigned long long int))
 323:tinyprintf.c  ****                     lng = 2;
 324:tinyprintf.c  **** #  endif
 325:tinyprintf.c  ****             } else
 326:tinyprintf.c  **** # endif
 327:tinyprintf.c  **** #endif
 328:tinyprintf.c  **** 
 329:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 330:tinyprintf.c  ****             if (ch == 'l') {
 331:tinyprintf.c  ****                 ch = *(fmt++);
 332:tinyprintf.c  ****                 lng = 1;
 333:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 334:tinyprintf.c  ****                 if (ch == 'l') {
 335:tinyprintf.c  ****                   ch = *(fmt++);
 336:tinyprintf.c  ****                   lng = 2;
 337:tinyprintf.c  ****                 }
 338:tinyprintf.c  **** #endif
 339:tinyprintf.c  ****             }
 340:tinyprintf.c  **** #endif
 341:tinyprintf.c  ****             switch (ch) {
 342:tinyprintf.c  ****             case 0:
 343:tinyprintf.c  ****                 goto abort;
ARM GAS  /tmp/cc8BcSyl.s 			page 21


 344:tinyprintf.c  ****             case 'u':
 345:tinyprintf.c  ****                 p.base = 10;
 346:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 347:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 348:tinyprintf.c  ****                 if (2 == lng)
 349:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 350:tinyprintf.c  ****                 else
 351:tinyprintf.c  **** #endif
 352:tinyprintf.c  ****                   if (1 == lng)
 353:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 354:tinyprintf.c  ****                 else
 355:tinyprintf.c  **** #endif
 356:tinyprintf.c  ****                     ui2a(va_arg(va, unsigned int), &p);
 357:tinyprintf.c  ****                 putchw(putp, putf, &p);
 358:tinyprintf.c  ****                 break;
 359:tinyprintf.c  ****             case 'd':
 360:tinyprintf.c  ****             case 'i':
 361:tinyprintf.c  ****                 p.base = 10;
 362:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 363:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 364:tinyprintf.c  ****                 if (2 == lng)
 365:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 366:tinyprintf.c  ****                 else
 367:tinyprintf.c  **** #endif
 368:tinyprintf.c  ****                   if (1 == lng)
 369:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 370:tinyprintf.c  ****                 else
 371:tinyprintf.c  **** #endif
 372:tinyprintf.c  ****                     i2a(va_arg(va, int), &p);
 373:tinyprintf.c  ****                 putchw(putp, putf, &p);
 374:tinyprintf.c  ****                 break;
 375:tinyprintf.c  **** #ifdef SIZEOF_POINTER
 376:tinyprintf.c  ****             case 'p':
 377:tinyprintf.c  ****                 p.alt = 1;
 378:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 379:tinyprintf.c  ****                 lng = 0;
 380:tinyprintf.c  **** # elif defined(SIZEOF_LONG) && SIZEOF_POINTER <= SIZEOF_LONG
 381:tinyprintf.c  ****                 lng = 1;
 382:tinyprintf.c  **** # elif defined(SIZEOF_LONG_LONG) && SIZEOF_POINTER <= SIZEOF_LONG_LONG
 383:tinyprintf.c  ****                 lng = 2;
 384:tinyprintf.c  **** # endif
 385:tinyprintf.c  **** #endif
 386:tinyprintf.c  ****             case 'x':
 387:tinyprintf.c  ****             case 'X':
 388:tinyprintf.c  ****                 p.base = 16;
 389:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 390:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 391:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 392:tinyprintf.c  ****                 if (2 == lng)
 393:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 394:tinyprintf.c  ****                 else
 395:tinyprintf.c  **** #endif
 396:tinyprintf.c  ****                   if (1 == lng)
 397:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 398:tinyprintf.c  ****                 else
 399:tinyprintf.c  **** #endif
 400:tinyprintf.c  ****                     ui2a(va_arg(va, unsigned int), &p);
ARM GAS  /tmp/cc8BcSyl.s 			page 22


 401:tinyprintf.c  ****                 putchw(putp, putf, &p);
 402:tinyprintf.c  ****                 break;
 403:tinyprintf.c  ****             case 'o':
 404:tinyprintf.c  ****                 p.base = 8;
 405:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 406:tinyprintf.c  ****                 putchw(putp, putf, &p);
 407:tinyprintf.c  ****                 break;
 408:tinyprintf.c  ****             case 'c':
 409:tinyprintf.c  ****                 putf(putp, (char)(va_arg(va, int)));
 410:tinyprintf.c  ****                 break;
 411:tinyprintf.c  ****             case 's':
 412:tinyprintf.c  ****                 p.bf = va_arg(va, char *);
 413:tinyprintf.c  ****                 putchw(putp, putf, &p);
 414:tinyprintf.c  ****                 p.bf = bf;
 415:tinyprintf.c  ****                 break;
 416:tinyprintf.c  ****             case '%':
 417:tinyprintf.c  ****                 putf(putp, ch);
 418:tinyprintf.c  ****             default:
 419:tinyprintf.c  ****                 break;
 420:tinyprintf.c  ****             }
 421:tinyprintf.c  ****         }
 422:tinyprintf.c  ****     }
 423:tinyprintf.c  ****  abort:;
 424:tinyprintf.c  **** }
 425:tinyprintf.c  **** 
 426:tinyprintf.c  **** #if TINYPRINTF_DEFINE_TFP_PRINTF
 427:tinyprintf.c  **** static putcf stdout_putf;
 428:tinyprintf.c  **** static void *stdout_putp;
 429:tinyprintf.c  **** 
 430:tinyprintf.c  **** void init_printf(void *putp, putcf putf)
 431:tinyprintf.c  **** {
 432:tinyprintf.c  ****     stdout_putf = putf;
 433:tinyprintf.c  ****     stdout_putp = putp;
 434:tinyprintf.c  **** }
 435:tinyprintf.c  **** 
 436:tinyprintf.c  **** void tfp_printf(char *fmt, ...)
 437:tinyprintf.c  **** {
 438:tinyprintf.c  ****     va_list va;
 439:tinyprintf.c  ****     va_start(va, fmt);
 440:tinyprintf.c  ****     tfp_format(stdout_putp, stdout_putf, fmt, va);
 441:tinyprintf.c  ****     va_end(va);
 442:tinyprintf.c  **** }
 443:tinyprintf.c  **** #endif
 444:tinyprintf.c  **** 
 445:tinyprintf.c  **** #if TINYPRINTF_DEFINE_TFP_SPRINTF
 446:tinyprintf.c  **** struct _vsnprintf_putcf_data
 447:tinyprintf.c  **** {
 448:tinyprintf.c  ****   size_t dest_capacity;
 449:tinyprintf.c  ****   char *dest;
 450:tinyprintf.c  ****   size_t num_chars;
 451:tinyprintf.c  **** };
 452:tinyprintf.c  **** 
 453:tinyprintf.c  **** static void _vsnprintf_putcf(void *p, char c)
 454:tinyprintf.c  **** {
 706              		.loc 1 454 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc8BcSyl.s 			page 23


 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              		.loc 1 454 1 is_stmt 0 view .LVU203
 455:tinyprintf.c  ****   struct _vsnprintf_putcf_data *data = (struct _vsnprintf_putcf_data*)p;
 712              		.loc 1 455 3 is_stmt 1 view .LVU204
 713              	.LVL90:
 456:tinyprintf.c  ****   if (data->num_chars < data->dest_capacity)
 714              		.loc 1 456 3 view .LVU205
 715              		.loc 1 456 11 is_stmt 0 view .LVU206
 716 0000 8368     		ldr	r3, [r0, #8]
 717              		.loc 1 456 6 view .LVU207
 718 0002 0268     		ldr	r2, [r0]
 719 0004 9342     		cmp	r3, r2
 457:tinyprintf.c  ****     data->dest[data->num_chars] = c;
 720              		.loc 1 457 5 is_stmt 1 view .LVU208
 721              		.loc 1 457 33 is_stmt 0 view .LVU209
 722 0006 3CBF     		itt	cc
 723 0008 4268     		ldrcc	r2, [r0, #4]
 724 000a D154     		strbcc	r1, [r2, r3]
 458:tinyprintf.c  ****   data->num_chars ++;
 725              		.loc 1 458 3 is_stmt 1 view .LVU210
 726              		.loc 1 458 19 is_stmt 0 view .LVU211
 727 000c 8368     		ldr	r3, [r0, #8]
 728 000e 0133     		adds	r3, r3, #1
 729 0010 8360     		str	r3, [r0, #8]
 459:tinyprintf.c  **** }
 730              		.loc 1 459 1 view .LVU212
 731 0012 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE12:
 735              		.section	.text._vsprintf_putcf,"ax",%progbits
 736              		.align	1
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu softvfp
 742              	_vsprintf_putcf:
 743              	.LVL91:
 744              	.LFB15:
 460:tinyprintf.c  **** 
 461:tinyprintf.c  **** int tfp_vsnprintf(char *str, size_t size, const char *format, va_list ap)
 462:tinyprintf.c  **** {
 463:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 464:tinyprintf.c  **** 
 465:tinyprintf.c  ****   if (size < 1)
 466:tinyprintf.c  ****     return 0;
 467:tinyprintf.c  **** 
 468:tinyprintf.c  ****   data.dest = str;
 469:tinyprintf.c  ****   data.dest_capacity = size-1;
 470:tinyprintf.c  ****   data.num_chars = 0;
 471:tinyprintf.c  ****   tfp_format(&data, _vsnprintf_putcf, format, ap);
 472:tinyprintf.c  **** 
 473:tinyprintf.c  ****   if (data.num_chars < data.dest_capacity)
 474:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 475:tinyprintf.c  ****   else
 476:tinyprintf.c  ****     data.dest[data.dest_capacity] = '\0';
 477:tinyprintf.c  **** 
ARM GAS  /tmp/cc8BcSyl.s 			page 24


 478:tinyprintf.c  ****   return data.num_chars;
 479:tinyprintf.c  **** }
 480:tinyprintf.c  **** 
 481:tinyprintf.c  **** int tfp_snprintf(char *str, size_t size, const char *format, ...)
 482:tinyprintf.c  **** {
 483:tinyprintf.c  ****   va_list ap;
 484:tinyprintf.c  ****   int retval;
 485:tinyprintf.c  **** 
 486:tinyprintf.c  ****   va_start(ap, format);
 487:tinyprintf.c  ****   retval = tfp_vsnprintf(str, size, format, ap);
 488:tinyprintf.c  ****   va_end(ap);
 489:tinyprintf.c  ****   return retval;
 490:tinyprintf.c  **** }
 491:tinyprintf.c  **** 
 492:tinyprintf.c  **** struct _vsprintf_putcf_data
 493:tinyprintf.c  **** {
 494:tinyprintf.c  ****   char *dest;
 495:tinyprintf.c  ****   size_t num_chars;
 496:tinyprintf.c  **** };
 497:tinyprintf.c  **** 
 498:tinyprintf.c  **** static void _vsprintf_putcf(void *p, char c)
 499:tinyprintf.c  **** {
 745              		.loc 1 499 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		.loc 1 499 1 is_stmt 0 view .LVU214
 750 0000 10B5     		push	{r4, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 4, -8
 753              		.cfi_offset 14, -4
 500:tinyprintf.c  ****   struct _vsprintf_putcf_data *data = (struct _vsprintf_putcf_data*)p;
 754              		.loc 1 500 3 is_stmt 1 view .LVU215
 755              	.LVL92:
 501:tinyprintf.c  ****   data->dest[data->num_chars++] = c;
 756              		.loc 1 501 3 view .LVU216
 757              		.loc 1 501 18 is_stmt 0 view .LVU217
 758 0002 D0E90023 		ldrd	r2, r3, [r0]
 759              		.loc 1 501 29 view .LVU218
 760 0006 5C1C     		adds	r4, r3, #1
 761 0008 4460     		str	r4, [r0, #4]
 762              		.loc 1 501 33 view .LVU219
 763 000a D154     		strb	r1, [r2, r3]
 502:tinyprintf.c  **** }
 764              		.loc 1 502 1 view .LVU220
 765 000c 10BD     		pop	{r4, pc}
 766              		.cfi_endproc
 767              	.LFE15:
 769              		.section	.text.tfp_format,"ax",%progbits
 770              		.align	1
 771              		.global	tfp_format
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu softvfp
 777              	tfp_format:
 778              	.LVL93:
ARM GAS  /tmp/cc8BcSyl.s 			page 25


 779              	.LFB9:
 254:tinyprintf.c  ****     struct param p;
 780              		.loc 1 254 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 48
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 254:tinyprintf.c  ****     struct param p;
 784              		.loc 1 254 1 is_stmt 0 view .LVU222
 785 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 786              		.cfi_def_cfa_offset 36
 787              		.cfi_offset 4, -36
 788              		.cfi_offset 5, -32
 789              		.cfi_offset 6, -28
 790              		.cfi_offset 7, -24
 791              		.cfi_offset 8, -20
 792              		.cfi_offset 9, -16
 793              		.cfi_offset 10, -12
 794              		.cfi_offset 11, -8
 795              		.cfi_offset 14, -4
 796 0004 8DB0     		sub	sp, sp, #52
 797              		.cfi_def_cfa_offset 88
 798              	.LBB16:
 277:tinyprintf.c  ****             p.align_left = 0;
 799              		.loc 1 277 21 view .LVU223
 800 0006 4FF00009 		mov	r9, #0
 801              	.LBE16:
 254:tinyprintf.c  ****     struct param p;
 802              		.loc 1 254 1 view .LVU224
 803 000a 0746     		mov	r7, r0
 804 000c 8846     		mov	r8, r1
 805 000e 1546     		mov	r5, r2
 806 0010 1C46     		mov	r4, r3
 807              	.LVL94:
 255:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 808              		.loc 1 255 5 is_stmt 1 view .LVU225
 257:tinyprintf.c  **** #else
 809              		.loc 1 257 5 view .LVU226
 261:tinyprintf.c  ****     p.bf = bf;
 810              		.loc 1 261 5 view .LVU227
 262:tinyprintf.c  **** 
 811              		.loc 1 262 5 view .LVU228
 812              	.LBB33:
 277:tinyprintf.c  ****             p.align_left = 0;
 813              		.loc 1 277 21 is_stmt 0 view .LVU229
 814 0012 CA46     		mov	r10, r9
 815              	.LBE33:
 262:tinyprintf.c  **** 
 816              		.loc 1 262 10 view .LVU230
 817 0014 06AE     		add	r6, sp, #24
 818 0016 0596     		str	r6, [sp, #20]
 264:tinyprintf.c  ****         if (ch != '%') {
 819              		.loc 1 264 5 is_stmt 1 view .LVU231
 820              	.LVL95:
 821              	.L80:
 264:tinyprintf.c  ****         if (ch != '%') {
 822              		.loc 1 264 11 view .LVU232
 264:tinyprintf.c  ****         if (ch != '%') {
ARM GAS  /tmp/cc8BcSyl.s 			page 26


 823              		.loc 1 264 16 is_stmt 0 view .LVU233
 824 0018 15F801BB 		ldrb	fp, [r5], #1	@ zero_extendqisi2
 825              	.LVL96:
 264:tinyprintf.c  ****         if (ch != '%') {
 826              		.loc 1 264 11 view .LVU234
 827 001c BBF1000F 		cmp	fp, #0
 828 0020 76D0     		beq	.L79
 265:tinyprintf.c  **** 			// Ubertooth-specific hack: turn \n into \r\n
 829              		.loc 1 265 9 is_stmt 1 view .LVU235
 265:tinyprintf.c  **** 			// Ubertooth-specific hack: turn \n into \r\n
 830              		.loc 1 265 12 is_stmt 0 view .LVU236
 831 0022 BBF1250F 		cmp	fp, #37
 832 0026 09D0     		beq	.L81
 267:tinyprintf.c  **** 				putf(putp, '\r');
 833              		.loc 1 267 4 is_stmt 1 view .LVU237
 267:tinyprintf.c  **** 				putf(putp, '\r');
 834              		.loc 1 267 7 is_stmt 0 view .LVU238
 835 0028 BBF10A0F 		cmp	fp, #10
 836 002c 02D1     		bne	.L82
 268:tinyprintf.c  ****             putf(putp, ch);
 837              		.loc 1 268 5 is_stmt 1 view .LVU239
 838 002e 0D21     		movs	r1, #13
 839 0030 3846     		mov	r0, r7
 840 0032 C047     		blx	r8
 841              	.LVL97:
 842              	.L82:
 269:tinyprintf.c  ****         } else {
 843              		.loc 1 269 13 view .LVU240
 844 0034 5946     		mov	r1, fp
 845              	.LVL98:
 846              	.L107:
 847              	.LBB34:
 417:tinyprintf.c  ****             default:
 848              		.loc 1 417 17 view .LVU241
 849 0036 3846     		mov	r0, r7
 850 0038 C047     		blx	r8
 851              	.LVL99:
 417:tinyprintf.c  ****             default:
 852              		.loc 1 417 17 is_stmt 0 view .LVU242
 853 003a EDE7     		b	.L80
 854              	.LVL100:
 855              	.L81:
 272:tinyprintf.c  **** #endif
 856              		.loc 1 272 13 is_stmt 1 view .LVU243
 275:tinyprintf.c  ****             p.alt = 0;
 857              		.loc 1 275 13 view .LVU244
 276:tinyprintf.c  ****             p.width = 0;
 858              		.loc 1 276 13 view .LVU245
 277:tinyprintf.c  ****             p.align_left = 0;
 859              		.loc 1 277 13 view .LVU246
 275:tinyprintf.c  ****             p.alt = 0;
 860              		.loc 1 275 18 is_stmt 0 view .LVU247
 861 003c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 862              	.LVL101:
 277:tinyprintf.c  ****             p.align_left = 0;
 863              		.loc 1 277 21 view .LVU248
 864 0040 CDF808A0 		str	r10, [sp, #8]
ARM GAS  /tmp/cc8BcSyl.s 			page 27


 278:tinyprintf.c  ****             p.sign = 0;
 865              		.loc 1 278 13 is_stmt 1 view .LVU249
 275:tinyprintf.c  ****             p.alt = 0;
 866              		.loc 1 275 18 is_stmt 0 view .LVU250
 867 0044 23F00B03 		bic	r3, r3, #11
 868 0048 8DF80430 		strb	r3, [sp, #4]
 279:tinyprintf.c  **** 
 869              		.loc 1 279 13 is_stmt 1 view .LVU251
 282:tinyprintf.c  ****                 switch (ch) {
 870              		.loc 1 282 19 is_stmt 0 view .LVU252
 871 004c 0023     		movs	r3, #0
 872 004e 1A46     		mov	r2, r3
 873 0050 1846     		mov	r0, r3
 279:tinyprintf.c  **** 
 874              		.loc 1 279 20 view .LVU253
 875 0052 8DF80C90 		strb	r9, [sp, #12]
 282:tinyprintf.c  ****                 switch (ch) {
 876              		.loc 1 282 13 is_stmt 1 view .LVU254
 877              	.LVL102:
 878              	.L84:
 282:tinyprintf.c  ****                 switch (ch) {
 879              		.loc 1 282 19 view .LVU255
 282:tinyprintf.c  ****                 switch (ch) {
 880              		.loc 1 282 24 is_stmt 0 view .LVU256
 881 0056 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 882              	.LVL103:
 282:tinyprintf.c  ****                 switch (ch) {
 883              		.loc 1 282 19 view .LVU257
 884 005a 29B1     		cbz	r1, .L166
 283:tinyprintf.c  ****                 case '-':
 885              		.loc 1 283 17 is_stmt 1 view .LVU258
 886 005c 2D29     		cmp	r1, #45
 887 005e 1FD0     		beq	.L130
 888 0060 3029     		cmp	r1, #48
 889 0062 1FD0     		beq	.L131
 890 0064 2329     		cmp	r1, #35
 891 0066 1FD0     		beq	.L132
 892              	.L166:
 893 0068 28B1     		cbz	r0, .L91
 894 006a 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 895 006e 40F00800 		orr	r0, r0, #8
 896 0072 8DF80400 		strb	r0, [sp, #4]
 897              	.L91:
 898 0076 2AB1     		cbz	r2, .L92
 899 0078 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 900 007c 42F00102 		orr	r2, r2, #1
 901 0080 8DF80420 		strb	r2, [sp, #4]
 902              	.L92:
 903 0084 2BB1     		cbz	r3, .L89
 904 0086 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 905 008a 43F00203 		orr	r3, r3, #2
 906 008e 8DF80430 		strb	r3, [sp, #4]
 907              	.L89:
 300:tinyprintf.c  ****                 ch = a2u(ch, &fmt, 10, &(p.width));
 908              		.loc 1 300 13 view .LVU259
 300:tinyprintf.c  ****                 ch = a2u(ch, &fmt, 10, &(p.width));
 909              		.loc 1 300 16 is_stmt 0 view .LVU260
ARM GAS  /tmp/cc8BcSyl.s 			page 28


 910 0092 A1F13003 		sub	r3, r1, #48
 911 0096 092B     		cmp	r3, #9
 912 0098 1CD8     		bhi	.L95
 913              	.LBB17:
 914              	.LBB18:
 188:tinyprintf.c  ****     int digit;
 915              		.loc 1 188 18 view .LVU261
 916 009a 0022     		movs	r2, #0
 193:tinyprintf.c  ****         ch = *p++;
 917              		.loc 1 193 19 view .LVU262
 918 009c 0A20     		movs	r0, #10
 919 009e 09E0     		b	.L94
 920              	.L130:
 921              	.LBE18:
 922              	.LBE17:
 283:tinyprintf.c  ****                 case '-':
 923              		.loc 1 283 17 view .LVU263
 924 00a0 0120     		movs	r0, #1
 925 00a2 D8E7     		b	.L84
 926              	.L131:
 288:tinyprintf.c  ****                     continue;
 927              		.loc 1 288 26 view .LVU264
 928 00a4 0122     		movs	r2, #1
 929 00a6 D6E7     		b	.L84
 930              	.L132:
 291:tinyprintf.c  ****                     continue;
 931              		.loc 1 291 27 view .LVU265
 932 00a8 0123     		movs	r3, #1
 933 00aa D4E7     		b	.L84
 934              	.LVL104:
 935              	.L97:
 936              	.LBB25:
 937              	.LBB23:
 193:tinyprintf.c  ****         ch = *p++;
 938              		.loc 1 193 9 is_stmt 1 view .LVU266
 193:tinyprintf.c  ****         ch = *p++;
 939              		.loc 1 193 13 is_stmt 0 view .LVU267
 940 00ac 00FB0232 		mla	r2, r0, r2, r3
 941              	.LVL105:
 194:tinyprintf.c  ****     }
 942              		.loc 1 194 9 is_stmt 1 view .LVU268
 194:tinyprintf.c  ****     }
 943              		.loc 1 194 12 is_stmt 0 view .LVU269
 944 00b0 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 945              	.LVL106:
 946              	.L94:
 190:tinyprintf.c  ****         if (digit > base)
 947              		.loc 1 190 11 is_stmt 1 view .LVU270
 948              	.LBB19:
 949              	.LBI19:
 173:tinyprintf.c  **** {
 950              		.loc 1 173 12 view .LVU271
 951              	.LBB20:
 175:tinyprintf.c  ****         return ch - '0';
 952              		.loc 1 175 5 view .LVU272
 175:tinyprintf.c  ****         return ch - '0';
 953              		.loc 1 175 19 is_stmt 0 view .LVU273
ARM GAS  /tmp/cc8BcSyl.s 			page 29


 954 00b4 A1F13003 		sub	r3, r1, #48
 175:tinyprintf.c  ****         return ch - '0';
 955              		.loc 1 175 8 view .LVU274
 956 00b8 5FFA83FC 		uxtb	ip, r3
 957 00bc BCF1090F 		cmp	ip, #9
 958 00c0 F4D9     		bls	.L97
 177:tinyprintf.c  ****         return ch - 'a' + 10;
 959              		.loc 1 177 10 is_stmt 1 view .LVU275
 177:tinyprintf.c  ****         return ch - 'a' + 10;
 960              		.loc 1 177 13 is_stmt 0 view .LVU276
 961 00c2 A1F16103 		sub	r3, r1, #97
 962 00c6 052B     		cmp	r3, #5
 963 00c8 25D8     		bhi	.L98
 178:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 964              		.loc 1 178 9 is_stmt 1 view .LVU277
 178:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 965              		.loc 1 178 25 is_stmt 0 view .LVU278
 966 00ca A1F15703 		sub	r3, r1, #87
 967              	.L109:
 968              	.L99:
 969              	.LVL107:
 178:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 970              		.loc 1 178 25 view .LVU279
 971              	.LBE20:
 972              	.LBE19:
 191:tinyprintf.c  ****             break;
 973              		.loc 1 191 9 is_stmt 1 view .LVU280
 191:tinyprintf.c  ****             break;
 974              		.loc 1 191 12 is_stmt 0 view .LVU281
 975 00ce 0A2B     		cmp	r3, #10
 976 00d0 ECD0     		beq	.L97
 977              	.LVL108:
 978              	.L100:
 196:tinyprintf.c  ****     *nump = num;
 979              		.loc 1 196 5 is_stmt 1 view .LVU282
 197:tinyprintf.c  ****     return ch;
 980              		.loc 1 197 5 view .LVU283
 197:tinyprintf.c  ****     return ch;
 981              		.loc 1 197 11 is_stmt 0 view .LVU284
 982 00d2 0292     		str	r2, [sp, #8]
 198:tinyprintf.c  **** }
 983              		.loc 1 198 5 is_stmt 1 view .LVU285
 984              	.LVL109:
 985              	.L95:
 198:tinyprintf.c  **** }
 986              		.loc 1 198 5 is_stmt 0 view .LVU286
 987              	.LBE23:
 988              	.LBE25:
 307:tinyprintf.c  ****               p.lz = 1;  /* zero-padding */
 989              		.loc 1 307 13 is_stmt 1 view .LVU287
 307:tinyprintf.c  ****               p.lz = 1;  /* zero-padding */
 990              		.loc 1 307 16 is_stmt 0 view .LVU288
 991 00d4 2E29     		cmp	r1, #46
 992 00d6 0BD1     		bne	.L101
 308:tinyprintf.c  ****               /* ignore actual 0-fill size: */
 993              		.loc 1 308 15 is_stmt 1 view .LVU289
 308:tinyprintf.c  ****               /* ignore actual 0-fill size: */
ARM GAS  /tmp/cc8BcSyl.s 			page 30


 994              		.loc 1 308 20 is_stmt 0 view .LVU290
 995 00d8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 996 00dc 43F00103 		orr	r3, r3, #1
 997 00e0 8DF80430 		strb	r3, [sp, #4]
 998              	.L102:
 310:tinyprintf.c  ****                 ch = *(fmt++);
 999              		.loc 1 310 15 is_stmt 1 discriminator 1 view .LVU291
 311:tinyprintf.c  ****               } while ((ch >= '0') && (ch <= '9'));
 1000              		.loc 1 311 17 discriminator 1 view .LVU292
 1001              	.LVL110:
 311:tinyprintf.c  ****               } while ((ch >= '0') && (ch <= '9'));
 1002              		.loc 1 311 20 is_stmt 0 discriminator 1 view .LVU293
 1003 00e4 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1004              	.LVL111:
 312:tinyprintf.c  ****             }
 1005              		.loc 1 312 23 is_stmt 1 discriminator 1 view .LVU294
 312:tinyprintf.c  ****             }
 1006              		.loc 1 312 15 is_stmt 0 discriminator 1 view .LVU295
 1007 00e8 A1F13003 		sub	r3, r1, #48
 1008 00ec 092B     		cmp	r3, #9
 1009 00ee F9D9     		bls	.L102
 1010              	.L101:
 317:tinyprintf.c  ****                 ch = *(fmt++);
 1011              		.loc 1 317 13 is_stmt 1 view .LVU296
 317:tinyprintf.c  ****                 ch = *(fmt++);
 1012              		.loc 1 317 16 is_stmt 0 view .LVU297
 1013 00f0 7A29     		cmp	r1, #122
 1014 00f2 17D1     		bne	.L103
 318:tinyprintf.c  ****                 if (sizeof(size_t) == sizeof(unsigned long int))
 1015              		.loc 1 318 17 is_stmt 1 view .LVU298
 1016              	.LVL112:
 318:tinyprintf.c  ****                 if (sizeof(size_t) == sizeof(unsigned long int))
 1017              		.loc 1 318 20 is_stmt 0 view .LVU299
 1018 00f4 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1019              	.LVL113:
 319:tinyprintf.c  ****                     lng = 1;
 1020              		.loc 1 319 17 is_stmt 1 view .LVU300
 320:tinyprintf.c  **** #  ifdef PRINTF_LONG_LONG_SUPPORT
 1021              		.loc 1 320 21 view .LVU301
 1022              	.L161:
 332:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 1023              		.loc 1 332 21 is_stmt 0 view .LVU302
 1024 00f8 0123     		movs	r3, #1
 1025              	.LVL114:
 1026              	.L104:
 341:tinyprintf.c  ****             case 0:
 1027              		.loc 1 341 13 is_stmt 1 view .LVU303
 1028 00fa 7829     		cmp	r1, #120
 1029 00fc 8CD8     		bhi	.L80
 341:tinyprintf.c  ****             case 0:
 1030              		.loc 1 341 13 is_stmt 0 view .LVU304
 1031 00fe 6229     		cmp	r1, #98
 1032 0100 1DD8     		bhi	.L106
 1033 0102 2529     		cmp	r1, #37
 1034 0104 97D0     		beq	.L107
 1035 0106 5829     		cmp	r1, #88
 1036 0108 00F09F80 		beq	.L108
ARM GAS  /tmp/cc8BcSyl.s 			page 31


 1037 010c 0029     		cmp	r1, #0
 1038 010e 83D1     		bne	.L80
 1039              	.LVL115:
 1040              	.L79:
 341:tinyprintf.c  ****             case 0:
 1041              		.loc 1 341 13 view .LVU305
 1042              	.LBE34:
 424:tinyprintf.c  **** 
 1043              		.loc 1 424 1 view .LVU306
 1044 0110 0DB0     		add	sp, sp, #52
 1045              		.cfi_remember_state
 1046              		.cfi_def_cfa_offset 36
 1047              		@ sp needed
 1048 0112 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1049              	.LVL116:
 1050              	.L98:
 1051              		.cfi_restore_state
 1052              	.LBB35:
 1053              	.LBB26:
 1054              	.LBB24:
 1055              	.LBB22:
 1056              	.LBB21:
 179:tinyprintf.c  ****         return ch - 'A' + 10;
 1057              		.loc 1 179 10 is_stmt 1 view .LVU307
 179:tinyprintf.c  ****         return ch - 'A' + 10;
 1058              		.loc 1 179 13 is_stmt 0 view .LVU308
 1059 0116 A1F14103 		sub	r3, r1, #65
 1060 011a 052B     		cmp	r3, #5
 1061 011c D9D8     		bhi	.L100
 180:tinyprintf.c  ****     else
 1062              		.loc 1 180 9 is_stmt 1 view .LVU309
 180:tinyprintf.c  ****     else
 1063              		.loc 1 180 25 is_stmt 0 view .LVU310
 1064 011e A1F13703 		sub	r3, r1, #55
 1065 0122 D4E7     		b	.L99
 1066              	.LVL117:
 1067              	.L103:
 180:tinyprintf.c  ****     else
 1068              		.loc 1 180 25 view .LVU311
 1069              	.LBE21:
 1070              	.LBE22:
 1071              	.LBE24:
 1072              	.LBE26:
 330:tinyprintf.c  ****                 ch = *(fmt++);
 1073              		.loc 1 330 13 is_stmt 1 view .LVU312
 330:tinyprintf.c  ****                 ch = *(fmt++);
 1074              		.loc 1 330 16 is_stmt 0 view .LVU313
 1075 0124 6C29     		cmp	r1, #108
 1076 0126 08D1     		bne	.L134
 331:tinyprintf.c  ****                 lng = 1;
 1077              		.loc 1 331 17 is_stmt 1 view .LVU314
 1078              	.LVL118:
 331:tinyprintf.c  ****                 lng = 1;
 1079              		.loc 1 331 20 is_stmt 0 view .LVU315
 1080 0128 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1081              	.LVL119:
 332:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
ARM GAS  /tmp/cc8BcSyl.s 			page 32


 1082              		.loc 1 332 17 is_stmt 1 view .LVU316
 334:tinyprintf.c  ****                   ch = *(fmt++);
 1083              		.loc 1 334 17 view .LVU317
 334:tinyprintf.c  ****                   ch = *(fmt++);
 1084              		.loc 1 334 20 is_stmt 0 view .LVU318
 1085 012a 6C29     		cmp	r1, #108
 1086 012c 01D0     		beq	.L105
 331:tinyprintf.c  ****                 lng = 1;
 1087              		.loc 1 331 27 view .LVU319
 1088 012e 0135     		adds	r5, r5, #1
 1089              	.LVL120:
 331:tinyprintf.c  ****                 lng = 1;
 1090              		.loc 1 331 27 view .LVU320
 1091 0130 E2E7     		b	.L161
 1092              	.LVL121:
 1093              	.L105:
 335:tinyprintf.c  ****                   lng = 2;
 1094              		.loc 1 335 19 is_stmt 1 view .LVU321
 335:tinyprintf.c  ****                   lng = 2;
 1095              		.loc 1 335 22 is_stmt 0 view .LVU322
 1096 0132 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 1097              	.LVL122:
 336:tinyprintf.c  ****                 }
 1098              		.loc 1 336 19 is_stmt 1 view .LVU323
 336:tinyprintf.c  ****                 }
 1099              		.loc 1 336 23 is_stmt 0 view .LVU324
 1100 0134 0223     		movs	r3, #2
 335:tinyprintf.c  ****                   lng = 2;
 1101              		.loc 1 335 29 view .LVU325
 1102 0136 0235     		adds	r5, r5, #2
 1103              	.LVL123:
 335:tinyprintf.c  ****                   lng = 2;
 1104              		.loc 1 335 29 view .LVU326
 1105 0138 DFE7     		b	.L104
 1106              	.LVL124:
 1107              	.L134:
 272:tinyprintf.c  **** #endif
 1108              		.loc 1 272 18 view .LVU327
 1109 013a 0023     		movs	r3, #0
 1110 013c DDE7     		b	.L104
 1111              	.LVL125:
 1112              	.L106:
 272:tinyprintf.c  **** #endif
 1113              		.loc 1 272 18 view .LVU328
 1114 013e A1F16302 		sub	r2, r1, #99
 1115 0142 152A     		cmp	r2, #21
 1116 0144 3FF668AF 		bhi	.L80
 1117 0148 01A0     		adr	r0, .L110
 1118 014a 50F822F0 		ldr	pc, [r0, r2, lsl #2]
 1119 014e 00BF     		.p2align 2
 1120              	.L110:
 1121 0150 85020000 		.word	.L116+1
 1122 0154 CD010000 		.word	.L115+1
 1123 0158 19000000 		.word	.L80+1
 1124 015c 19000000 		.word	.L80+1
 1125 0160 19000000 		.word	.L80+1
 1126 0164 19000000 		.word	.L80+1
ARM GAS  /tmp/cc8BcSyl.s 			page 33


 1127 0168 CD010000 		.word	.L115+1
 1128 016c 19000000 		.word	.L80+1
 1129 0170 19000000 		.word	.L80+1
 1130 0174 19000000 		.word	.L80+1
 1131 0178 19000000 		.word	.L80+1
 1132 017c 19000000 		.word	.L80+1
 1133 0180 75020000 		.word	.L114+1
 1134 0184 3D020000 		.word	.L113+1
 1135 0188 19000000 		.word	.L80+1
 1136 018c 19000000 		.word	.L80+1
 1137 0190 8D020000 		.word	.L112+1
 1138 0194 19000000 		.word	.L80+1
 1139 0198 A9010000 		.word	.L111+1
 1140 019c 19000000 		.word	.L80+1
 1141 01a0 19000000 		.word	.L80+1
 1142 01a4 4B020000 		.word	.L108+1
 1143              		.p2align 1
 1144              	.L111:
 345:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1145              		.loc 1 345 17 is_stmt 1 view .LVU329
 345:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1146              		.loc 1 345 24 is_stmt 0 view .LVU330
 1147 01a8 0A22     		movs	r2, #10
 1148 01aa 0492     		str	r2, [sp, #16]
 348:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 1149              		.loc 1 348 17 is_stmt 1 view .LVU331
 1150              	.LVL126:
 1151              	.L169:
 392:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 1152              		.loc 1 392 17 view .LVU332
 392:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 1153              		.loc 1 392 20 is_stmt 0 view .LVU333
 1154 01ac 022B     		cmp	r3, #2
 1155 01ae 59D1     		bne	.L126
 1156              	.LVL127:
 393:tinyprintf.c  ****                 else
 1157              		.loc 1 393 21 is_stmt 1 view .LVU334
 1158 01b0 0734     		adds	r4, r4, #7
 1159              	.LVL128:
 393:tinyprintf.c  ****                 else
 1160              		.loc 1 393 21 is_stmt 0 view .LVU335
 1161 01b2 24F00704 		bic	r4, r4, #7
 1162              	.LVL129:
 393:tinyprintf.c  ****                 else
 1163              		.loc 1 393 21 view .LVU336
 1164 01b6 01AA     		add	r2, sp, #4
 1165 01b8 F4E80201 		ldrd	r0, [r4], #8
 1166              	.LVL130:
 393:tinyprintf.c  ****                 else
 1167              		.loc 1 393 21 view .LVU337
 1168 01bc FFF7FEFF 		bl	ulli2a
 1169              	.LVL131:
 1170              	.L127:
 401:tinyprintf.c  ****                 break;
 1171              		.loc 1 401 17 is_stmt 1 view .LVU338
 1172 01c0 4146     		mov	r1, r8
 1173 01c2 3846     		mov	r0, r7
ARM GAS  /tmp/cc8BcSyl.s 			page 34


 1174 01c4 01AA     		add	r2, sp, #4
 1175 01c6 FFF7FEFF 		bl	putchw
 1176              	.LVL132:
 402:tinyprintf.c  ****             case 'o':
 1177              		.loc 1 402 17 view .LVU339
 1178 01ca 25E7     		b	.L80
 1179              	.LVL133:
 1180              	.L115:
 361:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1181              		.loc 1 361 17 view .LVU340
 361:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1182              		.loc 1 361 24 is_stmt 0 view .LVU341
 1183 01cc 0A22     		movs	r2, #10
 364:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 1184              		.loc 1 364 20 view .LVU342
 1185 01ce 022B     		cmp	r3, #2
 361:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1186              		.loc 1 361 24 view .LVU343
 1187 01d0 0492     		str	r2, [sp, #16]
 364:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 1188              		.loc 1 364 17 is_stmt 1 view .LVU344
 364:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 1189              		.loc 1 364 20 is_stmt 0 view .LVU345
 1190 01d2 18D1     		bne	.L120
 365:tinyprintf.c  ****                 else
 1191              		.loc 1 365 21 is_stmt 1 view .LVU346
 1192 01d4 0734     		adds	r4, r4, #7
 1193              	.LVL134:
 365:tinyprintf.c  ****                 else
 1194              		.loc 1 365 21 is_stmt 0 view .LVU347
 1195 01d6 24F0070B 		bic	fp, r4, #7
 1196              	.LVL135:
 365:tinyprintf.c  ****                 else
 1197              		.loc 1 365 21 view .LVU348
 1198 01da FBE80201 		ldrd	r0, [fp], #8
 1199              	.LVL136:
 1200              	.LBB27:
 1201              	.LBI27:
 105:tinyprintf.c  **** {
 1202              		.loc 1 105 13 is_stmt 1 view .LVU349
 1203              	.LBB28:
 107:tinyprintf.c  ****         num = -num;
 1204              		.loc 1 107 5 view .LVU350
 107:tinyprintf.c  ****         num = -num;
 1205              		.loc 1 107 8 is_stmt 0 view .LVU351
 1206 01de 0028     		cmp	r0, #0
 1207 01e0 71F10003 		sbcs	r3, r1, #0
 1208              	.LVL137:
 107:tinyprintf.c  ****         num = -num;
 1209              		.loc 1 107 8 view .LVU352
 1210 01e4 05DA     		bge	.L121
 108:tinyprintf.c  ****         p->sign = '-';
 1211              		.loc 1 108 9 is_stmt 1 view .LVU353
 109:tinyprintf.c  ****     }
 1212              		.loc 1 109 17 is_stmt 0 view .LVU354
 1213 01e6 2D23     		movs	r3, #45
 108:tinyprintf.c  ****         p->sign = '-';
ARM GAS  /tmp/cc8BcSyl.s 			page 35


 1214              		.loc 1 108 13 view .LVU355
 1215 01e8 4042     		rsbs	r0, r0, #0
 1216 01ea 61EB4101 		sbc	r1, r1, r1, lsl #1
 1217              	.LVL138:
 109:tinyprintf.c  ****     }
 1218              		.loc 1 109 9 is_stmt 1 view .LVU356
 109:tinyprintf.c  ****     }
 1219              		.loc 1 109 17 is_stmt 0 view .LVU357
 1220 01ee 8DF80C30 		strb	r3, [sp, #12]
 1221              	.LVL139:
 1222              	.L121:
 111:tinyprintf.c  **** }
 1223              		.loc 1 111 5 is_stmt 1 view .LVU358
 1224 01f2 01AA     		add	r2, sp, #4
 1225              	.LVL140:
 111:tinyprintf.c  **** }
 1226              		.loc 1 111 5 is_stmt 0 view .LVU359
 1227 01f4 FFF7FEFF 		bl	ulli2a
 1228              	.LVL141:
 1229              	.L122:
 111:tinyprintf.c  **** }
 1230              		.loc 1 111 5 view .LVU360
 1231              	.LBE28:
 1232              	.LBE27:
 373:tinyprintf.c  ****                 break;
 1233              		.loc 1 373 17 is_stmt 1 view .LVU361
 1234 01f8 4146     		mov	r1, r8
 1235 01fa 3846     		mov	r0, r7
 1236 01fc 01AA     		add	r2, sp, #4
 1237 01fe FFF7FEFF 		bl	putchw
 1238              	.LVL142:
 374:tinyprintf.c  **** #ifdef SIZEOF_POINTER
 1239              		.loc 1 374 17 view .LVU362
 1240 0202 5C46     		mov	r4, fp
 1241 0204 08E7     		b	.L80
 1242              	.LVL143:
 1243              	.L120:
 368:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 1244              		.loc 1 368 19 view .LVU363
 368:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 1245              		.loc 1 368 22 is_stmt 0 view .LVU364
 1246 0206 012B     		cmp	r3, #1
 369:tinyprintf.c  ****                 else
 1247              		.loc 1 369 21 view .LVU365
 1248 0208 2068     		ldr	r0, [r4]
 1249 020a 04F1040B 		add	fp, r4, #4
 368:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 1250              		.loc 1 368 22 view .LVU366
 1251 020e 0AD1     		bne	.L123
 369:tinyprintf.c  ****                 else
 1252              		.loc 1 369 21 is_stmt 1 view .LVU367
 1253              	.LVL144:
 1254              	.LBB29:
 1255              	.LBI29:
 135:tinyprintf.c  **** {
 1256              		.loc 1 135 13 view .LVU368
 1257              	.LBB30:
ARM GAS  /tmp/cc8BcSyl.s 			page 36


 137:tinyprintf.c  ****         num = -num;
 1258              		.loc 1 137 5 view .LVU369
 137:tinyprintf.c  ****         num = -num;
 1259              		.loc 1 137 8 is_stmt 0 view .LVU370
 1260 0210 0028     		cmp	r0, #0
 138:tinyprintf.c  ****         p->sign = '-';
 1261              		.loc 1 138 9 is_stmt 1 view .LVU371
 139:tinyprintf.c  ****     }
 1262              		.loc 1 139 17 is_stmt 0 view .LVU372
 1263 0212 BCBF     		itt	lt
 1264 0214 2D23     		movlt	r3, #45
 1265              	.LVL145:
 138:tinyprintf.c  ****         p->sign = '-';
 1266              		.loc 1 138 13 view .LVU373
 1267 0216 4042     		rsblt	r0, r0, #0
 1268              	.LVL146:
 139:tinyprintf.c  ****     }
 1269              		.loc 1 139 9 is_stmt 1 view .LVU374
 141:tinyprintf.c  **** }
 1270              		.loc 1 141 5 is_stmt 0 view .LVU375
 1271 0218 01A9     		add	r1, sp, #4
 1272              	.LVL147:
 139:tinyprintf.c  ****     }
 1273              		.loc 1 139 17 view .LVU376
 1274 021a B8BF     		it	lt
 1275 021c 8DF80C30 		strblt	r3, [sp, #12]
 141:tinyprintf.c  **** }
 1276              		.loc 1 141 5 is_stmt 1 view .LVU377
 1277 0220 FFF7FEFF 		bl	uli2a
 1278              	.LVL148:
 142:tinyprintf.c  **** #endif
 1279              		.loc 1 142 1 is_stmt 0 view .LVU378
 1280 0224 E8E7     		b	.L122
 1281              	.LVL149:
 1282              	.L123:
 142:tinyprintf.c  **** #endif
 1283              		.loc 1 142 1 view .LVU379
 1284              	.LBE30:
 1285              	.LBE29:
 372:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1286              		.loc 1 372 21 is_stmt 1 view .LVU380
 1287              	.LBB31:
 1288              	.LBI31:
 164:tinyprintf.c  **** {
 1289              		.loc 1 164 13 view .LVU381
 1290              	.LBB32:
 166:tinyprintf.c  ****         num = -num;
 1291              		.loc 1 166 5 view .LVU382
 166:tinyprintf.c  ****         num = -num;
 1292              		.loc 1 166 8 is_stmt 0 view .LVU383
 1293 0226 0028     		cmp	r0, #0
 167:tinyprintf.c  ****         p->sign = '-';
 1294              		.loc 1 167 9 is_stmt 1 view .LVU384
 168:tinyprintf.c  ****     }
 1295              		.loc 1 168 17 is_stmt 0 view .LVU385
 1296 0228 BCBF     		itt	lt
 1297 022a 2D23     		movlt	r3, #45
ARM GAS  /tmp/cc8BcSyl.s 			page 37


 1298              	.LVL150:
 167:tinyprintf.c  ****         p->sign = '-';
 1299              		.loc 1 167 13 view .LVU386
 1300 022c 4042     		rsblt	r0, r0, #0
 1301              	.LVL151:
 168:tinyprintf.c  ****     }
 1302              		.loc 1 168 9 is_stmt 1 view .LVU387
 170:tinyprintf.c  **** }
 1303              		.loc 1 170 5 is_stmt 0 view .LVU388
 1304 022e 01A9     		add	r1, sp, #4
 1305              	.LVL152:
 168:tinyprintf.c  ****     }
 1306              		.loc 1 168 17 view .LVU389
 1307 0230 B8BF     		it	lt
 1308 0232 8DF80C30 		strblt	r3, [sp, #12]
 170:tinyprintf.c  **** }
 1309              		.loc 1 170 5 is_stmt 1 view .LVU390
 1310 0236 FFF7FEFF 		bl	ui2a
 1311              	.LVL153:
 171:tinyprintf.c  **** 
 1312              		.loc 1 171 1 is_stmt 0 view .LVU391
 1313 023a DDE7     		b	.L122
 1314              	.LVL154:
 1315              	.L113:
 171:tinyprintf.c  **** 
 1316              		.loc 1 171 1 view .LVU392
 1317              	.LBE32:
 1318              	.LBE31:
 377:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 1319              		.loc 1 377 17 is_stmt 1 view .LVU393
 377:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 1320              		.loc 1 377 23 is_stmt 0 view .LVU394
 1321 023c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1322              	.LVL155:
 377:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 1323              		.loc 1 377 23 view .LVU395
 1324 0240 43F00203 		orr	r3, r3, #2
 1325 0244 8DF80430 		strb	r3, [sp, #4]
 379:tinyprintf.c  **** # elif defined(SIZEOF_LONG) && SIZEOF_POINTER <= SIZEOF_LONG
 1326              		.loc 1 379 17 is_stmt 1 view .LVU396
 1327              	.LVL156:
 379:tinyprintf.c  **** # elif defined(SIZEOF_LONG) && SIZEOF_POINTER <= SIZEOF_LONG
 1328              		.loc 1 379 21 is_stmt 0 view .LVU397
 1329 0248 0023     		movs	r3, #0
 1330              	.LVL157:
 1331              	.L108:
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1332              		.loc 1 388 17 is_stmt 1 view .LVU398
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1333              		.loc 1 388 24 is_stmt 0 view .LVU399
 1334 024a 1022     		movs	r2, #16
 1335 024c 0492     		str	r2, [sp, #16]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1336              		.loc 1 389 17 is_stmt 1 view .LVU400
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1337              		.loc 1 389 37 is_stmt 0 view .LVU401
 1338 024e A1F15802 		sub	r2, r1, #88
ARM GAS  /tmp/cc8BcSyl.s 			page 38


 1339 0252 5142     		rsbs	r1, r2, #0
 1340              	.LVL158:
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1341              		.loc 1 389 37 view .LVU402
 1342 0254 5141     		adcs	r1, r1, r2
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1343              		.loc 1 389 22 view .LVU403
 1344 0256 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1345 025a 61F38202 		bfi	r2, r1, #2, #1
 1346 025e 8DF80420 		strb	r2, [sp, #4]
 1347 0262 A3E7     		b	.L169
 1348              	.L126:
 396:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 1349              		.loc 1 396 19 is_stmt 1 view .LVU404
 396:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 1350              		.loc 1 396 22 is_stmt 0 view .LVU405
 1351 0264 012B     		cmp	r3, #1
 1352 0266 54F8040B 		ldr	r0, [r4], #4
 1353              	.LVL159:
 397:tinyprintf.c  ****                 else
 1354              		.loc 1 397 21 view .LVU406
 1355 026a 01A9     		add	r1, sp, #4
 396:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 1356              		.loc 1 396 22 view .LVU407
 1357 026c 07D1     		bne	.L128
 1358              	.LVL160:
 397:tinyprintf.c  ****                 else
 1359              		.loc 1 397 21 is_stmt 1 view .LVU408
 397:tinyprintf.c  ****                 else
 1360              		.loc 1 397 21 is_stmt 0 view .LVU409
 1361 026e FFF7FEFF 		bl	uli2a
 1362              	.LVL161:
 1363 0272 A5E7     		b	.L127
 1364              	.LVL162:
 1365              	.L114:
 404:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 1366              		.loc 1 404 17 is_stmt 1 view .LVU410
 404:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 1367              		.loc 1 404 24 is_stmt 0 view .LVU411
 1368 0274 0823     		movs	r3, #8
 1369              	.LVL163:
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1370              		.loc 1 405 17 view .LVU412
 1371 0276 54F8040B 		ldr	r0, [r4], #4
 1372              	.LVL164:
 404:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 1373              		.loc 1 404 24 view .LVU413
 1374 027a 0493     		str	r3, [sp, #16]
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1375              		.loc 1 405 17 is_stmt 1 view .LVU414
 1376              	.LVL165:
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1377              		.loc 1 405 17 is_stmt 0 view .LVU415
 1378 027c 01A9     		add	r1, sp, #4
 1379              	.LVL166:
 1380              	.L128:
 400:tinyprintf.c  ****                 putchw(putp, putf, &p);
ARM GAS  /tmp/cc8BcSyl.s 			page 39


 1381              		.loc 1 400 21 is_stmt 1 view .LVU416
 400:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1382              		.loc 1 400 21 is_stmt 0 view .LVU417
 1383 027e FFF7FEFF 		bl	ui2a
 1384              	.LVL167:
 1385 0282 9DE7     		b	.L127
 1386              	.LVL168:
 1387              	.L116:
 409:tinyprintf.c  ****                 break;
 1388              		.loc 1 409 17 is_stmt 1 view .LVU418
 409:tinyprintf.c  ****                 break;
 1389              		.loc 1 409 17 is_stmt 0 view .LVU419
 1390 0284 54F8041B 		ldr	r1, [r4], #4
 1391              	.LVL169:
 409:tinyprintf.c  ****                 break;
 1392              		.loc 1 409 17 view .LVU420
 1393 0288 C9B2     		uxtb	r1, r1
 1394 028a D4E6     		b	.L107
 1395              	.LVL170:
 1396              	.L112:
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1397              		.loc 1 412 17 is_stmt 1 view .LVU421
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1398              		.loc 1 412 22 is_stmt 0 view .LVU422
 1399 028c 54F8043B 		ldr	r3, [r4], #4
 1400              	.LVL171:
 413:tinyprintf.c  ****                 p.bf = bf;
 1401              		.loc 1 413 17 view .LVU423
 1402 0290 4146     		mov	r1, r8
 1403              	.LVL172:
 413:tinyprintf.c  ****                 p.bf = bf;
 1404              		.loc 1 413 17 view .LVU424
 1405 0292 3846     		mov	r0, r7
 1406 0294 01AA     		add	r2, sp, #4
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1407              		.loc 1 412 22 view .LVU425
 1408 0296 0593     		str	r3, [sp, #20]
 413:tinyprintf.c  ****                 p.bf = bf;
 1409              		.loc 1 413 17 is_stmt 1 view .LVU426
 1410 0298 FFF7FEFF 		bl	putchw
 1411              	.LVL173:
 414:tinyprintf.c  ****                 break;
 1412              		.loc 1 414 17 view .LVU427
 414:tinyprintf.c  ****                 break;
 1413              		.loc 1 414 22 is_stmt 0 view .LVU428
 1414 029c 0596     		str	r6, [sp, #20]
 415:tinyprintf.c  ****             case '%':
 1415              		.loc 1 415 17 is_stmt 1 view .LVU429
 1416 029e BBE6     		b	.L80
 1417              	.LBE35:
 1418              		.cfi_endproc
 1419              	.LFE9:
 1421              		.section	.text.init_printf,"ax",%progbits
 1422              		.align	1
 1423              		.global	init_printf
 1424              		.syntax unified
 1425              		.thumb
ARM GAS  /tmp/cc8BcSyl.s 			page 40


 1426              		.thumb_func
 1427              		.fpu softvfp
 1429              	init_printf:
 1430              	.LVL174:
 1431              	.LFB10:
 431:tinyprintf.c  ****     stdout_putf = putf;
 1432              		.loc 1 431 1 view -0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
 431:tinyprintf.c  ****     stdout_putf = putf;
 1437              		.loc 1 431 1 is_stmt 0 view .LVU431
 432:tinyprintf.c  ****     stdout_putp = putp;
 1438              		.loc 1 432 5 is_stmt 1 view .LVU432
 432:tinyprintf.c  ****     stdout_putp = putp;
 1439              		.loc 1 432 17 is_stmt 0 view .LVU433
 1440 0000 014B     		ldr	r3, .L171
 433:tinyprintf.c  **** }
 1441              		.loc 1 433 17 view .LVU434
 1442 0002 C3E90010 		strd	r1, r0, [r3]
 434:tinyprintf.c  **** 
 1443              		.loc 1 434 1 view .LVU435
 1444 0006 7047     		bx	lr
 1445              	.L172:
 1446              		.align	2
 1447              	.L171:
 1448 0008 00000000 		.word	.LANCHOR0
 1449              		.cfi_endproc
 1450              	.LFE10:
 1452              		.section	.text.tfp_printf,"ax",%progbits
 1453              		.align	1
 1454              		.global	tfp_printf
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu softvfp
 1460              	tfp_printf:
 1461              	.LVL175:
 1462              	.LFB11:
 437:tinyprintf.c  ****     va_list va;
 1463              		.loc 1 437 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ args = 4, pretend = 16, frame = 8
 1466              		@ frame_needed = 0, uses_anonymous_args = 1
 437:tinyprintf.c  ****     va_list va;
 1467              		.loc 1 437 1 is_stmt 0 view .LVU437
 1468 0000 0FB4     		push	{r0, r1, r2, r3}
 1469              		.cfi_def_cfa_offset 16
 1470              		.cfi_offset 0, -16
 1471              		.cfi_offset 1, -12
 1472              		.cfi_offset 2, -8
 1473              		.cfi_offset 3, -4
 1474 0002 07B5     		push	{r0, r1, r2, lr}
 1475              		.cfi_def_cfa_offset 32
 1476              		.cfi_offset 14, -20
 438:tinyprintf.c  ****     va_start(va, fmt);
ARM GAS  /tmp/cc8BcSyl.s 			page 41


 1477              		.loc 1 438 5 is_stmt 1 view .LVU438
 439:tinyprintf.c  ****     tfp_format(stdout_putp, stdout_putf, fmt, va);
 1478              		.loc 1 439 5 view .LVU439
 440:tinyprintf.c  ****     va_end(va);
 1479              		.loc 1 440 5 is_stmt 0 view .LVU440
 1480 0004 0648     		ldr	r0, .L174
 437:tinyprintf.c  ****     va_list va;
 1481              		.loc 1 437 1 view .LVU441
 1482 0006 04AB     		add	r3, sp, #16
 1483 0008 53F8042B 		ldr	r2, [r3], #4
 440:tinyprintf.c  ****     va_end(va);
 1484              		.loc 1 440 5 view .LVU442
 1485 000c D0E90010 		ldrd	r1, r0, [r0]
 439:tinyprintf.c  ****     tfp_format(stdout_putp, stdout_putf, fmt, va);
 1486              		.loc 1 439 5 view .LVU443
 1487 0010 0193     		str	r3, [sp, #4]
 440:tinyprintf.c  ****     va_end(va);
 1488              		.loc 1 440 5 is_stmt 1 view .LVU444
 1489 0012 FFF7FEFF 		bl	tfp_format
 1490              	.LVL176:
 441:tinyprintf.c  **** }
 1491              		.loc 1 441 5 view .LVU445
 442:tinyprintf.c  **** #endif
 1492              		.loc 1 442 1 is_stmt 0 view .LVU446
 1493 0016 03B0     		add	sp, sp, #12
 1494              		.cfi_def_cfa_offset 20
 1495              		@ sp needed
 1496 0018 5DF804EB 		ldr	lr, [sp], #4
 1497              		.cfi_restore 14
 1498              		.cfi_def_cfa_offset 16
 1499 001c 04B0     		add	sp, sp, #16
 1500              		.cfi_restore 3
 1501              		.cfi_restore 2
 1502              		.cfi_restore 1
 1503              		.cfi_restore 0
 1504              		.cfi_def_cfa_offset 0
 1505 001e 7047     		bx	lr
 1506              	.L175:
 1507              		.align	2
 1508              	.L174:
 1509 0020 00000000 		.word	.LANCHOR0
 1510              		.cfi_endproc
 1511              	.LFE11:
 1513              		.section	.text.tfp_vsnprintf,"ax",%progbits
 1514              		.align	1
 1515              		.global	tfp_vsnprintf
 1516              		.syntax unified
 1517              		.thumb
 1518              		.thumb_func
 1519              		.fpu softvfp
 1521              	tfp_vsnprintf:
 1522              	.LVL177:
 1523              	.LFB13:
 462:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 1524              		.loc 1 462 1 is_stmt 1 view -0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc8BcSyl.s 			page 42


 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 462:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 1528              		.loc 1 462 1 is_stmt 0 view .LVU448
 1529 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1530              		.cfi_def_cfa_offset 24
 1531              		.cfi_offset 4, -8
 1532              		.cfi_offset 14, -4
 1533              	.LVL178:
 462:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 1534              		.loc 1 462 1 view .LVU449
 463:tinyprintf.c  **** 
 1535              		.loc 1 463 3 is_stmt 1 view .LVU450
 465:tinyprintf.c  ****     return 0;
 1536              		.loc 1 465 3 view .LVU451
 1537 0002 0024     		movs	r4, #0
 465:tinyprintf.c  ****     return 0;
 1538              		.loc 1 465 6 is_stmt 0 view .LVU452
 1539 0004 89B1     		cbz	r1, .L180
 468:tinyprintf.c  ****   data.dest_capacity = size-1;
 1540              		.loc 1 468 3 is_stmt 1 view .LVU453
 469:tinyprintf.c  ****   data.num_chars = 0;
 1541              		.loc 1 469 28 is_stmt 0 view .LVU454
 1542 0006 0139     		subs	r1, r1, #1
 1543              	.LVL179:
 468:tinyprintf.c  ****   data.dest_capacity = size-1;
 1544              		.loc 1 468 13 view .LVU455
 1545 0008 0290     		str	r0, [sp, #8]
 469:tinyprintf.c  ****   data.num_chars = 0;
 1546              		.loc 1 469 3 is_stmt 1 view .LVU456
 469:tinyprintf.c  ****   data.num_chars = 0;
 1547              		.loc 1 469 22 is_stmt 0 view .LVU457
 1548 000a 0191     		str	r1, [sp, #4]
 470:tinyprintf.c  ****   tfp_format(&data, _vsnprintf_putcf, format, ap);
 1549              		.loc 1 470 3 is_stmt 1 view .LVU458
 471:tinyprintf.c  **** 
 1550              		.loc 1 471 3 is_stmt 0 view .LVU459
 1551 000c 01A8     		add	r0, sp, #4
 1552              	.LVL180:
 471:tinyprintf.c  **** 
 1553              		.loc 1 471 3 view .LVU460
 1554 000e 0849     		ldr	r1, .L181
 1555              	.LVL181:
 470:tinyprintf.c  ****   tfp_format(&data, _vsnprintf_putcf, format, ap);
 1556              		.loc 1 470 18 view .LVU461
 1557 0010 0394     		str	r4, [sp, #12]
 471:tinyprintf.c  **** 
 1558              		.loc 1 471 3 is_stmt 1 view .LVU462
 1559 0012 FFF7FEFF 		bl	tfp_format
 1560              	.LVL182:
 473:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 1561              		.loc 1 473 3 view .LVU463
 473:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 1562              		.loc 1 473 11 is_stmt 0 view .LVU464
 1563 0016 0399     		ldr	r1, [sp, #12]
 473:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 1564              		.loc 1 473 28 view .LVU465
 1565 0018 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cc8BcSyl.s 			page 43


 1566 001a 029A     		ldr	r2, [sp, #8]
 474:tinyprintf.c  ****   else
 1567              		.loc 1 474 5 is_stmt 1 view .LVU466
 473:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 1568              		.loc 1 473 6 is_stmt 0 view .LVU467
 1569 001c 9942     		cmp	r1, r3
 474:tinyprintf.c  ****   else
 1570              		.loc 1 474 31 view .LVU468
 1571 001e 34BF     		ite	cc
 1572 0020 5454     		strbcc	r4, [r2, r1]
 476:tinyprintf.c  **** 
 1573              		.loc 1 476 5 is_stmt 1 view .LVU469
 476:tinyprintf.c  **** 
 1574              		.loc 1 476 35 is_stmt 0 view .LVU470
 1575 0022 D454     		strbcs	r4, [r2, r3]
 478:tinyprintf.c  **** }
 1576              		.loc 1 478 3 is_stmt 1 view .LVU471
 478:tinyprintf.c  **** }
 1577              		.loc 1 478 14 is_stmt 0 view .LVU472
 1578 0024 0398     		ldr	r0, [sp, #12]
 1579              	.L176:
 479:tinyprintf.c  **** 
 1580              		.loc 1 479 1 view .LVU473
 1581 0026 04B0     		add	sp, sp, #16
 1582              		.cfi_remember_state
 1583              		.cfi_def_cfa_offset 8
 1584              		@ sp needed
 1585 0028 10BD     		pop	{r4, pc}
 1586              	.LVL183:
 1587              	.L180:
 1588              		.cfi_restore_state
 466:tinyprintf.c  **** 
 1589              		.loc 1 466 12 view .LVU474
 1590 002a 0846     		mov	r0, r1
 1591              	.LVL184:
 466:tinyprintf.c  **** 
 1592              		.loc 1 466 12 view .LVU475
 1593 002c FBE7     		b	.L176
 1594              	.L182:
 1595 002e 00BF     		.align	2
 1596              	.L181:
 1597 0030 00000000 		.word	_vsnprintf_putcf
 1598              		.cfi_endproc
 1599              	.LFE13:
 1601              		.section	.text.tfp_snprintf,"ax",%progbits
 1602              		.align	1
 1603              		.global	tfp_snprintf
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu softvfp
 1609              	tfp_snprintf:
 1610              	.LVL185:
 1611              	.LFB14:
 482:tinyprintf.c  ****   va_list ap;
 1612              		.loc 1 482 1 is_stmt 1 view -0
 1613              		.cfi_startproc
ARM GAS  /tmp/cc8BcSyl.s 			page 44


 1614              		@ args = 4, pretend = 8, frame = 8
 1615              		@ frame_needed = 0, uses_anonymous_args = 1
 482:tinyprintf.c  ****   va_list ap;
 1616              		.loc 1 482 1 is_stmt 0 view .LVU477
 1617 0000 0CB4     		push	{r2, r3}
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 2, -8
 1620              		.cfi_offset 3, -4
 1621 0002 07B5     		push	{r0, r1, r2, lr}
 1622              		.cfi_def_cfa_offset 24
 1623              		.cfi_offset 14, -12
 483:tinyprintf.c  ****   int retval;
 1624              		.loc 1 483 3 is_stmt 1 view .LVU478
 484:tinyprintf.c  **** 
 1625              		.loc 1 484 3 view .LVU479
 486:tinyprintf.c  ****   retval = tfp_vsnprintf(str, size, format, ap);
 1626              		.loc 1 486 3 view .LVU480
 482:tinyprintf.c  ****   va_list ap;
 1627              		.loc 1 482 1 is_stmt 0 view .LVU481
 1628 0004 04AB     		add	r3, sp, #16
 1629 0006 53F8042B 		ldr	r2, [r3], #4
 486:tinyprintf.c  ****   retval = tfp_vsnprintf(str, size, format, ap);
 1630              		.loc 1 486 3 view .LVU482
 1631 000a 0193     		str	r3, [sp, #4]
 487:tinyprintf.c  ****   va_end(ap);
 1632              		.loc 1 487 3 is_stmt 1 view .LVU483
 487:tinyprintf.c  ****   va_end(ap);
 1633              		.loc 1 487 12 is_stmt 0 view .LVU484
 1634 000c FFF7FEFF 		bl	tfp_vsnprintf
 1635              	.LVL186:
 488:tinyprintf.c  ****   return retval;
 1636              		.loc 1 488 3 is_stmt 1 view .LVU485
 489:tinyprintf.c  **** }
 1637              		.loc 1 489 3 view .LVU486
 490:tinyprintf.c  **** 
 1638              		.loc 1 490 1 is_stmt 0 view .LVU487
 1639 0010 03B0     		add	sp, sp, #12
 1640              		.cfi_def_cfa_offset 12
 1641              		@ sp needed
 1642 0012 5DF804EB 		ldr	lr, [sp], #4
 1643              		.cfi_restore 14
 1644              		.cfi_def_cfa_offset 8
 1645 0016 02B0     		add	sp, sp, #8
 1646              		.cfi_restore 3
 1647              		.cfi_restore 2
 1648              		.cfi_def_cfa_offset 0
 1649 0018 7047     		bx	lr
 1650              		.cfi_endproc
 1651              	.LFE14:
 1653              		.section	.text.tfp_vsprintf,"ax",%progbits
 1654              		.align	1
 1655              		.global	tfp_vsprintf
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1659              		.fpu softvfp
 1661              	tfp_vsprintf:
ARM GAS  /tmp/cc8BcSyl.s 			page 45


 1662              	.LVL187:
 1663              	.LFB16:
 503:tinyprintf.c  **** 
 504:tinyprintf.c  **** int tfp_vsprintf(char *str, const char *format, va_list ap)
 505:tinyprintf.c  **** {
 1664              		.loc 1 505 1 is_stmt 1 view -0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 8
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              		.loc 1 505 1 is_stmt 0 view .LVU489
 1669 0000 13B5     		push	{r0, r1, r4, lr}
 1670              		.cfi_def_cfa_offset 16
 1671              		.cfi_offset 4, -8
 1672              		.cfi_offset 14, -4
 506:tinyprintf.c  ****   struct _vsprintf_putcf_data data;
 1673              		.loc 1 506 3 is_stmt 1 view .LVU490
 507:tinyprintf.c  ****   data.dest = str;
 1674              		.loc 1 507 3 view .LVU491
 508:tinyprintf.c  ****   data.num_chars = 0;
 1675              		.loc 1 508 18 is_stmt 0 view .LVU492
 1676 0002 0024     		movs	r4, #0
 505:tinyprintf.c  ****   struct _vsprintf_putcf_data data;
 1677              		.loc 1 505 1 view .LVU493
 1678 0004 1346     		mov	r3, r2
 507:tinyprintf.c  ****   data.dest = str;
 1679              		.loc 1 507 13 view .LVU494
 1680 0006 0090     		str	r0, [sp]
 1681              		.loc 1 508 3 is_stmt 1 view .LVU495
 509:tinyprintf.c  ****   tfp_format(&data, _vsprintf_putcf, format, ap);
 1682              		.loc 1 509 3 is_stmt 0 view .LVU496
 1683 0008 0A46     		mov	r2, r1
 1684              	.LVL188:
 1685              		.loc 1 509 3 view .LVU497
 1686 000a 6846     		mov	r0, sp
 1687              	.LVL189:
 1688              		.loc 1 509 3 view .LVU498
 1689 000c 0449     		ldr	r1, .L185
 1690              	.LVL190:
 508:tinyprintf.c  ****   data.num_chars = 0;
 1691              		.loc 1 508 18 view .LVU499
 1692 000e 0194     		str	r4, [sp, #4]
 1693              		.loc 1 509 3 is_stmt 1 view .LVU500
 1694 0010 FFF7FEFF 		bl	tfp_format
 1695              	.LVL191:
 510:tinyprintf.c  ****   data.dest[data.num_chars] = '\0';
 1696              		.loc 1 510 3 view .LVU501
 1697              		.loc 1 510 29 is_stmt 0 view .LVU502
 1698 0014 DDE90023 		ldrd	r2, r3, [sp]
 1699 0018 D454     		strb	r4, [r2, r3]
 511:tinyprintf.c  ****   return data.num_chars;
 1700              		.loc 1 511 3 is_stmt 1 view .LVU503
 512:tinyprintf.c  **** }
 1701              		.loc 1 512 1 is_stmt 0 view .LVU504
 1702 001a 0198     		ldr	r0, [sp, #4]
 1703 001c 02B0     		add	sp, sp, #8
 1704              		.cfi_def_cfa_offset 8
 1705              		@ sp needed
ARM GAS  /tmp/cc8BcSyl.s 			page 46


 1706 001e 10BD     		pop	{r4, pc}
 1707              	.L186:
 1708              		.align	2
 1709              	.L185:
 1710 0020 00000000 		.word	_vsprintf_putcf
 1711              		.cfi_endproc
 1712              	.LFE16:
 1714              		.section	.text.tfp_sprintf,"ax",%progbits
 1715              		.align	1
 1716              		.global	tfp_sprintf
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1720              		.fpu softvfp
 1722              	tfp_sprintf:
 1723              	.LVL192:
 1724              	.LFB17:
 513:tinyprintf.c  **** 
 514:tinyprintf.c  **** int tfp_sprintf(char *str, const char *format, ...)
 515:tinyprintf.c  **** {
 1725              		.loc 1 515 1 is_stmt 1 view -0
 1726              		.cfi_startproc
 1727              		@ args = 4, pretend = 12, frame = 8
 1728              		@ frame_needed = 0, uses_anonymous_args = 1
 1729              		.loc 1 515 1 is_stmt 0 view .LVU506
 1730 0000 0EB4     		push	{r1, r2, r3}
 1731              		.cfi_def_cfa_offset 12
 1732              		.cfi_offset 1, -12
 1733              		.cfi_offset 2, -8
 1734              		.cfi_offset 3, -4
 1735 0002 03B5     		push	{r0, r1, lr}
 1736              		.cfi_def_cfa_offset 24
 1737              		.cfi_offset 14, -16
 516:tinyprintf.c  ****   va_list ap;
 1738              		.loc 1 516 3 is_stmt 1 view .LVU507
 517:tinyprintf.c  ****   int retval;
 1739              		.loc 1 517 3 view .LVU508
 518:tinyprintf.c  **** 
 519:tinyprintf.c  ****   va_start(ap, format);
 1740              		.loc 1 519 3 view .LVU509
 515:tinyprintf.c  ****   va_list ap;
 1741              		.loc 1 515 1 is_stmt 0 view .LVU510
 1742 0004 03AA     		add	r2, sp, #12
 1743 0006 52F8041B 		ldr	r1, [r2], #4
 1744              		.loc 1 519 3 view .LVU511
 1745 000a 0192     		str	r2, [sp, #4]
 520:tinyprintf.c  ****   retval = tfp_vsprintf(str, format, ap);
 1746              		.loc 1 520 3 is_stmt 1 view .LVU512
 1747              		.loc 1 520 12 is_stmt 0 view .LVU513
 1748 000c FFF7FEFF 		bl	tfp_vsprintf
 1749              	.LVL193:
 521:tinyprintf.c  ****   va_end(ap);
 1750              		.loc 1 521 3 is_stmt 1 view .LVU514
 522:tinyprintf.c  ****   return retval;
 1751              		.loc 1 522 3 view .LVU515
 523:tinyprintf.c  **** }
 1752              		.loc 1 523 1 is_stmt 0 view .LVU516
ARM GAS  /tmp/cc8BcSyl.s 			page 47


 1753 0010 02B0     		add	sp, sp, #8
 1754              		.cfi_def_cfa_offset 16
 1755              		@ sp needed
 1756 0012 5DF804EB 		ldr	lr, [sp], #4
 1757              		.cfi_restore 14
 1758              		.cfi_def_cfa_offset 12
 1759 0016 03B0     		add	sp, sp, #12
 1760              		.cfi_restore 3
 1761              		.cfi_restore 2
 1762              		.cfi_restore 1
 1763              		.cfi_def_cfa_offset 0
 1764 0018 7047     		bx	lr
 1765              		.cfi_endproc
 1766              	.LFE17:
 1768              		.bss
 1769              		.align	2
 1770              		.set	.LANCHOR0,. + 0
 1773              	stdout_putf:
 1774 0000 00000000 		.space	4
 1777              	stdout_putp:
 1778 0004 00000000 		.space	4
 1779              		.text
 1780              	.Letext0:
 1781              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 1782              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1783              		.file 4 "tinyprintf.h"
 1784              		.file 5 "<built-in>"
ARM GAS  /tmp/cc8BcSyl.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tinyprintf.c
     /tmp/cc8BcSyl.s:17     .text.ulli2a:0000000000000000 $t
     /tmp/cc8BcSyl.s:24     .text.ulli2a:0000000000000000 ulli2a
     /tmp/cc8BcSyl.s:195    .text.uli2a:0000000000000000 $t
     /tmp/cc8BcSyl.s:201    .text.uli2a:0000000000000000 uli2a
     /tmp/cc8BcSyl.s:317    .text.ui2a:0000000000000000 $t
     /tmp/cc8BcSyl.s:323    .text.ui2a:0000000000000000 ui2a
     /tmp/cc8BcSyl.s:439    .text.putchw:0000000000000000 $t
     /tmp/cc8BcSyl.s:445    .text.putchw:0000000000000000 putchw
     /tmp/cc8BcSyl.s:697    .text._vsnprintf_putcf:0000000000000000 $t
     /tmp/cc8BcSyl.s:703    .text._vsnprintf_putcf:0000000000000000 _vsnprintf_putcf
     /tmp/cc8BcSyl.s:736    .text._vsprintf_putcf:0000000000000000 $t
     /tmp/cc8BcSyl.s:742    .text._vsprintf_putcf:0000000000000000 _vsprintf_putcf
     /tmp/cc8BcSyl.s:770    .text.tfp_format:0000000000000000 $t
     /tmp/cc8BcSyl.s:777    .text.tfp_format:0000000000000000 tfp_format
     /tmp/cc8BcSyl.s:1121   .text.tfp_format:0000000000000150 $d
     /tmp/cc8BcSyl.s:1143   .text.tfp_format:00000000000001a8 $t
     /tmp/cc8BcSyl.s:1422   .text.init_printf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1429   .text.init_printf:0000000000000000 init_printf
     /tmp/cc8BcSyl.s:1448   .text.init_printf:0000000000000008 $d
     /tmp/cc8BcSyl.s:1453   .text.tfp_printf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1460   .text.tfp_printf:0000000000000000 tfp_printf
     /tmp/cc8BcSyl.s:1509   .text.tfp_printf:0000000000000020 $d
     /tmp/cc8BcSyl.s:1514   .text.tfp_vsnprintf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1521   .text.tfp_vsnprintf:0000000000000000 tfp_vsnprintf
     /tmp/cc8BcSyl.s:1597   .text.tfp_vsnprintf:0000000000000030 $d
     /tmp/cc8BcSyl.s:1602   .text.tfp_snprintf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1609   .text.tfp_snprintf:0000000000000000 tfp_snprintf
     /tmp/cc8BcSyl.s:1654   .text.tfp_vsprintf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1661   .text.tfp_vsprintf:0000000000000000 tfp_vsprintf
     /tmp/cc8BcSyl.s:1710   .text.tfp_vsprintf:0000000000000020 $d
     /tmp/cc8BcSyl.s:1715   .text.tfp_sprintf:0000000000000000 $t
     /tmp/cc8BcSyl.s:1722   .text.tfp_sprintf:0000000000000000 tfp_sprintf
     /tmp/cc8BcSyl.s:1769   .bss:0000000000000000 $d
     /tmp/cc8BcSyl.s:1773   .bss:0000000000000000 stdout_putf
     /tmp/cc8BcSyl.s:1777   .bss:0000000000000004 stdout_putp

UNDEFINED SYMBOLS
__aeabi_uldivmod
