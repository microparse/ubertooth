ARM GAS  /tmp/ccTNYwvV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ubertooth_rssi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rssi_reset,"ax",%progbits
  16              		.align	1
  17              		.global	rssi_reset
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	rssi_reset:
  25              	.LFB0:
  26              		.file 1 "ubertooth_rssi.c"
   1:ubertooth_rssi.c **** /*
   2:ubertooth_rssi.c ****  * Copyright 2015 Hannes Ellinger
   3:ubertooth_rssi.c ****  *
   4:ubertooth_rssi.c ****  * This file is part of Project Ubertooth.
   5:ubertooth_rssi.c ****  *
   6:ubertooth_rssi.c ****  * This program is free software; you can redistribute it and/or modify
   7:ubertooth_rssi.c ****  * it under the terms of the GNU General Public License as published by
   8:ubertooth_rssi.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:ubertooth_rssi.c ****  * any later version.
  10:ubertooth_rssi.c ****  *
  11:ubertooth_rssi.c ****  * This program is distributed in the hope that it will be useful,
  12:ubertooth_rssi.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:ubertooth_rssi.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:ubertooth_rssi.c ****  * GNU General Public License for more details.
  15:ubertooth_rssi.c ****  *
  16:ubertooth_rssi.c ****  * You should have received a copy of the GNU General Public License
  17:ubertooth_rssi.c ****  * along with this program; see the file COPYING.  If not, write to
  18:ubertooth_rssi.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:ubertooth_rssi.c ****  * Boston, MA 02110-1301, USA.
  20:ubertooth_rssi.c ****  */
  21:ubertooth_rssi.c **** 
  22:ubertooth_rssi.c **** #include "ubertooth_rssi.h"
  23:ubertooth_rssi.c **** 
  24:ubertooth_rssi.c **** #include <string.h>
  25:ubertooth_rssi.c **** 
  26:ubertooth_rssi.c **** #define RSSI_IIR_ALPHA 3       // 3/256 = .012
  27:ubertooth_rssi.c **** 
  28:ubertooth_rssi.c **** int32_t rssi_sum;
  29:ubertooth_rssi.c **** int16_t rssi_iir[79] = {0};
  30:ubertooth_rssi.c **** 
  31:ubertooth_rssi.c **** void rssi_reset(void)
  32:ubertooth_rssi.c **** {
ARM GAS  /tmp/ccTNYwvV.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  33:ubertooth_rssi.c **** 	memset(rssi_iir, 0, sizeof(rssi_iir));
  35              		.loc 1 33 2 view .LVU1
  36 0002 9E22     		movs	r2, #158
  37 0004 0021     		movs	r1, #0
  38 0006 0748     		ldr	r0, .L2
  39 0008 FFF7FEFF 		bl	memset
  40              	.LVL0:
  34:ubertooth_rssi.c **** 
  35:ubertooth_rssi.c **** 	rssi_count = 0;
  41              		.loc 1 35 2 view .LVU2
  42              		.loc 1 35 13 is_stmt 0 view .LVU3
  43 000c 0023     		movs	r3, #0
  44 000e 064A     		ldr	r2, .L2+4
  45 0010 1370     		strb	r3, [r2]
  36:ubertooth_rssi.c **** 	rssi_sum = 0;
  46              		.loc 1 36 2 is_stmt 1 view .LVU4
  47              		.loc 1 36 11 is_stmt 0 view .LVU5
  48 0012 064A     		ldr	r2, .L2+8
  49 0014 1360     		str	r3, [r2]
  37:ubertooth_rssi.c **** 	rssi_max = INT8_MIN;
  50              		.loc 1 37 2 is_stmt 1 view .LVU6
  51              		.loc 1 37 11 is_stmt 0 view .LVU7
  52 0016 8022     		movs	r2, #128
  53 0018 054B     		ldr	r3, .L2+12
  54 001a 1A70     		strb	r2, [r3]
  38:ubertooth_rssi.c **** 	rssi_min = INT8_MAX;
  55              		.loc 1 38 2 is_stmt 1 view .LVU8
  56              		.loc 1 38 11 is_stmt 0 view .LVU9
  57 001c 7F22     		movs	r2, #127
  58 001e 054B     		ldr	r3, .L2+16
  59 0020 1A70     		strb	r2, [r3]
  39:ubertooth_rssi.c **** }
  60              		.loc 1 39 1 view .LVU10
  61 0022 08BD     		pop	{r3, pc}
  62              	.L3:
  63              		.align	2
  64              	.L2:
  65 0024 00000000 		.word	.LANCHOR0
  66 0028 00000000 		.word	rssi_count
  67 002c 00000000 		.word	rssi_sum
  68 0030 00000000 		.word	rssi_max
  69 0034 00000000 		.word	rssi_min
  70              		.cfi_endproc
  71              	.LFE0:
  73              		.section	.text.rssi_add,"ax",%progbits
  74              		.align	1
  75              		.global	rssi_add
  76              		.syntax unified
  77              		.thumb
ARM GAS  /tmp/ccTNYwvV.s 			page 3


  78              		.thumb_func
  79              		.fpu softvfp
  81              	rssi_add:
  82              	.LVL1:
  83              	.LFB1:
  40:ubertooth_rssi.c **** 
  41:ubertooth_rssi.c **** void rssi_add(int8_t v)
  42:ubertooth_rssi.c **** {
  84              		.loc 1 42 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              		.loc 1 42 1 is_stmt 0 view .LVU12
  43:ubertooth_rssi.c **** 	rssi_max = (v > rssi_max) ? v : rssi_max;
  90              		.loc 1 43 2 is_stmt 1 view .LVU13
  91              		.loc 1 43 11 is_stmt 0 view .LVU14
  92 0000 0B4A     		ldr	r2, .L5
  93              		.loc 1 43 32 view .LVU15
  94 0002 92F90030 		ldrsb	r3, [r2]
  95 0006 8342     		cmp	r3, r0
  96 0008 B8BF     		it	lt
  97 000a 0346     		movlt	r3, r0
  98              		.loc 1 43 11 view .LVU16
  99 000c 1370     		strb	r3, [r2]
  44:ubertooth_rssi.c **** 	rssi_min = (v < rssi_min) ? v : rssi_min;
 100              		.loc 1 44 2 is_stmt 1 view .LVU17
 101              		.loc 1 44 11 is_stmt 0 view .LVU18
 102 000e 094A     		ldr	r2, .L5+4
 103              		.loc 1 44 32 view .LVU19
 104 0010 92F90030 		ldrsb	r3, [r2]
 105 0014 8342     		cmp	r3, r0
 106 0016 A8BF     		it	ge
 107 0018 0346     		movge	r3, r0
 108              		.loc 1 44 11 view .LVU20
 109 001a 1370     		strb	r3, [r2]
  45:ubertooth_rssi.c **** 	rssi_sum += ((int32_t)v * 256);  // scaled int math (x256)
 110              		.loc 1 45 2 is_stmt 1 view .LVU21
 111              		.loc 1 45 11 is_stmt 0 view .LVU22
 112 001c 064A     		ldr	r2, .L5+8
 113 001e 1368     		ldr	r3, [r2]
 114 0020 03EB0020 		add	r0, r3, r0, lsl #8
 115              	.LVL2:
 116              		.loc 1 45 11 view .LVU23
 117 0024 1060     		str	r0, [r2]
  46:ubertooth_rssi.c **** 	rssi_count += 1;
 118              		.loc 1 46 2 is_stmt 1 view .LVU24
 119              		.loc 1 46 13 is_stmt 0 view .LVU25
 120 0026 054A     		ldr	r2, .L5+12
 121 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 122 002a 0133     		adds	r3, r3, #1
 123 002c 1370     		strb	r3, [r2]
  47:ubertooth_rssi.c **** }
 124              		.loc 1 47 1 view .LVU26
 125 002e 7047     		bx	lr
 126              	.L6:
 127              		.align	2
ARM GAS  /tmp/ccTNYwvV.s 			page 4


 128              	.L5:
 129 0030 00000000 		.word	rssi_max
 130 0034 00000000 		.word	rssi_min
 131 0038 00000000 		.word	rssi_sum
 132 003c 00000000 		.word	rssi_count
 133              		.cfi_endproc
 134              	.LFE1:
 136              		.section	.text.rssi_iir_update,"ax",%progbits
 137              		.align	1
 138              		.global	rssi_iir_update
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu softvfp
 144              	rssi_iir_update:
 145              	.LVL3:
 146              	.LFB2:
  48:ubertooth_rssi.c **** 
  49:ubertooth_rssi.c **** /* For sweep mode, update IIR per channel. Otherwise, use single value. */
  50:ubertooth_rssi.c **** void rssi_iir_update(uint16_t channel)
  51:ubertooth_rssi.c **** {
 147              		.loc 1 51 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 51 1 is_stmt 0 view .LVU28
 152 0000 10B5     		push	{r4, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
  52:ubertooth_rssi.c **** 	int32_t avg;
 156              		.loc 1 52 2 is_stmt 1 view .LVU29
  53:ubertooth_rssi.c **** 	int32_t rssi_iir_acc;
 157              		.loc 1 53 2 view .LVU30
  54:ubertooth_rssi.c **** 
  55:ubertooth_rssi.c **** 	/* Use array to track 79 Bluetooth channels, or just first slot
  56:ubertooth_rssi.c **** 	 * of array if the frequency is not a valid Bluetooth channel. */
  57:ubertooth_rssi.c **** 	if ( channel < 2402 || channel < 2480 )
 158              		.loc 1 57 2 view .LVU31
  58:ubertooth_rssi.c **** 		channel = 2402;
 159              		.loc 1 58 11 is_stmt 0 view .LVU32
 160 0002 40F66213 		movw	r3, #2402
 161 0006 B0F51B6F 		cmp	r0, #2480
 162 000a 38BF     		it	cc
 163 000c 1846     		movcc	r0, r3
 164              	.LVL4:
  59:ubertooth_rssi.c **** 
  60:ubertooth_rssi.c **** 	int i = channel - 2402;
 165              		.loc 1 60 2 is_stmt 1 view .LVU33
  61:ubertooth_rssi.c **** 
  62:ubertooth_rssi.c **** 	// IIR using scaled int math (x256)
  63:ubertooth_rssi.c **** 	if (rssi_count != 0)
 166              		.loc 1 63 17 is_stmt 0 view .LVU34
 167 000e 0D4B     		ldr	r3, .L12
  60:ubertooth_rssi.c **** 
 168              		.loc 1 60 6 view .LVU35
 169 0010 A0F66210 		subw	r0, r0, #2402
ARM GAS  /tmp/ccTNYwvV.s 			page 5


 170              	.LVL5:
 171              		.loc 1 63 2 is_stmt 1 view .LVU36
 172              		.loc 1 63 17 is_stmt 0 view .LVU37
 173 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174              		.loc 1 63 5 view .LVU38
 175 0016 23B1     		cbz	r3, .L9
  64:ubertooth_rssi.c **** 		avg = (rssi_sum  + 128) / rssi_count;
 176              		.loc 1 64 3 is_stmt 1 view .LVU39
 177              		.loc 1 64 20 is_stmt 0 view .LVU40
 178 0018 0B4A     		ldr	r2, .L12+4
 179 001a 1268     		ldr	r2, [r2]
 180 001c 8032     		adds	r2, r2, #128
 181              		.loc 1 64 7 view .LVU41
 182 001e 92FBF3F3 		sdiv	r3, r2, r3
 183              	.LVL6:
 184              	.L9:
  65:ubertooth_rssi.c **** 	else
  66:ubertooth_rssi.c **** 		avg = 0; // really an error
  67:ubertooth_rssi.c **** 	rssi_iir_acc = rssi_iir[i] * (256-RSSI_IIR_ALPHA);
 185              		.loc 1 67 2 is_stmt 1 view .LVU42
  68:ubertooth_rssi.c **** 	rssi_iir_acc += avg * RSSI_IIR_ALPHA;
 186              		.loc 1 68 15 is_stmt 0 view .LVU43
 187 0022 FD24     		movs	r4, #253
  67:ubertooth_rssi.c **** 	rssi_iir_acc += avg * RSSI_IIR_ALPHA;
 188              		.loc 1 67 25 view .LVU44
 189 0024 0949     		ldr	r1, .L12+8
 190              		.loc 1 68 22 view .LVU45
 191 0026 03EB4303 		add	r3, r3, r3, lsl #1
 192              	.LVL7:
  67:ubertooth_rssi.c **** 	rssi_iir_acc += avg * RSSI_IIR_ALPHA;
 193              		.loc 1 67 25 view .LVU46
 194 002a 31F91020 		ldrsh	r2, [r1, r0, lsl #1]
 195              	.LVL8:
 196              		.loc 1 68 2 is_stmt 1 view .LVU47
  69:ubertooth_rssi.c **** 	rssi_iir[i] = (int16_t)((rssi_iir_acc + 128) / 256);
 197              		.loc 1 69 2 view .LVU48
  68:ubertooth_rssi.c **** 	rssi_iir_acc += avg * RSSI_IIR_ALPHA;
 198              		.loc 1 68 15 is_stmt 0 view .LVU49
 199 002e 04FB0233 		mla	r3, r4, r2, r3
 200              		.loc 1 69 47 view .LVU50
 201 0032 13F18002 		adds	r2, r3, #128
 202 0036 48BF     		it	mi
 203 0038 03F27F12 		addwmi	r2, r3, #383
 204 003c 1212     		asrs	r2, r2, #8
 205              		.loc 1 69 16 view .LVU51
 206 003e 21F81020 		strh	r2, [r1, r0, lsl #1]	@ movhi
  70:ubertooth_rssi.c **** }
 207              		.loc 1 70 1 view .LVU52
 208 0042 10BD     		pop	{r4, pc}
 209              	.L13:
 210              		.align	2
 211              	.L12:
 212 0044 00000000 		.word	rssi_count
 213 0048 00000000 		.word	rssi_sum
 214 004c 00000000 		.word	.LANCHOR0
 215              		.cfi_endproc
 216              	.LFE2:
ARM GAS  /tmp/ccTNYwvV.s 			page 6


 218              		.section	.text.rssi_get_avg,"ax",%progbits
 219              		.align	1
 220              		.global	rssi_get_avg
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu softvfp
 226              	rssi_get_avg:
 227              	.LVL9:
 228              	.LFB3:
  71:ubertooth_rssi.c **** 
  72:ubertooth_rssi.c **** int8_t rssi_get_avg(uint16_t channel)
  73:ubertooth_rssi.c **** {
 229              		.loc 1 73 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 1 73 1 is_stmt 0 view .LVU54
  74:ubertooth_rssi.c **** 	/* Use array to track 79 Bluetooth channels, or just first slot
  75:ubertooth_rssi.c **** 	 * of array if the frequency is not a valid Bluetooth channel. */
  76:ubertooth_rssi.c **** 	if ( channel < 2402 || channel < 2480 )
 235              		.loc 1 76 2 is_stmt 1 view .LVU55
  77:ubertooth_rssi.c **** 		channel = 2402;
 236              		.loc 1 77 11 is_stmt 0 view .LVU56
 237 0000 40F66213 		movw	r3, #2402
 238 0004 B0F51B6F 		cmp	r0, #2480
 239 0008 38BF     		it	cc
 240 000a 1846     		movcc	r0, r3
 241              	.LVL10:
  78:ubertooth_rssi.c **** 
  79:ubertooth_rssi.c **** 	return (rssi_iir[channel-2402] + 128) / 256;
 242              		.loc 1 79 2 is_stmt 1 view .LVU57
 243              		.loc 1 79 18 is_stmt 0 view .LVU58
 244 000c 064B     		ldr	r3, .L17
 245 000e A0F66210 		subw	r0, r0, #2402
 246              	.LVL11:
 247              		.loc 1 79 18 view .LVU59
 248 0012 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
 249              		.loc 1 79 40 view .LVU60
 250 0016 13F18000 		adds	r0, r3, #128
 251              	.LVL12:
 252              		.loc 1 79 40 view .LVU61
 253 001a 48BF     		it	mi
 254 001c 03F27F10 		addwmi	r0, r3, #383
  80:ubertooth_rssi.c **** }
 255              		.loc 1 80 1 view .LVU62
 256 0020 40F30720 		sbfx	r0, r0, #8, #8
 257 0024 7047     		bx	lr
 258              	.L18:
 259 0026 00BF     		.align	2
 260              	.L17:
 261 0028 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE3:
 265              		.global	rssi_iir
 266              		.comm	rssi_sum,4,4
ARM GAS  /tmp/ccTNYwvV.s 			page 7


 267              		.comm	rssi_count,1,1
 268              		.comm	rssi_min,1,1
 269              		.comm	rssi_max,1,1
 270              		.bss
 271              		.align	1
 272              		.set	.LANCHOR0,. + 0
 275              	rssi_iir:
 276 0000 00000000 		.space	158
 276      00000000 
 276      00000000 
 276      00000000 
 276      00000000 
 277              		.text
 278              	.Letext0:
 279              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 280              		.file 3 "ubertooth_rssi.h"
 281              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 282              		.file 5 "/usr/include/newlib/sys/_types.h"
 283              		.file 6 "/usr/include/newlib/sys/reent.h"
 284              		.file 7 "/usr/include/newlib/sys/lock.h"
 285              		.file 8 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccTNYwvV.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ubertooth_rssi.c
     /tmp/ccTNYwvV.s:16     .text.rssi_reset:0000000000000000 $t
     /tmp/ccTNYwvV.s:24     .text.rssi_reset:0000000000000000 rssi_reset
     /tmp/ccTNYwvV.s:65     .text.rssi_reset:0000000000000024 $d
                            *COM*:0000000000000001 rssi_count
                            *COM*:0000000000000004 rssi_sum
                            *COM*:0000000000000001 rssi_max
                            *COM*:0000000000000001 rssi_min
     /tmp/ccTNYwvV.s:74     .text.rssi_add:0000000000000000 $t
     /tmp/ccTNYwvV.s:81     .text.rssi_add:0000000000000000 rssi_add
     /tmp/ccTNYwvV.s:129    .text.rssi_add:0000000000000030 $d
     /tmp/ccTNYwvV.s:137    .text.rssi_iir_update:0000000000000000 $t
     /tmp/ccTNYwvV.s:144    .text.rssi_iir_update:0000000000000000 rssi_iir_update
     /tmp/ccTNYwvV.s:212    .text.rssi_iir_update:0000000000000044 $d
     /tmp/ccTNYwvV.s:219    .text.rssi_get_avg:0000000000000000 $t
     /tmp/ccTNYwvV.s:226    .text.rssi_get_avg:0000000000000000 rssi_get_avg
     /tmp/ccTNYwvV.s:261    .text.rssi_get_avg:0000000000000028 $d
     /tmp/ccTNYwvV.s:275    .bss:0000000000000000 rssi_iir
     /tmp/ccTNYwvV.s:271    .bss:0000000000000000 $d

UNDEFINED SYMBOLS
memset
