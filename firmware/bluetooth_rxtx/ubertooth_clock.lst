ARM GAS  /tmp/ccTLmeV6.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ubertooth_clock.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.clkn_stop,"ax",%progbits
  16              		.align	1
  17              		.global	clkn_stop
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	clkn_stop:
  25              	.LFB0:
  26              		.file 1 "ubertooth_clock.c"
   1:ubertooth_clock.c **** /*
   2:ubertooth_clock.c ****  * Copyright 2015 Hannes Ellinger
   3:ubertooth_clock.c ****  *
   4:ubertooth_clock.c ****  * This file is part of Project Ubertooth.
   5:ubertooth_clock.c ****  *
   6:ubertooth_clock.c ****  * This program is free software; you can redistribute it and/or modify
   7:ubertooth_clock.c ****  * it under the terms of the GNU General Public License as published by
   8:ubertooth_clock.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:ubertooth_clock.c ****  * any later version.
  10:ubertooth_clock.c ****  *
  11:ubertooth_clock.c ****  * This program is distributed in the hope that it will be useful,
  12:ubertooth_clock.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:ubertooth_clock.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:ubertooth_clock.c ****  * GNU General Public License for more details.
  15:ubertooth_clock.c ****  *
  16:ubertooth_clock.c ****  * You should have received a copy of the GNU General Public License
  17:ubertooth_clock.c ****  * along with this program; see the file COPYING.  If not, write to
  18:ubertooth_clock.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:ubertooth_clock.c ****  * Boston, MA 02110-1301, USA.
  20:ubertooth_clock.c ****  */
  21:ubertooth_clock.c **** 
  22:ubertooth_clock.c **** #include "ubertooth_clock.h"
  23:ubertooth_clock.c **** #include "ubertooth.h"
  24:ubertooth_clock.c **** 
  25:ubertooth_clock.c **** void clkn_stop()
  26:ubertooth_clock.c **** {
  27              		.loc 1 26 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  27:ubertooth_clock.c **** 	/* stop and reset the timer to zero */
ARM GAS  /tmp/ccTLmeV6.s 			page 2


  28:ubertooth_clock.c **** 	T0TCR = TCR_Counter_Reset;
  32              		.loc 1 28 2 view .LVU1
  33              		.loc 1 28 8 is_stmt 0 view .LVU2
  34 0000 0222     		movs	r2, #2
  35 0002 0A4B     		ldr	r3, .L2
  36 0004 1A60     		str	r2, [r3]
  29:ubertooth_clock.c **** 
  30:ubertooth_clock.c **** 	clkn = 0;
  37              		.loc 1 30 2 is_stmt 1 view .LVU3
  38              		.loc 1 30 7 is_stmt 0 view .LVU4
  39 0006 0023     		movs	r3, #0
  40 0008 094A     		ldr	r2, .L2+4
  41 000a 1360     		str	r3, [r2]
  31:ubertooth_clock.c **** 	last_hop = 0;
  42              		.loc 1 31 2 is_stmt 1 view .LVU5
  43              		.loc 1 31 11 is_stmt 0 view .LVU6
  44 000c 094A     		ldr	r2, .L2+8
  45 000e 1360     		str	r3, [r2]
  32:ubertooth_clock.c **** 
  33:ubertooth_clock.c **** 	clkn_offset = 0;
  46              		.loc 1 33 2 is_stmt 1 view .LVU7
  47              		.loc 1 33 14 is_stmt 0 view .LVU8
  48 0010 094A     		ldr	r2, .L2+12
  49 0012 1360     		str	r3, [r2]
  34:ubertooth_clock.c **** 	clk100ns_offset = 0;
  50              		.loc 1 34 2 is_stmt 1 view .LVU9
  51              		.loc 1 34 18 is_stmt 0 view .LVU10
  52 0014 094A     		ldr	r2, .L2+16
  53 0016 1380     		strh	r3, [r2]	@ movhi
  35:ubertooth_clock.c **** 
  36:ubertooth_clock.c **** 	clk_drift_ppm = 0;
  54              		.loc 1 36 2 is_stmt 1 view .LVU11
  55              		.loc 1 36 16 is_stmt 0 view .LVU12
  56 0018 094A     		ldr	r2, .L2+20
  57 001a 1380     		strh	r3, [r2]	@ movhi
  37:ubertooth_clock.c **** 	clk_drift_correction = 0;
  58              		.loc 1 37 2 is_stmt 1 view .LVU13
  59              		.loc 1 37 23 is_stmt 0 view .LVU14
  60 001c 094A     		ldr	r2, .L2+24
  61 001e 1380     		strh	r3, [r2]	@ movhi
  38:ubertooth_clock.c **** 
  39:ubertooth_clock.c **** 	clkn_last_drift_fix = 0;
  62              		.loc 1 39 2 is_stmt 1 view .LVU15
  63              		.loc 1 39 22 is_stmt 0 view .LVU16
  64 0020 094A     		ldr	r2, .L2+28
  65 0022 1360     		str	r3, [r2]
  40:ubertooth_clock.c **** 	clkn_next_drift_fix = 0;
  66              		.loc 1 40 2 is_stmt 1 view .LVU17
  67              		.loc 1 40 22 is_stmt 0 view .LVU18
  68 0024 094A     		ldr	r2, .L2+32
  69 0026 1360     		str	r3, [r2]
  41:ubertooth_clock.c **** }
  70              		.loc 1 41 1 view .LVU19
  71 0028 7047     		bx	lr
  72              	.L3:
  73 002a 00BF     		.align	2
  74              	.L2:
ARM GAS  /tmp/ccTLmeV6.s 			page 3


  75 002c 04400040 		.word	1073758212
  76 0030 00000000 		.word	clkn
  77 0034 00000000 		.word	last_hop
  78 0038 00000000 		.word	clkn_offset
  79 003c 00000000 		.word	clk100ns_offset
  80 0040 00000000 		.word	clk_drift_ppm
  81 0044 00000000 		.word	clk_drift_correction
  82 0048 00000000 		.word	clkn_last_drift_fix
  83 004c 00000000 		.word	clkn_next_drift_fix
  84              		.cfi_endproc
  85              	.LFE0:
  87              		.section	.text.clkn_start,"ax",%progbits
  88              		.align	1
  89              		.global	clkn_start
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	clkn_start:
  96              	.LFB1:
  42:ubertooth_clock.c **** 
  43:ubertooth_clock.c **** void clkn_start()
  44:ubertooth_clock.c **** {
  97              		.loc 1 44 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
  45:ubertooth_clock.c **** 	/* start timer */
  46:ubertooth_clock.c **** 	T0TCR = TCR_Counter_Enable;
 102              		.loc 1 46 2 view .LVU21
 103              		.loc 1 46 8 is_stmt 0 view .LVU22
 104 0000 0122     		movs	r2, #1
 105 0002 014B     		ldr	r3, .L5
 106 0004 1A60     		str	r2, [r3]
  47:ubertooth_clock.c **** }
 107              		.loc 1 47 1 view .LVU23
 108 0006 7047     		bx	lr
 109              	.L6:
 110              		.align	2
 111              	.L5:
 112 0008 04400040 		.word	1073758212
 113              		.cfi_endproc
 114              	.LFE1:
 116              		.section	.text.clkn_init,"ax",%progbits
 117              		.align	1
 118              		.global	clkn_init
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	clkn_init:
 125              	.LFB2:
  48:ubertooth_clock.c **** 
  49:ubertooth_clock.c **** void clkn_init()
  50:ubertooth_clock.c **** {
 126              		.loc 1 50 1 is_stmt 1 view -0
ARM GAS  /tmp/ccTLmeV6.s 			page 4


 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 08B5     		push	{r3, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
  51:ubertooth_clock.c **** 	/*
  52:ubertooth_clock.c **** 	 * Because these are reset defaults, we're assuming TIMER0 is powered on
  53:ubertooth_clock.c **** 	 * and in timer mode.  The TIMER0 peripheral clock should have been set by
  54:ubertooth_clock.c **** 	 * clock_start().
  55:ubertooth_clock.c **** 	 */
  56:ubertooth_clock.c **** 
  57:ubertooth_clock.c **** 	clkn_stop();
 134              		.loc 1 57 2 view .LVU25
 135 0002 FFF7FEFF 		bl	clkn_stop
 136              	.LVL0:
  58:ubertooth_clock.c **** 
  59:ubertooth_clock.c **** #ifdef TC13BADGE
  60:ubertooth_clock.c **** 	/*
  61:ubertooth_clock.c **** 	 * The peripheral clock has a period of 33.3ns.  3 pclk periods makes one
  62:ubertooth_clock.c **** 	 * CLK100NS period (100 ns).
  63:ubertooth_clock.c **** 	 */
  64:ubertooth_clock.c **** 	T0PR = 2;
  65:ubertooth_clock.c **** #else
  66:ubertooth_clock.c **** 	/*
  67:ubertooth_clock.c **** 	 * The peripheral clock has a period of 20ns.  5 pclk periods
  68:ubertooth_clock.c **** 	 * makes one CLK100NS period (100 ns).
  69:ubertooth_clock.c **** 	 */
  70:ubertooth_clock.c **** 	T0PR = 4;
 137              		.loc 1 70 2 view .LVU26
 138              		.loc 1 70 7 is_stmt 0 view .LVU27
 139 0006 0422     		movs	r2, #4
 140 0008 054B     		ldr	r3, .L8
 141 000a 1A60     		str	r2, [r3]
  71:ubertooth_clock.c **** #endif
  72:ubertooth_clock.c **** 	/* 3125 * 100 ns = 312.5 us, the Bluetooth clock (CLKN). */
  73:ubertooth_clock.c **** 	T0MR0 = 3124;
 142              		.loc 1 73 2 is_stmt 1 view .LVU28
 143              		.loc 1 73 8 is_stmt 0 view .LVU29
 144 000c 40F63442 		movw	r2, #3124
 145 0010 DA60     		str	r2, [r3, #12]
  74:ubertooth_clock.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 146              		.loc 1 74 2 is_stmt 1 view .LVU30
 147              		.loc 1 74 8 is_stmt 0 view .LVU31
 148 0012 0322     		movs	r2, #3
 149 0014 9A60     		str	r2, [r3, #8]
  75:ubertooth_clock.c **** 	ISER0 = ISER0_ISE_TIMER0;
 150              		.loc 1 75 2 is_stmt 1 view .LVU32
 151              		.loc 1 75 8 is_stmt 0 view .LVU33
 152 0016 0222     		movs	r2, #2
 153 0018 024B     		ldr	r3, .L8+4
 154 001a 1A60     		str	r2, [r3]
  76:ubertooth_clock.c **** }
 155              		.loc 1 76 1 view .LVU34
 156 001c 08BD     		pop	{r3, pc}
 157              	.L9:
ARM GAS  /tmp/ccTLmeV6.s 			page 5


 158 001e 00BF     		.align	2
 159              	.L8:
 160 0020 0C400040 		.word	1073758220
 161 0024 00E100E0 		.word	-536813312
 162              		.cfi_endproc
 163              	.LFE2:
 165              		.section	.text.clkn_disable,"ax",%progbits
 166              		.align	1
 167              		.global	clkn_disable
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	clkn_disable:
 174              	.LFB3:
  77:ubertooth_clock.c **** 
  78:ubertooth_clock.c **** // totally disable clkn and timer0
  79:ubertooth_clock.c **** void clkn_disable(void) {
 175              		.loc 1 79 25 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 08B5     		push	{r3, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
  80:ubertooth_clock.c **** 	clkn_stop();
 183              		.loc 1 80 2 view .LVU36
 184 0002 FFF7FEFF 		bl	clkn_stop
 185              	.LVL1:
  81:ubertooth_clock.c **** 	ICER0 = ICER0_ICE_TIMER0;
 186              		.loc 1 81 2 view .LVU37
 187              		.loc 1 81 8 is_stmt 0 view .LVU38
 188 0006 0222     		movs	r2, #2
 189 0008 014B     		ldr	r3, .L11
 190 000a 1A60     		str	r2, [r3]
  82:ubertooth_clock.c **** }
 191              		.loc 1 82 1 view .LVU39
 192 000c 08BD     		pop	{r3, pc}
 193              	.L12:
 194 000e 00BF     		.align	2
 195              	.L11:
 196 0010 80E100E0 		.word	-536813184
 197              		.cfi_endproc
 198              	.LFE3:
 200              		.comm	clkn_next_drift_fix,4,4
 201              		.comm	clkn_last_drift_fix,4,4
 202              		.comm	clk_drift_correction,2,2
 203              		.comm	clk_drift_ppm,2,2
 204              		.comm	clk100ns_offset,2,2
 205              		.comm	clkn_offset,4,4
 206              		.comm	last_hop,4,4
 207              		.comm	clkn,4,4
 208              		.text
 209              	.Letext0:
 210              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 211              		.file 3 "ubertooth_clock.h"
ARM GAS  /tmp/ccTLmeV6.s 			page 6


 212              		.file 4 "../common/ubertooth.h"
ARM GAS  /tmp/ccTLmeV6.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ubertooth_clock.c
     /tmp/ccTLmeV6.s:16     .text.clkn_stop:0000000000000000 $t
     /tmp/ccTLmeV6.s:24     .text.clkn_stop:0000000000000000 clkn_stop
     /tmp/ccTLmeV6.s:75     .text.clkn_stop:000000000000002c $d
                            *COM*:0000000000000004 clkn
                            *COM*:0000000000000004 last_hop
                            *COM*:0000000000000004 clkn_offset
                            *COM*:0000000000000002 clk100ns_offset
                            *COM*:0000000000000002 clk_drift_ppm
                            *COM*:0000000000000002 clk_drift_correction
                            *COM*:0000000000000004 clkn_last_drift_fix
                            *COM*:0000000000000004 clkn_next_drift_fix
     /tmp/ccTLmeV6.s:88     .text.clkn_start:0000000000000000 $t
     /tmp/ccTLmeV6.s:95     .text.clkn_start:0000000000000000 clkn_start
     /tmp/ccTLmeV6.s:112    .text.clkn_start:0000000000000008 $d
     /tmp/ccTLmeV6.s:117    .text.clkn_init:0000000000000000 $t
     /tmp/ccTLmeV6.s:124    .text.clkn_init:0000000000000000 clkn_init
     /tmp/ccTLmeV6.s:160    .text.clkn_init:0000000000000020 $d
     /tmp/ccTLmeV6.s:166    .text.clkn_disable:0000000000000000 $t
     /tmp/ccTLmeV6.s:173    .text.clkn_disable:0000000000000000 clkn_disable
     /tmp/ccTLmeV6.s:196    .text.clkn_disable:0000000000000010 $d

NO UNDEFINED SYMBOLS
