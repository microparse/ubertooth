ARM GAS  /tmp/ccWIq688.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"xmas.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.xmas_main,"ax",%progbits
  16              		.align	1
  17              		.global	xmas_main
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	xmas_main:
  25              	.LFB2:
  26              		.file 1 "xmas.c"
   1:xmas.c        **** /*
   2:xmas.c        ****  * Copyright 2020 Mike Ryan
   3:xmas.c        ****  *
   4:xmas.c        ****  * This file is part of Project Ubertooth and is released under the
   5:xmas.c        ****  * terms of the GPL. Refer to COPYING for more information.
   6:xmas.c        ****  */
   7:xmas.c        **** 
   8:xmas.c        **** #include <stdlib.h>
   9:xmas.c        **** 
  10:xmas.c        **** #include "ubertooth.h"
  11:xmas.c        **** 
  12:xmas.c        **** extern volatile uint8_t requested_mode;
  13:xmas.c        **** 
  14:xmas.c        **** #define NOW T2TC
  15:xmas.c        **** 
  16:xmas.c        **** static void timer2_start(void) {
  17:xmas.c        **** 	PCONP |= PCONP_PCTIM2;
  18:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  19:xmas.c        **** 	T2PR = 50000-1; // 1 ms
  20:xmas.c        **** 	T2TCR = TCR_Counter_Enable;
  21:xmas.c        **** 
  22:xmas.c        **** 	// set up interrupt handler
  23:xmas.c        **** 	ISER0 = ISER0_ISE_TIMER2;
  24:xmas.c        **** }
  25:xmas.c        **** 
  26:xmas.c        **** static void timer2_stop(void) {
  27:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  28:xmas.c        **** 
  29:xmas.c        **** 	// clear interrupt handler
  30:xmas.c        **** 	ICER0 = ICER0_ICE_TIMER2;
  31:xmas.c        **** 
  32:xmas.c        **** 	PCONP &= ~PCONP_PCTIM2;
ARM GAS  /tmp/ccWIq688.s 			page 2


  33:xmas.c        **** }
  34:xmas.c        **** 
  35:xmas.c        **** #define BLINK (NOW + 400 + (rand() % 1200))
  36:xmas.c        **** 
  37:xmas.c        **** void xmas_main(void) {
  27              		.loc 1 37 22 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  38:xmas.c        **** 	// enable USB interrupts
  39:xmas.c        **** 	ISER0 = ISER0_ISE_USB;
  39              		.loc 1 39 2 view .LVU1
  40              		.loc 1 39 8 is_stmt 0 view .LVU2
  41 0004 4FF08073 		mov	r3, #16777216
  42 0008 294A     		ldr	r2, .L4
  43              	.LBB6:
  44              	.LBB7:
  17:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  45              		.loc 1 17 8 view .LVU3
  46 000a 2A4D     		ldr	r5, .L4+4
  47              	.LBE7:
  48              	.LBE6:
  49              		.loc 1 39 8 view .LVU4
  50 000c 1360     		str	r3, [r2]
  40:xmas.c        **** 
  41:xmas.c        **** 	timer2_start();
  51              		.loc 1 41 2 is_stmt 1 view .LVU5
  52              	.LBB11:
  53              	.LBI6:
  16:xmas.c        **** 	PCONP |= PCONP_PCTIM2;
  54              		.loc 1 16 13 view .LVU6
  55              	.LBB8:
  17:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  56              		.loc 1 17 2 view .LVU7
  17:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  57              		.loc 1 17 8 is_stmt 0 view .LVU8
  58 000e 2B68     		ldr	r3, [r5]
  19:xmas.c        **** 	T2TCR = TCR_Counter_Enable;
  59              		.loc 1 19 7 view .LVU9
  60 0010 4CF24F31 		movw	r1, #49999
  17:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
  61              		.loc 1 17 8 view .LVU10
  62 0014 43F48003 		orr	r3, r3, #4194304
  63 0018 2B60     		str	r3, [r5]
  18:xmas.c        **** 	T2PR = 50000-1; // 1 ms
  64              		.loc 1 18 2 is_stmt 1 view .LVU11
  18:xmas.c        **** 	T2PR = 50000-1; // 1 ms
  65              		.loc 1 18 8 is_stmt 0 view .LVU12
  66 001a 0223     		movs	r3, #2
ARM GAS  /tmp/ccWIq688.s 			page 3


  67 001c 264E     		ldr	r6, .L4+8
  68              	.LBE8:
  69              	.LBE11:
  42:xmas.c        **** 
  43:xmas.c        **** 	T2MR0 = BLINK;
  70              		.loc 1 43 10 view .LVU13
  71 001e 274F     		ldr	r7, .L4+12
  72              	.LBB12:
  73              	.LBB9:
  18:xmas.c        **** 	T2PR = 50000-1; // 1 ms
  74              		.loc 1 18 8 view .LVU14
  75 0020 3360     		str	r3, [r6]
  19:xmas.c        **** 	T2TCR = TCR_Counter_Enable;
  76              		.loc 1 19 2 is_stmt 1 view .LVU15
  19:xmas.c        **** 	T2TCR = TCR_Counter_Enable;
  77              		.loc 1 19 7 is_stmt 0 view .LVU16
  78 0022 274B     		ldr	r3, .L4+16
  79              	.LBE9:
  80              	.LBE12:
  81              		.loc 1 43 10 view .LVU17
  82 0024 4FF49664 		mov	r4, #1200
  83              	.LBB13:
  84              	.LBB10:
  19:xmas.c        **** 	T2TCR = TCR_Counter_Enable;
  85              		.loc 1 19 7 view .LVU18
  86 0028 1960     		str	r1, [r3]
  20:xmas.c        **** 
  87              		.loc 1 20 2 is_stmt 1 view .LVU19
  20:xmas.c        **** 
  88              		.loc 1 20 8 is_stmt 0 view .LVU20
  89 002a 0123     		movs	r3, #1
  90 002c 3360     		str	r3, [r6]
  23:xmas.c        **** }
  91              		.loc 1 23 2 is_stmt 1 view .LVU21
  23:xmas.c        **** }
  92              		.loc 1 23 8 is_stmt 0 view .LVU22
  93 002e 0823     		movs	r3, #8
  94 0030 1360     		str	r3, [r2]
  95              	.LBE10:
  96              	.LBE13:
  97              		.loc 1 43 2 is_stmt 1 view .LVU23
  98              		.loc 1 43 10 is_stmt 0 view .LVU24
  99 0032 D7F80080 		ldr	r8, [r7]
 100 0036 FFF7FEFF 		bl	rand
 101              	.LVL0:
 102 003a 90FBF4F3 		sdiv	r3, r0, r4
 103 003e 03FB1403 		mls	r3, r3, r4, r0
 104              		.loc 1 43 8 view .LVU25
 105 0042 204A     		ldr	r2, .L4+20
 106              		.loc 1 43 10 view .LVU26
 107 0044 08F5C878 		add	r8, r8, #400
 108 0048 4344     		add	r3, r3, r8
 109              		.loc 1 43 8 view .LVU27
 110 004a 1360     		str	r3, [r2]
  44:xmas.c        **** 	T2MR1 = BLINK;
 111              		.loc 1 44 2 is_stmt 1 view .LVU28
 112              		.loc 1 44 10 is_stmt 0 view .LVU29
ARM GAS  /tmp/ccWIq688.s 			page 4


 113 004c D7F80080 		ldr	r8, [r7]
 114 0050 FFF7FEFF 		bl	rand
 115              	.LVL1:
 116 0054 90FBF4F3 		sdiv	r3, r0, r4
 117 0058 03FB1403 		mls	r3, r3, r4, r0
 118              		.loc 1 44 8 view .LVU30
 119 005c 1A4A     		ldr	r2, .L4+24
 120              		.loc 1 44 10 view .LVU31
 121 005e 08F5C878 		add	r8, r8, #400
 122 0062 4344     		add	r3, r3, r8
 123              		.loc 1 44 8 view .LVU32
 124 0064 1360     		str	r3, [r2]
  45:xmas.c        **** 	T2MR2 = BLINK;
 125              		.loc 1 45 2 is_stmt 1 view .LVU33
 126              		.loc 1 45 10 is_stmt 0 view .LVU34
 127 0066 3F68     		ldr	r7, [r7]
 128 0068 FFF7FEFF 		bl	rand
 129              	.LVL2:
 130 006c 90FBF4F3 		sdiv	r3, r0, r4
 131 0070 03FB1404 		mls	r4, r3, r4, r0
 132 0074 07F5C877 		add	r7, r7, #400
 133              		.loc 1 45 8 view .LVU35
 134 0078 144B     		ldr	r3, .L4+28
  46:xmas.c        **** 
  47:xmas.c        **** 	T2MCR |= TMCR_MR0I | TMCR_MR1I | TMCR_MR2I;
 135              		.loc 1 47 8 view .LVU36
 136 007a 154A     		ldr	r2, .L4+32
  45:xmas.c        **** 	T2MR2 = BLINK;
 137              		.loc 1 45 10 view .LVU37
 138 007c 3C44     		add	r4, r4, r7
  45:xmas.c        **** 	T2MR2 = BLINK;
 139              		.loc 1 45 8 view .LVU38
 140 007e 1C60     		str	r4, [r3]
 141              		.loc 1 47 2 is_stmt 1 view .LVU39
 142              		.loc 1 47 8 is_stmt 0 view .LVU40
 143 0080 1368     		ldr	r3, [r2]
 144 0082 43F04903 		orr	r3, r3, #73
 145 0086 1360     		str	r3, [r2]
  48:xmas.c        **** 
  49:xmas.c        **** 	while (requested_mode == MODE_XMAS)
 146              		.loc 1 49 2 is_stmt 1 view .LVU41
 147              		.loc 1 49 24 is_stmt 0 view .LVU42
 148 0088 124A     		ldr	r2, .L4+36
 149              	.L2:
 150              		.loc 1 49 8 is_stmt 1 view .LVU43
 151              		.loc 1 49 24 is_stmt 0 view .LVU44
 152 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 153              		.loc 1 49 8 view .LVU45
 154 008c 112B     		cmp	r3, #17
 155 008e 0DD0     		beq	.L3
  50:xmas.c        **** 		asm("WFI"); // wait for interrupt
  51:xmas.c        **** 
  52:xmas.c        **** 	timer2_stop();
 156              		.loc 1 52 2 is_stmt 1 view .LVU46
 157              	.LBB14:
 158              	.LBI14:
  26:xmas.c        **** 	T2TCR = TCR_Counter_Reset;
ARM GAS  /tmp/ccWIq688.s 			page 5


 159              		.loc 1 26 13 view .LVU47
 160              	.LBB15:
  27:xmas.c        **** 
 161              		.loc 1 27 2 view .LVU48
  27:xmas.c        **** 
 162              		.loc 1 27 8 is_stmt 0 view .LVU49
 163 0090 0223     		movs	r3, #2
 164 0092 3360     		str	r3, [r6]
  30:xmas.c        **** 
 165              		.loc 1 30 2 is_stmt 1 view .LVU50
  30:xmas.c        **** 
 166              		.loc 1 30 8 is_stmt 0 view .LVU51
 167 0094 0823     		movs	r3, #8
 168 0096 104A     		ldr	r2, .L4+40
 169 0098 1360     		str	r3, [r2]
  32:xmas.c        **** }
 170              		.loc 1 32 2 is_stmt 1 view .LVU52
  32:xmas.c        **** }
 171              		.loc 1 32 8 is_stmt 0 view .LVU53
 172 009a 2B68     		ldr	r3, [r5]
 173 009c 23F48003 		bic	r3, r3, #4194304
 174 00a0 2B60     		str	r3, [r5]
 175              	.LBE15:
 176              	.LBE14:
  53:xmas.c        **** 
  54:xmas.c        **** 	// disable USB interrupts
  55:xmas.c        **** 	ICER0 = ICER0_ICE_USB;
 177              		.loc 1 55 2 is_stmt 1 view .LVU54
 178              		.loc 1 55 8 is_stmt 0 view .LVU55
 179 00a2 4FF08073 		mov	r3, #16777216
 180 00a6 1360     		str	r3, [r2]
  56:xmas.c        **** }
 181              		.loc 1 56 1 view .LVU56
 182 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 183              	.L3:
  50:xmas.c        **** 
 184              		.loc 1 50 3 is_stmt 1 view .LVU57
 185              		.syntax unified
 186              	@ 50 "xmas.c" 1
 187 00ac 30BF     		WFI
 188              	@ 0 "" 2
 189              		.thumb
 190              		.syntax unified
 191 00ae ECE7     		b	.L2
 192              	.L5:
 193              		.align	2
 194              	.L4:
 195 00b0 00E100E0 		.word	-536813312
 196 00b4 C4C00F40 		.word	1074774212
 197 00b8 04000940 		.word	1074331652
 198 00bc 08000940 		.word	1074331656
 199 00c0 0C000940 		.word	1074331660
 200 00c4 18000940 		.word	1074331672
 201 00c8 1C000940 		.word	1074331676
 202 00cc 20000940 		.word	1074331680
 203 00d0 14000940 		.word	1074331668
 204 00d4 00000000 		.word	requested_mode
ARM GAS  /tmp/ccWIq688.s 			page 6


 205 00d8 80E100E0 		.word	-536813184
 206              		.cfi_endproc
 207              	.LFE2:
 209              		.section	.text.TIMER2_IRQHandler,"ax",%progbits
 210              		.align	1
 211              		.global	TIMER2_IRQHandler
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu softvfp
 217              	TIMER2_IRQHandler:
 218              	.LFB3:
  57:xmas.c        **** 
  58:xmas.c        **** void TIMER2_IRQHandler(void) {
 219              		.loc 1 58 30 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
  59:xmas.c        **** 	if (T2IR & TIR_MR0_Interrupt) {
 227              		.loc 1 59 2 view .LVU59
 228              		.loc 1 59 6 is_stmt 0 view .LVU60
 229 0002 2F4B     		ldr	r3, .L28
 230 0004 1A68     		ldr	r2, [r3]
 231              		.loc 1 59 5 view .LVU61
 232 0006 D007     		lsls	r0, r2, #31
 233 0008 1AD5     		bpl	.L7
  60:xmas.c        **** 		T2IR = TIR_MR0_Interrupt;
 234              		.loc 1 60 3 is_stmt 1 view .LVU62
 235              		.loc 1 60 8 is_stmt 0 view .LVU63
 236 000a 0122     		movs	r2, #1
 237 000c 1A60     		str	r2, [r3]
  61:xmas.c        **** 		if (USRLED) USRLED_CLR; else USRLED_SET;
 238              		.loc 1 61 3 is_stmt 1 view .LVU64
 239              		.loc 1 61 7 is_stmt 0 view .LVU65
 240 000e 2D4B     		ldr	r3, .L28+4
 241 0010 1B68     		ldr	r3, [r3]
 242              		.loc 1 61 6 view .LVU66
 243 0012 13F0020F 		tst	r3, #2
 244 0016 4FF00203 		mov	r3, #2
 245              		.loc 1 61 15 is_stmt 1 view .LVU67
 246 001a 14BF     		ite	ne
 247 001c 2A4A     		ldrne	r2, .L28+8
 248              		.loc 1 61 32 view .LVU68
 249 001e 2B4A     		ldreq	r2, .L28+12
 250 0020 1360     		str	r3, [r2]
  62:xmas.c        **** 		T2MR0 = BLINK;
 251              		.loc 1 62 3 view .LVU69
 252              		.loc 1 62 11 is_stmt 0 view .LVU70
 253 0022 2B4B     		ldr	r3, .L28+16
 254 0024 1C68     		ldr	r4, [r3]
 255 0026 FFF7FEFF 		bl	rand
 256              	.LVL3:
 257 002a 4FF49663 		mov	r3, #1200
ARM GAS  /tmp/ccWIq688.s 			page 7


 258 002e 90FBF3F2 		sdiv	r2, r0, r3
 259 0032 02FB1303 		mls	r3, r2, r3, r0
 260 0036 04F5C874 		add	r4, r4, #400
 261              		.loc 1 62 9 view .LVU71
 262 003a 264A     		ldr	r2, .L28+20
 263              		.loc 1 62 11 view .LVU72
 264 003c 2344     		add	r3, r3, r4
 265              		.loc 1 62 9 view .LVU73
 266 003e 1360     		str	r3, [r2]
 267              	.L7:
  63:xmas.c        **** 	}
  64:xmas.c        **** 	if (T2IR & TIR_MR1_Interrupt) {
 268              		.loc 1 64 2 is_stmt 1 view .LVU74
 269              		.loc 1 64 6 is_stmt 0 view .LVU75
 270 0040 1F4B     		ldr	r3, .L28
 271 0042 1A68     		ldr	r2, [r3]
 272              		.loc 1 64 5 view .LVU76
 273 0044 9107     		lsls	r1, r2, #30
 274 0046 1AD5     		bpl	.L10
  65:xmas.c        **** 		T2IR = TIR_MR1_Interrupt;
 275              		.loc 1 65 3 is_stmt 1 view .LVU77
 276              		.loc 1 65 8 is_stmt 0 view .LVU78
 277 0048 0222     		movs	r2, #2
 278 004a 1A60     		str	r2, [r3]
  66:xmas.c        **** 		if (RXLED) RXLED_CLR; else RXLED_SET;
 279              		.loc 1 66 3 is_stmt 1 view .LVU79
 280              		.loc 1 66 7 is_stmt 0 view .LVU80
 281 004c 1D4B     		ldr	r3, .L28+4
 282 004e 1B68     		ldr	r3, [r3]
 283              		.loc 1 66 6 view .LVU81
 284 0050 13F0100F 		tst	r3, #16
 285 0054 4FF01003 		mov	r3, #16
 286              		.loc 1 66 14 is_stmt 1 view .LVU82
 287 0058 14BF     		ite	ne
 288 005a 1B4A     		ldrne	r2, .L28+8
 289              		.loc 1 66 30 view .LVU83
 290 005c 1B4A     		ldreq	r2, .L28+12
 291 005e 1360     		str	r3, [r2]
  67:xmas.c        **** 		T2MR1 = BLINK;
 292              		.loc 1 67 3 view .LVU84
 293              		.loc 1 67 11 is_stmt 0 view .LVU85
 294 0060 1B4B     		ldr	r3, .L28+16
 295 0062 1C68     		ldr	r4, [r3]
 296 0064 FFF7FEFF 		bl	rand
 297              	.LVL4:
 298 0068 4FF49663 		mov	r3, #1200
 299 006c 90FBF3F2 		sdiv	r2, r0, r3
 300 0070 02FB1303 		mls	r3, r2, r3, r0
 301 0074 04F5C874 		add	r4, r4, #400
 302              		.loc 1 67 9 view .LVU86
 303 0078 174A     		ldr	r2, .L28+24
 304              		.loc 1 67 11 view .LVU87
 305 007a 2344     		add	r3, r3, r4
 306              		.loc 1 67 9 view .LVU88
 307 007c 1360     		str	r3, [r2]
 308              	.L10:
  68:xmas.c        **** 	}
ARM GAS  /tmp/ccWIq688.s 			page 8


  69:xmas.c        **** 	if (T2IR & TIR_MR2_Interrupt) {
 309              		.loc 1 69 2 is_stmt 1 view .LVU89
 310              		.loc 1 69 6 is_stmt 0 view .LVU90
 311 007e 104B     		ldr	r3, .L28
 312 0080 1A68     		ldr	r2, [r3]
 313              		.loc 1 69 5 view .LVU91
 314 0082 5207     		lsls	r2, r2, #29
 315 0084 1AD5     		bpl	.L6
  70:xmas.c        **** 		T2IR = TIR_MR2_Interrupt;
 316              		.loc 1 70 3 is_stmt 1 view .LVU92
 317              		.loc 1 70 8 is_stmt 0 view .LVU93
 318 0086 0422     		movs	r2, #4
 319 0088 1A60     		str	r2, [r3]
  71:xmas.c        **** 		if (TXLED) TXLED_CLR; else TXLED_SET;
 320              		.loc 1 71 3 is_stmt 1 view .LVU94
 321              		.loc 1 71 7 is_stmt 0 view .LVU95
 322 008a 0E4B     		ldr	r3, .L28+4
 323 008c 1B68     		ldr	r3, [r3]
 324              		.loc 1 71 6 view .LVU96
 325 008e 13F4807F 		tst	r3, #256
 326 0092 4FF48073 		mov	r3, #256
 327              		.loc 1 71 14 is_stmt 1 view .LVU97
 328 0096 14BF     		ite	ne
 329 0098 0B4A     		ldrne	r2, .L28+8
 330              		.loc 1 71 30 view .LVU98
 331 009a 0C4A     		ldreq	r2, .L28+12
 332 009c 1360     		str	r3, [r2]
  72:xmas.c        **** 		T2MR2 = BLINK;
 333              		.loc 1 72 3 view .LVU99
 334              		.loc 1 72 11 is_stmt 0 view .LVU100
 335 009e 0C4B     		ldr	r3, .L28+16
 336 00a0 1C68     		ldr	r4, [r3]
 337 00a2 FFF7FEFF 		bl	rand
 338              	.LVL5:
 339 00a6 4FF49663 		mov	r3, #1200
 340 00aa 90FBF3F2 		sdiv	r2, r0, r3
 341 00ae 02FB1303 		mls	r3, r2, r3, r0
 342 00b2 04F5C874 		add	r4, r4, #400
 343              		.loc 1 72 9 view .LVU101
 344 00b6 094A     		ldr	r2, .L28+28
 345              		.loc 1 72 11 view .LVU102
 346 00b8 2344     		add	r3, r3, r4
 347              		.loc 1 72 9 view .LVU103
 348 00ba 1360     		str	r3, [r2]
 349              	.L6:
  73:xmas.c        **** 	}
  74:xmas.c        **** }
 350              		.loc 1 74 1 view .LVU104
 351 00bc 10BD     		pop	{r4, pc}
 352              	.L29:
 353 00be 00BF     		.align	2
 354              	.L28:
 355 00c0 00000940 		.word	1074331648
 356 00c4 34C00920 		.word	537509940
 357 00c8 3CC00920 		.word	537509948
 358 00cc 38C00920 		.word	537509944
 359 00d0 08000940 		.word	1074331656
ARM GAS  /tmp/ccWIq688.s 			page 9


 360 00d4 18000940 		.word	1074331672
 361 00d8 1C000940 		.word	1074331676
 362 00dc 20000940 		.word	1074331680
 363              		.cfi_endproc
 364              	.LFE3:
 366              		.text
 367              	.Letext0:
 368              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 369              		.file 3 "/usr/include/newlib/sys/_types.h"
 370              		.file 4 "/usr/include/newlib/sys/reent.h"
 371              		.file 5 "/usr/include/newlib/sys/lock.h"
 372              		.file 6 "/usr/include/newlib/stdlib.h"
 373              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 374              		.file 8 "../common/ubertooth.h"
ARM GAS  /tmp/ccWIq688.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 xmas.c
     /tmp/ccWIq688.s:16     .text.xmas_main:0000000000000000 $t
     /tmp/ccWIq688.s:24     .text.xmas_main:0000000000000000 xmas_main
     /tmp/ccWIq688.s:195    .text.xmas_main:00000000000000b0 $d
     /tmp/ccWIq688.s:210    .text.TIMER2_IRQHandler:0000000000000000 $t
     /tmp/ccWIq688.s:217    .text.TIMER2_IRQHandler:0000000000000000 TIMER2_IRQHandler
     /tmp/ccWIq688.s:355    .text.TIMER2_IRQHandler:00000000000000c0 $d

UNDEFINED SYMBOLS
rand
requested_mode
