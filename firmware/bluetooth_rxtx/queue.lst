ARM GAS  /tmp/cc8VsosW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.queue_init,"ax",%progbits
  16              		.align	1
  17              		.global	queue_init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	queue_init:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "queue.c"
   1:queue.c       **** /*
   2:queue.c       ****  * Copyright 2017 Mike Ryan
   3:queue.c       ****  *
   4:queue.c       ****  * This file is part of Project Ubertooth and is released under the
   5:queue.c       ****  * terms of the GPL. Refer to COPYING for more information.
   6:queue.c       ****  */
   7:queue.c       **** 
   8:queue.c       **** #include "queue.h"
   9:queue.c       **** 
  10:queue.c       **** // queue implementation is based heavily on Koopman's "Better Embedded
  11:queue.c       **** // Systems Software" section 20.3.3.1 pg 209
  12:queue.c       **** 
  13:queue.c       **** void queue_init(queue_t *f) {
  28              		.loc 1 13 29 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 13 29 is_stmt 0 view .LVU1
  14:queue.c       **** 	f->head = 0;
  34              		.loc 1 14 2 is_stmt 1 view .LVU2
  35              		.loc 1 14 10 is_stmt 0 view .LVU3
  36 0000 0023     		movs	r3, #0
  15:queue.c       **** 	f->tail = 0;
  37              		.loc 1 15 10 view .LVU4
  38 0002 C0E90A33 		strd	r3, r3, [r0, #40]
  16:queue.c       **** }
  39              		.loc 1 16 1 view .LVU5
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE0:
ARM GAS  /tmp/cc8VsosW.s 			page 2


  44              		.section	.text.queue_insert,"ax",%progbits
  45              		.align	1
  46              		.global	queue_insert
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	queue_insert:
  53              	.LVL1:
  54              	.LFB1:
  17:queue.c       **** 
  18:queue.c       **** // insert
  19:queue.c       **** int queue_insert(queue_t *f, void *x) {
  55              		.loc 1 19 39 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 1 19 39 is_stmt 0 view .LVU7
  20:queue.c       **** 	unsigned newtail;
  61              		.loc 1 20 2 is_stmt 1 view .LVU8
  21:queue.c       **** 	// access next free element
  22:queue.c       **** 	newtail = f->tail + 1;
  62              		.loc 1 22 2 view .LVU9
  63              		.loc 1 22 10 is_stmt 0 view .LVU10
  64 0000 C36A     		ldr	r3, [r0, #44]
  23:queue.c       **** 
  24:queue.c       **** 	// wrap around to beginning if needed
  25:queue.c       **** 	if (newtail >= FIFOSIZE) { newtail = 0; }
  26:queue.c       **** 
  27:queue.c       **** 	// if head and tail are equal, queue is full
  28:queue.c       **** 	if (newtail == f->head) { return 0; }
  65              		.loc 1 28 5 view .LVU11
  66 0002 826A     		ldr	r2, [r0, #40]
  22:queue.c       **** 
  67              		.loc 1 22 10 view .LVU12
  68 0004 0133     		adds	r3, r3, #1
  69              	.LVL2:
  25:queue.c       **** 
  70              		.loc 1 25 2 is_stmt 1 view .LVU13
  25:queue.c       **** 
  71              		.loc 1 25 37 is_stmt 0 view .LVU14
  72 0006 0A2B     		cmp	r3, #10
  73 0008 28BF     		it	cs
  74 000a 0023     		movcs	r3, #0
  75              	.LVL3:
  76              		.loc 1 28 2 is_stmt 1 view .LVU15
  77              		.loc 1 28 5 is_stmt 0 view .LVU16
  78 000c 9A42     		cmp	r2, r3
  29:queue.c       **** 
  30:queue.c       **** 	// write data before updating pointer
  31:queue.c       **** 	f->data[newtail] = x;
  79              		.loc 1 31 2 is_stmt 1 view .LVU17
  80              		.loc 1 31 19 is_stmt 0 view .LVU18
  81 000e 1DBF     		ittte	ne
  82 0010 40F82310 		strne	r1, [r0, r3, lsl #2]
  32:queue.c       **** 	f->tail = newtail;
ARM GAS  /tmp/cc8VsosW.s 			page 3


  83              		.loc 1 32 2 is_stmt 1 view .LVU19
  84              		.loc 1 32 10 is_stmt 0 view .LVU20
  85 0014 C362     		strne	r3, [r0, #44]
  33:queue.c       **** 
  34:queue.c       **** 	return 1;
  86              		.loc 1 34 2 is_stmt 1 view .LVU21
  87              		.loc 1 34 9 is_stmt 0 view .LVU22
  88 0016 0120     		movne	r0, #1
  89              	.LVL4:
  28:queue.c       **** 
  90              		.loc 1 28 35 view .LVU23
  91 0018 0020     		moveq	r0, #0
  35:queue.c       **** }
  92              		.loc 1 35 1 view .LVU24
  93 001a 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE1:
  97              		.section	.text.queue_remove,"ax",%progbits
  98              		.align	1
  99              		.global	queue_remove
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	queue_remove:
 106              	.LVL5:
 107              	.LFB2:
  36:queue.c       **** 
  37:queue.c       **** // TODO remove
  38:queue.c       **** int queue_remove(queue_t *f, void **x) {
 108              		.loc 1 38 40 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              		.loc 1 38 40 is_stmt 0 view .LVU26
  39:queue.c       **** 	unsigned newhead;
 114              		.loc 1 39 2 is_stmt 1 view .LVU27
  40:queue.c       **** 
  41:queue.c       **** 	if (f->head == f->tail) { return 0; }
 115              		.loc 1 41 2 view .LVU28
 116              		.loc 1 41 5 is_stmt 0 view .LVU29
 117 0000 D0E90A32 		ldrd	r3, r2, [r0, #40]
 118 0004 9342     		cmp	r3, r2
 119 0006 09D0     		beq	.L9
  42:queue.c       **** 
  43:queue.c       **** 	newhead = f->head + 1;
 120              		.loc 1 43 2 is_stmt 1 view .LVU30
 121              		.loc 1 43 10 is_stmt 0 view .LVU31
 122 0008 0133     		adds	r3, r3, #1
 123              	.LVL6:
  44:queue.c       **** 
  45:queue.c       **** 	if (newhead >= FIFOSIZE) { newhead = 0; }
 124              		.loc 1 45 2 is_stmt 1 view .LVU32
 125              		.loc 1 45 37 is_stmt 0 view .LVU33
 126 000a 0A2B     		cmp	r3, #10
 127 000c 28BF     		it	cs
ARM GAS  /tmp/cc8VsosW.s 			page 4


 128 000e 0023     		movcs	r3, #0
 129              	.LVL7:
  46:queue.c       **** 
  47:queue.c       **** 	*x = f->data[newhead];
 130              		.loc 1 47 2 is_stmt 1 view .LVU34
 131              		.loc 1 47 14 is_stmt 0 view .LVU35
 132 0010 50F82320 		ldr	r2, [r0, r3, lsl #2]
 133              		.loc 1 47 5 view .LVU36
 134 0014 0A60     		str	r2, [r1]
  48:queue.c       **** 	f->head = newhead;
 135              		.loc 1 48 2 is_stmt 1 view .LVU37
 136              		.loc 1 48 10 is_stmt 0 view .LVU38
 137 0016 8362     		str	r3, [r0, #40]
  49:queue.c       **** 
  50:queue.c       **** 	return 1;
 138              		.loc 1 50 2 is_stmt 1 view .LVU39
 139              		.loc 1 50 9 is_stmt 0 view .LVU40
 140 0018 0120     		movs	r0, #1
 141              	.LVL8:
 142              		.loc 1 50 9 view .LVU41
 143 001a 7047     		bx	lr
 144              	.LVL9:
 145              	.L9:
  41:queue.c       **** 
 146              		.loc 1 41 35 view .LVU42
 147 001c 0020     		movs	r0, #0
 148              	.LVL10:
  51:queue.c       **** }
 149              		.loc 1 51 1 view .LVU43
 150 001e 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE2:
 154              		.text
 155              	.Letext0:
 156              		.file 2 "queue.h"
ARM GAS  /tmp/cc8VsosW.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/cc8VsosW.s:16     .text.queue_init:0000000000000000 $t
     /tmp/cc8VsosW.s:24     .text.queue_init:0000000000000000 queue_init
     /tmp/cc8VsosW.s:45     .text.queue_insert:0000000000000000 $t
     /tmp/cc8VsosW.s:52     .text.queue_insert:0000000000000000 queue_insert
     /tmp/cc8VsosW.s:98     .text.queue_remove:0000000000000000 $t
     /tmp/cc8VsosW.s:105    .text.queue_remove:0000000000000000 queue_remove

NO UNDEFINED SYMBOLS
