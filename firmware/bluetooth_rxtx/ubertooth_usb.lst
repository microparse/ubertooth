ARM GAS  /tmp/ccs08v8g.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ubertooth_usb.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.usb_vendor_request_handler,"ax",%progbits
  16              		.align	1
  17              		.global	usb_vendor_request_handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	usb_vendor_request_handler:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "ubertooth_usb.c"
   1:ubertooth_usb.c **** /*
   2:ubertooth_usb.c ****  * Copyright 2010 Michael Ossmann
   3:ubertooth_usb.c ****  * Copyright 2013 Dominic Spill
   4:ubertooth_usb.c ****  *
   5:ubertooth_usb.c ****  * This file is part of Project Ubertooth.
   6:ubertooth_usb.c ****  *
   7:ubertooth_usb.c ****  * This program is free software; you can redistribute it and/or modify
   8:ubertooth_usb.c ****  * it under the terms of the GNU General Public License as published by
   9:ubertooth_usb.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:ubertooth_usb.c ****  * any later version.
  11:ubertooth_usb.c ****  *
  12:ubertooth_usb.c ****  * This program is distributed in the hope that it will be useful,
  13:ubertooth_usb.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:ubertooth_usb.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:ubertooth_usb.c ****  * GNU General Public License for more details.
  16:ubertooth_usb.c ****  *
  17:ubertooth_usb.c ****  * You should have received a copy of the GNU General Public License
  18:ubertooth_usb.c ****  * along with this program; see the file COPYING.  If not, write to
  19:ubertooth_usb.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:ubertooth_usb.c ****  * Boston, MA 02110-1301, USA.
  21:ubertooth_usb.c ****  */
  22:ubertooth_usb.c **** 
  23:ubertooth_usb.c **** /*
  24:ubertooth_usb.c **** 	LPCUSB, an USB device driver for LPC microcontrollers
  25:ubertooth_usb.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
  26:ubertooth_usb.c **** 
  27:ubertooth_usb.c **** 	Redistribution and use in source and binary forms, with or without
  28:ubertooth_usb.c **** 	modification, are permitted provided that the following conditions are met:
  29:ubertooth_usb.c **** 
  30:ubertooth_usb.c **** 	1. Redistributions of source code must retain the above copyright
  31:ubertooth_usb.c **** 	   notice, this list of conditions and the following disclaimer.
ARM GAS  /tmp/ccs08v8g.s 			page 2


  32:ubertooth_usb.c **** 	2. Redistributions in binary form must reproduce the above copyright
  33:ubertooth_usb.c **** 	   notice, this list of conditions and the following disclaimer in the
  34:ubertooth_usb.c **** 	   documentation and/or other materials provided with the distribution.
  35:ubertooth_usb.c **** 	3. The name of the author may not be used to endorse or promote products
  36:ubertooth_usb.c **** 	   derived from this software without specific prior written permission.
  37:ubertooth_usb.c **** 
  38:ubertooth_usb.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  39:ubertooth_usb.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  40:ubertooth_usb.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  41:ubertooth_usb.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  42:ubertooth_usb.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  43:ubertooth_usb.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  44:ubertooth_usb.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  45:ubertooth_usb.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  46:ubertooth_usb.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  47:ubertooth_usb.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:ubertooth_usb.c **** */
  49:ubertooth_usb.c **** 
  50:ubertooth_usb.c **** #include "usbapi.h"
  51:ubertooth_usb.c **** #include "usbhw_lpc.h"
  52:ubertooth_usb.c **** #include "ubertooth.h"
  53:ubertooth_usb.c **** #include "ubertooth_usb.h"
  54:ubertooth_usb.c **** #include <string.h>
  55:ubertooth_usb.c **** 
  56:ubertooth_usb.c **** #ifdef UBERTOOTH_ZERO
  57:ubertooth_usb.c **** #define ID_VENDOR 0x1D50
  58:ubertooth_usb.c **** #define ID_PRODUCT 0x6000
  59:ubertooth_usb.c **** #elif defined UBERTOOTH_ONE
  60:ubertooth_usb.c **** #define ID_VENDOR 0x1D50
  61:ubertooth_usb.c **** #define ID_PRODUCT 0x6002
  62:ubertooth_usb.c **** #elif defined TC13BADGE
  63:ubertooth_usb.c **** #define ID_VENDOR 0xFFFF
  64:ubertooth_usb.c **** #define ID_PRODUCT 0x0004
  65:ubertooth_usb.c **** #else
  66:ubertooth_usb.c **** #define ID_VENDOR 0xFFFF
  67:ubertooth_usb.c **** #define ID_PRODUCT 0x0004
  68:ubertooth_usb.c **** #endif
  69:ubertooth_usb.c **** 
  70:ubertooth_usb.c **** #define BULK_IN_EP		0x82
  71:ubertooth_usb.c **** #define BULK_OUT_EP		0x05
  72:ubertooth_usb.c **** 
  73:ubertooth_usb.c **** #define MAX_PACKET_SIZE	64
  74:ubertooth_usb.c **** 
  75:ubertooth_usb.c **** #define LE_WORD(x)		((x)&0xFF),((x)>>8)
  76:ubertooth_usb.c **** 
  77:ubertooth_usb.c **** /*
  78:ubertooth_usb.c ****  * This is supposed to be a lock-free ring buffer, but I haven't verified
  79:ubertooth_usb.c ****  * atomicity of the operations on head and tail.
  80:ubertooth_usb.c ****  */
  81:ubertooth_usb.c **** 
  82:ubertooth_usb.c **** static u8 abDescriptors[] = {
  83:ubertooth_usb.c **** 
  84:ubertooth_usb.c **** /* Device descriptor */
  85:ubertooth_usb.c **** 	0x12,
  86:ubertooth_usb.c **** 	DESC_DEVICE,
  87:ubertooth_usb.c **** 	LE_WORD(0x0200),		// bcdUSB
  88:ubertooth_usb.c **** 	0xFF,              		// bDeviceClass
ARM GAS  /tmp/ccs08v8g.s 			page 3


  89:ubertooth_usb.c **** 	0x00,              		// bDeviceSubClass
  90:ubertooth_usb.c **** 	0x00,              		// bDeviceProtocol
  91:ubertooth_usb.c **** 	MAX_PACKET_SIZE0,  		// bMaxPacketSize
  92:ubertooth_usb.c **** 	LE_WORD(ID_VENDOR),		// idVendor
  93:ubertooth_usb.c **** 	LE_WORD(ID_PRODUCT),		// idProduct
  94:ubertooth_usb.c **** 	LE_WORD(0x0107),		// bcdDevice
  95:ubertooth_usb.c **** 	0x01,              		// iManufacturer
  96:ubertooth_usb.c **** 	0x02,              		// iProduct
  97:ubertooth_usb.c **** 	0x03,              		// iSerialNumber
  98:ubertooth_usb.c **** 	0x01,              		// bNumConfigurations
  99:ubertooth_usb.c **** 
 100:ubertooth_usb.c **** // configuration
 101:ubertooth_usb.c **** 	0x09,
 102:ubertooth_usb.c **** 	DESC_CONFIGURATION,
 103:ubertooth_usb.c **** 	LE_WORD(0x20),  		// wTotalLength
 104:ubertooth_usb.c **** 	0x01,  					// bNumInterfaces
 105:ubertooth_usb.c **** 	0x01,  					// bConfigurationValue
 106:ubertooth_usb.c **** 	0x00,  					// iConfiguration
 107:ubertooth_usb.c **** 	0x80,  					// bmAttributes
 108:ubertooth_usb.c **** 	0x6e,  					// bMaxPower (220mA)
 109:ubertooth_usb.c **** 
 110:ubertooth_usb.c **** // interface
 111:ubertooth_usb.c **** 	0x09,
 112:ubertooth_usb.c **** 	DESC_INTERFACE,
 113:ubertooth_usb.c **** 	0x00,  		 			// bInterfaceNumber
 114:ubertooth_usb.c **** 	0x00,   				// bAlternateSetting
 115:ubertooth_usb.c **** 	0x02,   				// bNumEndPoints
 116:ubertooth_usb.c **** 	0xFF,   				// bInterfaceClass
 117:ubertooth_usb.c **** 	0x00,   				// bInterfaceSubClass
 118:ubertooth_usb.c **** 	0x00,   				// bInterfaceProtocol
 119:ubertooth_usb.c **** 	0x00,   				// iInterface
 120:ubertooth_usb.c **** 
 121:ubertooth_usb.c **** // bulk in
 122:ubertooth_usb.c **** 	0x07,
 123:ubertooth_usb.c **** 	DESC_ENDPOINT,
 124:ubertooth_usb.c **** 	BULK_IN_EP,				// bEndpointAddress
 125:ubertooth_usb.c **** 	0x02,   				// bmAttributes = BULK
 126:ubertooth_usb.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 127:ubertooth_usb.c **** 	0,						// bInterval
 128:ubertooth_usb.c **** 
 129:ubertooth_usb.c **** // bulk out
 130:ubertooth_usb.c **** 	0x07,
 131:ubertooth_usb.c **** 	DESC_ENDPOINT,
 132:ubertooth_usb.c **** 	BULK_OUT_EP,			// bEndpointAddress
 133:ubertooth_usb.c **** 	0x02,   				// bmAttributes = BULK
 134:ubertooth_usb.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 135:ubertooth_usb.c **** 	0,						// bInterval
 136:ubertooth_usb.c **** 
 137:ubertooth_usb.c **** // string descriptors
 138:ubertooth_usb.c **** 	0x04,
 139:ubertooth_usb.c **** 	DESC_STRING,
 140:ubertooth_usb.c **** 	LE_WORD(0x0409),
 141:ubertooth_usb.c **** 
 142:ubertooth_usb.c **** 	// manufacturer string
 143:ubertooth_usb.c **** 	40,
 144:ubertooth_usb.c **** 	DESC_STRING,
 145:ubertooth_usb.c **** 	'G', 0x00,
ARM GAS  /tmp/ccs08v8g.s 			page 4


 146:ubertooth_usb.c **** 	'r', 0x00,
 147:ubertooth_usb.c **** 	'e', 0x00,
 148:ubertooth_usb.c **** 	'a', 0x00,
 149:ubertooth_usb.c **** 	't', 0x00,
 150:ubertooth_usb.c **** 	' ', 0x00,
 151:ubertooth_usb.c **** 	'S', 0x00,
 152:ubertooth_usb.c **** 	'c', 0x00,
 153:ubertooth_usb.c **** 	'o', 0x00,
 154:ubertooth_usb.c **** 	't', 0x00,
 155:ubertooth_usb.c **** 	't', 0x00,
 156:ubertooth_usb.c **** 	' ', 0x00,
 157:ubertooth_usb.c **** 	'G', 0x00,
 158:ubertooth_usb.c **** 	'a', 0x00,
 159:ubertooth_usb.c **** 	'd', 0x00,
 160:ubertooth_usb.c **** 	'g', 0x00,
 161:ubertooth_usb.c **** 	'e', 0x00,
 162:ubertooth_usb.c **** 	't', 0x00,
 163:ubertooth_usb.c **** 	's', 0x00,
 164:ubertooth_usb.c **** 
 165:ubertooth_usb.c **** 	// product string
 166:ubertooth_usb.c **** 	28,
 167:ubertooth_usb.c **** 	DESC_STRING,
 168:ubertooth_usb.c **** 	'U', 0x00,
 169:ubertooth_usb.c **** 	'b', 0x00,
 170:ubertooth_usb.c **** 	'e', 0x00,
 171:ubertooth_usb.c **** 	'r', 0x00,
 172:ubertooth_usb.c **** 	't', 0x00,
 173:ubertooth_usb.c **** 	'o', 0x00,
 174:ubertooth_usb.c **** 	'o', 0x00,
 175:ubertooth_usb.c **** 	't', 0x00,
 176:ubertooth_usb.c **** 	'h', 0x00,
 177:ubertooth_usb.c **** 	' ', 0x00,
 178:ubertooth_usb.c **** 	'O', 0x00,
 179:ubertooth_usb.c **** 	'n', 0x00,
 180:ubertooth_usb.c **** 	'e', 0x00,
 181:ubertooth_usb.c **** 
 182:ubertooth_usb.c **** 	// serial number string
 183:ubertooth_usb.c **** 	0x42,
 184:ubertooth_usb.c **** 	DESC_STRING,
 185:ubertooth_usb.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0,
 186:ubertooth_usb.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0,
 187:ubertooth_usb.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0,
 188:ubertooth_usb.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '1', 0,
 189:ubertooth_usb.c **** 
 190:ubertooth_usb.c **** 	// terminator
 191:ubertooth_usb.c **** 	0
 192:ubertooth_usb.c **** };
 193:ubertooth_usb.c **** 
 194:ubertooth_usb.c **** #define USB_SERIAL_OFFSET 124
 195:ubertooth_usb.c **** 
 196:ubertooth_usb.c **** u8 abVendorReqData[258];
 197:ubertooth_usb.c **** 
 198:ubertooth_usb.c **** /* Unused functions
 199:ubertooth_usb.c **** void usb_bulk_in_handler(u8 bEP, u8 bEPStatus)
 200:ubertooth_usb.c **** {
 201:ubertooth_usb.c **** 	if (!(bEPStatus & EP_STATUS_DATA))
 202:ubertooth_usb.c **** 		dequeue_send();
ARM GAS  /tmp/ccs08v8g.s 			page 5


 203:ubertooth_usb.c **** }
 204:ubertooth_usb.c **** 
 205:ubertooth_usb.c **** void usb_bulk_out_handler(u8 bEP, u8 bEPStatus)
 206:ubertooth_usb.c **** {
 207:ubertooth_usb.c **** }
 208:ubertooth_usb.c **** */
 209:ubertooth_usb.c **** 
 210:ubertooth_usb.c **** VendorRequestHandler *v_req_handler;
 211:ubertooth_usb.c **** 
 212:ubertooth_usb.c **** BOOL usb_vendor_request_handler(TSetupPacket *pSetup, int *piLen, u8 **ppbData)
 213:ubertooth_usb.c **** {
  28              		.loc 1 213 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 213 1 is_stmt 0 view .LVU1
  33 0000 13B5     		push	{r0, r1, r4, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
 214:ubertooth_usb.c **** 	int rv;
  37              		.loc 1 214 2 is_stmt 1 view .LVU2
 215:ubertooth_usb.c **** 	u16 params[3] = {pSetup->wValue, pSetup->wIndex, pSetup->wLength};
  38              		.loc 1 215 2 view .LVU3
 213:ubertooth_usb.c **** 	int rv;
  39              		.loc 1 213 1 is_stmt 0 view .LVU4
  40 0002 0B46     		mov	r3, r1
  41              		.loc 1 215 6 view .LVU5
  42 0004 4188     		ldrh	r1, [r0, #2]
  43              	.LVL1:
 216:ubertooth_usb.c **** 	rv = v_req_handler(pSetup->bRequest, params, *ppbData, piLen);
  44              		.loc 1 216 7 view .LVU6
  45 0006 1268     		ldr	r2, [r2]
  46              	.LVL2:
 215:ubertooth_usb.c **** 	u16 params[3] = {pSetup->wValue, pSetup->wIndex, pSetup->wLength};
  47              		.loc 1 215 6 view .LVU7
  48 0008 ADF80010 		strh	r1, [sp]	@ movhi
  49 000c 8188     		ldrh	r1, [r0, #4]
  50 000e ADF80210 		strh	r1, [sp, #2]	@ movhi
  51 0012 C188     		ldrh	r1, [r0, #6]
  52              		.loc 1 216 7 view .LVU8
  53 0014 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
  54              	.LVL3:
 215:ubertooth_usb.c **** 	u16 params[3] = {pSetup->wValue, pSetup->wIndex, pSetup->wLength};
  55              		.loc 1 215 6 view .LVU9
  56 0016 ADF80410 		strh	r1, [sp, #4]	@ movhi
  57              		.loc 1 216 2 is_stmt 1 view .LVU10
  58              		.loc 1 216 7 is_stmt 0 view .LVU11
  59 001a 0449     		ldr	r1, .L2
  60 001c 0C68     		ldr	r4, [r1]
  61 001e 6946     		mov	r1, sp
  62 0020 A047     		blx	r4
  63              	.LVL4:
 217:ubertooth_usb.c **** 	return (BOOL) (rv==1);
  64              		.loc 1 217 2 is_stmt 1 view .LVU12
 218:ubertooth_usb.c **** }
  65              		.loc 1 218 1 is_stmt 0 view .LVU13
ARM GAS  /tmp/ccs08v8g.s 			page 6


  66 0022 431E     		subs	r3, r0, #1
  67 0024 5842     		rsbs	r0, r3, #0
  68              	.LVL5:
  69              		.loc 1 218 1 view .LVU14
  70 0026 5841     		adcs	r0, r0, r3
  71 0028 02B0     		add	sp, sp, #8
  72              		.cfi_def_cfa_offset 8
  73              		@ sp needed
  74 002a 10BD     		pop	{r4, pc}
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 002c 00000000 		.word	v_req_handler
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.section	.text.set_serial_descriptor,"ax",%progbits
  83              		.align	1
  84              		.global	set_serial_descriptor
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	set_serial_descriptor:
  91              	.LVL6:
  92              	.LFB1:
 219:ubertooth_usb.c **** 
 220:ubertooth_usb.c **** 
 221:ubertooth_usb.c **** void set_serial_descriptor(u8 *descriptors) {
  93              		.loc 1 221 45 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 24
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		.loc 1 221 45 is_stmt 0 view .LVU16
  98 0000 70B5     		push	{r4, r5, r6, lr}
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 4, -16
 101              		.cfi_offset 5, -12
 102              		.cfi_offset 6, -8
 103              		.cfi_offset 14, -4
 104 0002 86B0     		sub	sp, sp, #24
 105              		.cfi_def_cfa_offset 40
 222:ubertooth_usb.c **** 	u8 buf[17], *desc, nibble;
 106              		.loc 1 222 2 is_stmt 1 view .LVU17
 223:ubertooth_usb.c **** 	int len, i;
 107              		.loc 1 223 2 view .LVU18
 224:ubertooth_usb.c **** 	get_device_serial(buf, &len);
 108              		.loc 1 224 2 view .LVU19
 109 0004 6946     		mov	r1, sp
 221:ubertooth_usb.c **** 	u8 buf[17], *desc, nibble;
 110              		.loc 1 221 45 is_stmt 0 view .LVU20
 111 0006 0446     		mov	r4, r0
 112              		.loc 1 224 2 view .LVU21
 113 0008 01A8     		add	r0, sp, #4
 114              	.LVL7:
 115              		.loc 1 224 2 view .LVU22
 116 000a FFF7FEFF 		bl	get_device_serial
 117              	.LVL8:
ARM GAS  /tmp/ccs08v8g.s 			page 7


 225:ubertooth_usb.c **** 	if(buf[0] == 0) { /* IAP success */
 118              		.loc 1 225 2 is_stmt 1 view .LVU23
 119              		.loc 1 225 4 is_stmt 0 view .LVU24
 120 000e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 121 0012 E9B9     		cbnz	r1, .L4
 226:ubertooth_usb.c **** 		desc = descriptors + USB_SERIAL_OFFSET;
 122              		.loc 1 226 3 is_stmt 1 view .LVU25
 123              	.LVL9:
 227:ubertooth_usb.c **** 		for(i=0; i<16; i++) {
 124              		.loc 1 227 3 view .LVU26
 125              		.loc 1 227 12 view .LVU27
 126 0014 2046     		mov	r0, r4
 127 0016 0E46     		mov	r6, r1
 128 0018 01AA     		add	r2, sp, #4
 129 001a 04F14005 		add	r5, r4, #64
 130              	.LVL10:
 131              	.L10:
 228:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 132              		.loc 1 228 4 view .LVU28
 133              		.loc 1 228 18 is_stmt 0 view .LVU29
 134 001e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 230:ubertooth_usb.c **** 			desc[1+ i * 4] = 0;
 135              		.loc 1 230 19 view .LVU30
 136 0020 80F87D10 		strb	r1, [r0, #125]
 228:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 137              		.loc 1 228 12 view .LVU31
 138 0024 1C09     		lsrs	r4, r3, #4
 139              	.LVL11:
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 140              		.loc 1 229 4 is_stmt 1 view .LVU32
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 141              		.loc 1 229 16 is_stmt 0 view .LVU33
 142 0026 9F2B     		cmp	r3, #159
 231:ubertooth_usb.c **** 			nibble = buf[i+1]&0xF;
 143              		.loc 1 231 11 view .LVU34
 144 0028 03F00F03 		and	r3, r3, #15
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 145              		.loc 1 229 16 view .LVU35
 146 002c 8CBF     		ite	hi
 147 002e 5734     		addhi	r4, r4, #87
 148              	.LVL12:
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 149              		.loc 1 229 16 view .LVU36
 150 0030 3034     		addls	r4, r4, #48
 232:ubertooth_usb.c **** 			desc[2 + i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 151              		.loc 1 232 20 view .LVU37
 152 0032 092B     		cmp	r3, #9
 153 0034 8CBF     		ite	hi
 154 0036 5733     		addhi	r3, r3, #87
 155 0038 3033     		addls	r3, r3, #48
 229:ubertooth_usb.c **** 			desc[i * 4] = (nibble > 9) ? ('a' + nibble - 10) : ('0' + nibble);
 156              		.loc 1 229 16 view .LVU38
 157 003a 80F87C40 		strb	r4, [r0, #124]
 230:ubertooth_usb.c **** 			nibble = buf[i+1]&0xF;
 158              		.loc 1 230 4 is_stmt 1 view .LVU39
 231:ubertooth_usb.c **** 			nibble = buf[i+1]&0xF;
ARM GAS  /tmp/ccs08v8g.s 			page 8


 159              		.loc 1 231 4 view .LVU40
 160              	.LVL13:
 161              		.loc 1 232 4 view .LVU41
 162              		.loc 1 232 20 is_stmt 0 view .LVU42
 163 003e 80F87E30 		strb	r3, [r0, #126]
 233:ubertooth_usb.c **** 			desc[3 + i * 4] = 0;
 164              		.loc 1 233 4 is_stmt 1 view .LVU43
 165              		.loc 1 233 20 is_stmt 0 view .LVU44
 166 0042 80F87F60 		strb	r6, [r0, #127]
 227:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 167              		.loc 1 227 18 is_stmt 1 view .LVU45
 168              	.LVL14:
 227:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 169              		.loc 1 227 12 view .LVU46
 170 0046 0430     		adds	r0, r0, #4
 227:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 171              		.loc 1 227 3 is_stmt 0 view .LVU47
 172 0048 A842     		cmp	r0, r5
 173 004a 02F10102 		add	r2, r2, #1
 174              	.LVL15:
 227:ubertooth_usb.c **** 			nibble  = (buf[i+1]>>4) & 0xF;
 175              		.loc 1 227 3 view .LVU48
 176 004e E6D1     		bne	.L10
 177              	.LVL16:
 178              	.L4:
 234:ubertooth_usb.c **** 		}
 235:ubertooth_usb.c **** 	}
 236:ubertooth_usb.c **** }
 179              		.loc 1 236 1 view .LVU49
 180 0050 06B0     		add	sp, sp, #24
 181              		.cfi_def_cfa_offset 16
 182              		@ sp needed
 183 0052 70BD     		pop	{r4, r5, r6, pc}
 184              		.cfi_endproc
 185              	.LFE1:
 187              		.section	.rodata.str1.1,"aMS",%progbits,1
 188              	.LC0:
 189 0000 7B386163 		.ascii	"{8ac47a88-cc26-4aa9-887b-42ca8cf07a63}\000"
 189      34376138 
 189      382D6363 
 189      32362D34 
 189      6161392D 
 190              		.section	.text.ubertooth_usb_init,"ax",%progbits
 191              		.align	1
 192              		.global	ubertooth_usb_init
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu softvfp
 198              	ubertooth_usb_init:
 199              	.LVL17:
 200              	.LFB2:
 237:ubertooth_usb.c **** 
 238:ubertooth_usb.c **** int ubertooth_usb_init(VendorRequestHandler *vendor_req_handler)
 239:ubertooth_usb.c **** {
 201              		.loc 1 239 1 is_stmt 1 view -0
 202              		.cfi_startproc
ARM GAS  /tmp/ccs08v8g.s 			page 9


 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		.loc 1 239 1 is_stmt 0 view .LVU51
 206 0000 38B5     		push	{r3, r4, r5, lr}
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 3, -16
 209              		.cfi_offset 4, -12
 210              		.cfi_offset 5, -8
 211              		.cfi_offset 14, -4
 240:ubertooth_usb.c **** 	// initialise stack
 241:ubertooth_usb.c **** 	USBInit();
 212              		.loc 1 241 2 is_stmt 1 view .LVU52
 239:ubertooth_usb.c **** 	// initialise stack
 213              		.loc 1 239 1 is_stmt 0 view .LVU53
 214 0002 0446     		mov	r4, r0
 242:ubertooth_usb.c **** 
 243:ubertooth_usb.c **** 	set_serial_descriptor(abDescriptors);
 215              		.loc 1 243 2 view .LVU54
 216 0004 0C4D     		ldr	r5, .L13
 241:ubertooth_usb.c **** 
 217              		.loc 1 241 2 view .LVU55
 218 0006 FFF7FEFF 		bl	USBInit
 219              	.LVL18:
 220              		.loc 1 243 2 is_stmt 1 view .LVU56
 221 000a 2846     		mov	r0, r5
 222 000c FFF7FEFF 		bl	set_serial_descriptor
 223              	.LVL19:
 244:ubertooth_usb.c **** 	
 245:ubertooth_usb.c **** 	// register device descriptors
 246:ubertooth_usb.c **** 	USBRegisterDescriptors(abDescriptors);
 224              		.loc 1 246 2 view .LVU57
 225 0010 2846     		mov	r0, r5
 226 0012 FFF7FEFF 		bl	USBRegisterDescriptors
 227              	.LVL20:
 247:ubertooth_usb.c **** 
 248:ubertooth_usb.c **** 	// Request handler
 249:ubertooth_usb.c **** 	v_req_handler = vendor_req_handler;
 228              		.loc 1 249 2 view .LVU58
 229              		.loc 1 249 16 is_stmt 0 view .LVU59
 230 0016 094B     		ldr	r3, .L13+4
 250:ubertooth_usb.c **** 
 251:ubertooth_usb.c **** 	// override standard request handler
 252:ubertooth_usb.c **** 	USBRegisterRequestHandler(REQTYPE_TYPE_VENDOR, usb_vendor_request_handler, abVendorReqData);
 231              		.loc 1 252 2 view .LVU60
 232 0018 094A     		ldr	r2, .L13+8
 233 001a 0220     		movs	r0, #2
 234 001c 0949     		ldr	r1, .L13+12
 249:ubertooth_usb.c **** 
 235              		.loc 1 249 16 view .LVU61
 236 001e 1C60     		str	r4, [r3]
 237              		.loc 1 252 2 is_stmt 1 view .LVU62
 238 0020 FFF7FEFF 		bl	USBRegisterRequestHandler
 239              	.LVL21:
 253:ubertooth_usb.c **** 
 254:ubertooth_usb.c **** 	// register endpoints
 255:ubertooth_usb.c **** 	//USBHwRegisterEPIntHandler(BULK_IN_EP, usb_bulk_in_handler);
 256:ubertooth_usb.c **** 	//USBHwRegisterEPIntHandler(BULK_OUT_EP, usb_bulk_out_handler);
ARM GAS  /tmp/ccs08v8g.s 			page 10


 257:ubertooth_usb.c **** 
 258:ubertooth_usb.c **** 	// enable USB interrupts
 259:ubertooth_usb.c **** 	//ISER0 = ISER0_ISE_USB;
 260:ubertooth_usb.c **** 
 261:ubertooth_usb.c **** 	// Enable WCID / driverless setup on Windows - Consumes Vendor Request 0xFF
 262:ubertooth_usb.c **** 	USBRegisterWinusbInterface(0xFF, "{8ac47a88-cc26-4aa9-887b-42ca8cf07a63}");
 240              		.loc 1 262 2 view .LVU63
 241 0024 0849     		ldr	r1, .L13+16
 242 0026 FF20     		movs	r0, #255
 243 0028 FFF7FEFF 		bl	USBRegisterWinusbInterface
 244              	.LVL22:
 263:ubertooth_usb.c **** 
 264:ubertooth_usb.c **** 	// connect to bus
 265:ubertooth_usb.c **** 	USBHwConnect(TRUE);
 245              		.loc 1 265 2 view .LVU64
 246 002c 0120     		movs	r0, #1
 247 002e FFF7FEFF 		bl	USBHwConnect
 248              	.LVL23:
 266:ubertooth_usb.c **** 
 267:ubertooth_usb.c **** 	return 0;
 249              		.loc 1 267 2 view .LVU65
 268:ubertooth_usb.c **** }
 250              		.loc 1 268 1 is_stmt 0 view .LVU66
 251 0032 0020     		movs	r0, #0
 252 0034 38BD     		pop	{r3, r4, r5, pc}
 253              	.LVL24:
 254              	.L14:
 255              		.loc 1 268 1 view .LVU67
 256 0036 00BF     		.align	2
 257              	.L13:
 258 0038 00000000 		.word	.LANCHOR0
 259 003c 00000000 		.word	v_req_handler
 260 0040 00000000 		.word	abVendorReqData
 261 0044 00000000 		.word	usb_vendor_request_handler
 262 0048 00000000 		.word	.LC0
 263              		.cfi_endproc
 264              	.LFE2:
 266              		.section	.text.usb_queue_init,"ax",%progbits
 267              		.align	1
 268              		.global	usb_queue_init
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	usb_queue_init:
 275              	.LFB3:
 269:ubertooth_usb.c **** 
 270:ubertooth_usb.c **** usb_pkt_rx fifo[128];
 271:ubertooth_usb.c **** 
 272:ubertooth_usb.c **** volatile u32 head = 0;
 273:ubertooth_usb.c **** volatile u32 tail = 0;
 274:ubertooth_usb.c **** 
 275:ubertooth_usb.c **** void usb_queue_init(void)
 276:ubertooth_usb.c **** {
 276              		.loc 1 276 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccs08v8g.s 			page 11


 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 277:ubertooth_usb.c **** 	head = 0;
 281              		.loc 1 277 2 view .LVU69
 282              		.loc 1 277 7 is_stmt 0 view .LVU70
 283 0000 0021     		movs	r1, #0
 284 0002 044B     		ldr	r3, .L16
 278:ubertooth_usb.c **** 	tail = 0;
 279:ubertooth_usb.c **** 	memset(fifo, 0, sizeof(fifo));
 285              		.loc 1 279 2 view .LVU71
 286 0004 4FF40052 		mov	r2, #8192
 287 0008 0348     		ldr	r0, .L16+4
 277:ubertooth_usb.c **** 	head = 0;
 288              		.loc 1 277 7 view .LVU72
 289 000a 1960     		str	r1, [r3]
 278:ubertooth_usb.c **** 	tail = 0;
 290              		.loc 1 278 2 is_stmt 1 view .LVU73
 278:ubertooth_usb.c **** 	tail = 0;
 291              		.loc 1 278 7 is_stmt 0 view .LVU74
 292 000c 5960     		str	r1, [r3, #4]
 293              		.loc 1 279 2 is_stmt 1 view .LVU75
 294 000e FFF7FEBF 		b	memset
 295              	.LVL25:
 296              	.L17:
 297 0012 00BF     		.align	2
 298              	.L16:
 299 0014 00000000 		.word	.LANCHOR1
 300 0018 00000000 		.word	fifo
 301              		.cfi_endproc
 302              	.LFE3:
 304              		.section	.text.usb_enqueue,"ax",%progbits
 305              		.align	1
 306              		.global	usb_enqueue
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 312              	usb_enqueue:
 313              	.LFB4:
 280:ubertooth_usb.c **** }
 281:ubertooth_usb.c **** 
 282:ubertooth_usb.c **** usb_pkt_rx *usb_enqueue(void)
 283:ubertooth_usb.c **** {
 314              		.loc 1 283 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 10B5     		push	{r4, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
 284:ubertooth_usb.c **** 	u8 h = head & 0x7F;
 322              		.loc 1 284 2 view .LVU77
 323              		.loc 1 284 14 is_stmt 0 view .LVU78
 324 0002 0A4A     		ldr	r2, .L21
 325 0004 1468     		ldr	r4, [r2]
 326              	.LVL26:
ARM GAS  /tmp/ccs08v8g.s 			page 12


 285:ubertooth_usb.c **** 	u8 t = tail & 0x7F;
 327              		.loc 1 285 2 is_stmt 1 view .LVU79
 328              		.loc 1 285 14 is_stmt 0 view .LVU80
 329 0006 5368     		ldr	r3, [r2, #4]
 286:ubertooth_usb.c **** 	u8 n = (t + 1) & 0x7F;
 287:ubertooth_usb.c **** 
 288:ubertooth_usb.c **** 	/* fail if queue is full */
 289:ubertooth_usb.c **** 	if (h == n) {
 330              		.loc 1 289 5 view .LVU81
 331 0008 04F07F00 		and	r0, r4, #127
 285:ubertooth_usb.c **** 	u8 t = tail & 0x7F;
 332              		.loc 1 285 5 view .LVU82
 333 000c 03F07F03 		and	r3, r3, #127
 334              	.LVL27:
 286:ubertooth_usb.c **** 	u8 n = (t + 1) & 0x7F;
 335              		.loc 1 286 2 is_stmt 1 view .LVU83
 336              		.loc 1 289 2 view .LVU84
 286:ubertooth_usb.c **** 	u8 n = (t + 1) & 0x7F;
 337              		.loc 1 286 12 is_stmt 0 view .LVU85
 338 0010 591C     		adds	r1, r3, #1
 339              		.loc 1 289 5 view .LVU86
 340 0012 01F07F01 		and	r1, r1, #127
 341 0016 8842     		cmp	r0, r1
 290:ubertooth_usb.c **** 		return NULL;
 291:ubertooth_usb.c **** 	}
 292:ubertooth_usb.c **** 
 293:ubertooth_usb.c **** 	++tail;
 342              		.loc 1 293 2 is_stmt 1 view .LVU87
 343 0018 1DBF     		ittte	ne
 344 001a 5168     		ldrne	r1, [r2, #4]
 294:ubertooth_usb.c **** 	return &fifo[t];
 345              		.loc 1 294 9 is_stmt 0 view .LVU88
 346 001c 0448     		ldrne	r0, .L21+4
 293:ubertooth_usb.c **** 	return &fifo[t];
 347              		.loc 1 293 2 view .LVU89
 348 001e 0131     		addne	r1, r1, #1
 290:ubertooth_usb.c **** 		return NULL;
 349              		.loc 1 290 10 view .LVU90
 350 0020 0020     		moveq	r0, #0
 293:ubertooth_usb.c **** 	return &fifo[t];
 351              		.loc 1 293 2 view .LVU91
 352 0022 1CBF     		itt	ne
 353 0024 5160     		strne	r1, [r2, #4]
 354              		.loc 1 294 2 is_stmt 1 view .LVU92
 355              		.loc 1 294 9 is_stmt 0 view .LVU93
 356 0026 00EB8310 		addne	r0, r0, r3, lsl #6
 295:ubertooth_usb.c **** 
 296:ubertooth_usb.c **** }
 357              		.loc 1 296 1 view .LVU94
 358 002a 10BD     		pop	{r4, pc}
 359              	.LVL28:
 360              	.L22:
 361              		.loc 1 296 1 view .LVU95
 362              		.align	2
 363              	.L21:
 364 002c 00000000 		.word	.LANCHOR1
 365 0030 00000000 		.word	fifo
ARM GAS  /tmp/ccs08v8g.s 			page 13


 366              		.cfi_endproc
 367              	.LFE4:
 369              		.section	.text.dequeue,"ax",%progbits
 370              		.align	1
 371              		.global	dequeue
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	dequeue:
 378              	.LFB5:
 297:ubertooth_usb.c **** 
 298:ubertooth_usb.c **** usb_pkt_rx *dequeue(void)
 299:ubertooth_usb.c **** {
 379              		.loc 1 299 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 300:ubertooth_usb.c **** 	u8 h = head & 0x7F;
 384              		.loc 1 300 2 view .LVU97
 385              		.loc 1 300 14 is_stmt 0 view .LVU98
 386 0000 084A     		ldr	r2, .L26
 387 0002 1368     		ldr	r3, [r2]
 301:ubertooth_usb.c **** 	u8 t = tail & 0x7F;
 388              		.loc 1 301 14 view .LVU99
 389 0004 5168     		ldr	r1, [r2, #4]
 300:ubertooth_usb.c **** 	u8 h = head & 0x7F;
 390              		.loc 1 300 5 view .LVU100
 391 0006 03F07F03 		and	r3, r3, #127
 392              	.LVL29:
 393              		.loc 1 301 2 is_stmt 1 view .LVU101
 302:ubertooth_usb.c **** 
 303:ubertooth_usb.c **** 	/* fail if queue is empty */
 304:ubertooth_usb.c **** 	if (h == t) {
 394              		.loc 1 304 2 view .LVU102
 395              		.loc 1 304 5 is_stmt 0 view .LVU103
 396 000a 01F07F01 		and	r1, r1, #127
 397              	.LVL30:
 398              		.loc 1 304 5 view .LVU104
 399 000e 8B42     		cmp	r3, r1
 305:ubertooth_usb.c **** 		return NULL;
 306:ubertooth_usb.c **** 	}
 307:ubertooth_usb.c **** 
 308:ubertooth_usb.c **** 	++head;
 400              		.loc 1 308 2 is_stmt 1 view .LVU105
 401 0010 1FBF     		itttt	ne
 402 0012 1168     		ldrne	r1, [r2]
 309:ubertooth_usb.c **** 	return &fifo[h];
 403              		.loc 1 309 9 is_stmt 0 view .LVU106
 404 0014 0448     		ldrne	r0, .L26+4
 308:ubertooth_usb.c **** 	return &fifo[h];
 405              		.loc 1 308 2 view .LVU107
 406 0016 0131     		addne	r1, r1, #1
 407              		.loc 1 309 9 view .LVU108
 408 0018 00EB8310 		addne	r0, r0, r3, lsl #6
 308:ubertooth_usb.c **** 	return &fifo[h];
ARM GAS  /tmp/ccs08v8g.s 			page 14


 409              		.loc 1 308 2 view .LVU109
 410 001c 14BF     		ite	ne
 411 001e 1160     		strne	r1, [r2]
 412              		.loc 1 309 2 is_stmt 1 view .LVU110
 305:ubertooth_usb.c **** 		return NULL;
 413              		.loc 1 305 10 is_stmt 0 view .LVU111
 414 0020 0020     		moveq	r0, #0
 310:ubertooth_usb.c **** }
 415              		.loc 1 310 1 view .LVU112
 416 0022 7047     		bx	lr
 417              	.L27:
 418              		.align	2
 419              	.L26:
 420 0024 00000000 		.word	.LANCHOR1
 421 0028 00000000 		.word	fifo
 422              		.cfi_endproc
 423              	.LFE5:
 425              		.section	.text.dequeue_send,"ax",%progbits
 426              		.align	1
 427              		.global	dequeue_send
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	dequeue_send:
 434              	.LVL31:
 435              	.LFB6:
 311:ubertooth_usb.c **** 
 312:ubertooth_usb.c **** #define USB_KEEP_ALIVE 400000
 313:ubertooth_usb.c **** u32 last_usb_pkt = 0;  // for keep alive packets
 314:ubertooth_usb.c **** 
 315:ubertooth_usb.c **** int dequeue_send(u32 clkn)
 316:ubertooth_usb.c **** {
 436              		.loc 1 316 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		.loc 1 316 1 is_stmt 0 view .LVU114
 441 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 442              		.cfi_def_cfa_offset 24
 443              		.cfi_offset 4, -12
 444              		.cfi_offset 5, -8
 445              		.cfi_offset 14, -4
 317:ubertooth_usb.c **** 	usb_pkt_rx *pkt = dequeue();
 446              		.loc 1 317 2 is_stmt 1 view .LVU115
 316:ubertooth_usb.c **** 	usb_pkt_rx *pkt = dequeue();
 447              		.loc 1 316 1 is_stmt 0 view .LVU116
 448 0002 0546     		mov	r5, r0
 449              		.loc 1 317 20 view .LVU117
 450 0004 FFF7FEFF 		bl	dequeue
 451              	.LVL32:
 318:ubertooth_usb.c **** 	if (pkt != NULL) {
 452              		.loc 1 318 2 is_stmt 1 view .LVU118
 453 0008 0E4B     		ldr	r3, .L32
 454              		.loc 1 318 5 is_stmt 0 view .LVU119
 455 000a 0446     		mov	r4, r0
 456 000c 40B1     		cbz	r0, .L29
ARM GAS  /tmp/ccs08v8g.s 			page 15


 319:ubertooth_usb.c **** 		last_usb_pkt = clkn;
 457              		.loc 1 319 3 is_stmt 1 view .LVU120
 320:ubertooth_usb.c **** 		USBHwEPWrite(BULK_IN_EP, (u8 *)pkt, sizeof(usb_pkt_rx));
 458              		.loc 1 320 3 is_stmt 0 view .LVU121
 459 000e 0146     		mov	r1, r0
 460 0010 4022     		movs	r2, #64
 461 0012 8220     		movs	r0, #130
 462              	.LVL33:
 319:ubertooth_usb.c **** 		last_usb_pkt = clkn;
 463              		.loc 1 319 16 view .LVU122
 464 0014 9D60     		str	r5, [r3, #8]
 465              		.loc 1 320 3 is_stmt 1 view .LVU123
 466 0016 FFF7FEFF 		bl	USBHwEPWrite
 467              	.LVL34:
 321:ubertooth_usb.c **** 		return 1;
 468              		.loc 1 321 3 view .LVU124
 469              		.loc 1 321 10 is_stmt 0 view .LVU125
 470 001a 0120     		movs	r0, #1
 471              	.L28:
 322:ubertooth_usb.c **** 	} else {
 323:ubertooth_usb.c **** 		if (clkn - last_usb_pkt > USB_KEEP_ALIVE) {
 324:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 325:ubertooth_usb.c **** 			last_usb_pkt = clkn;
 326:ubertooth_usb.c **** 			USBHwEPWrite(BULK_IN_EP, &pkt_type, 1);
 327:ubertooth_usb.c **** 		}
 328:ubertooth_usb.c **** 		return 0;
 329:ubertooth_usb.c **** 	}
 330:ubertooth_usb.c **** }
 472              		.loc 1 330 1 view .LVU126
 473 001c 03B0     		add	sp, sp, #12
 474              		.cfi_remember_state
 475              		.cfi_def_cfa_offset 12
 476              		@ sp needed
 477 001e 30BD     		pop	{r4, r5, pc}
 478              	.LVL35:
 479              	.L29:
 480              		.cfi_restore_state
 481              	.LBB6:
 482              	.LBI6:
 315:ubertooth_usb.c **** {
 483              		.loc 1 315 5 is_stmt 1 view .LVU127
 484              	.LBB7:
 323:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 485              		.loc 1 323 3 view .LVU128
 323:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 486              		.loc 1 323 12 is_stmt 0 view .LVU129
 487 0020 9A68     		ldr	r2, [r3, #8]
 323:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 488              		.loc 1 323 6 view .LVU130
 489 0022 0949     		ldr	r1, .L32+4
 323:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 490              		.loc 1 323 12 view .LVU131
 491 0024 AA1A     		subs	r2, r5, r2
 323:ubertooth_usb.c **** 			u8 pkt_type = KEEP_ALIVE;
 492              		.loc 1 323 6 view .LVU132
 493 0026 8A42     		cmp	r2, r1
 494 0028 09D9     		bls	.L31
ARM GAS  /tmp/ccs08v8g.s 			page 16


 495              	.LBB8:
 324:ubertooth_usb.c **** 			last_usb_pkt = clkn;
 496              		.loc 1 324 4 is_stmt 1 view .LVU133
 324:ubertooth_usb.c **** 			last_usb_pkt = clkn;
 497              		.loc 1 324 7 is_stmt 0 view .LVU134
 498 002a 0322     		movs	r2, #3
 326:ubertooth_usb.c **** 		}
 499              		.loc 1 326 4 view .LVU135
 500 002c 8220     		movs	r0, #130
 501              	.LVL36:
 324:ubertooth_usb.c **** 			last_usb_pkt = clkn;
 502              		.loc 1 324 7 view .LVU136
 503 002e 8DF80720 		strb	r2, [sp, #7]
 325:ubertooth_usb.c **** 			USBHwEPWrite(BULK_IN_EP, &pkt_type, 1);
 504              		.loc 1 325 4 is_stmt 1 view .LVU137
 326:ubertooth_usb.c **** 		}
 505              		.loc 1 326 4 is_stmt 0 view .LVU138
 506 0032 0DF10701 		add	r1, sp, #7
 507 0036 0122     		movs	r2, #1
 325:ubertooth_usb.c **** 			USBHwEPWrite(BULK_IN_EP, &pkt_type, 1);
 508              		.loc 1 325 17 view .LVU139
 509 0038 9D60     		str	r5, [r3, #8]
 326:ubertooth_usb.c **** 		}
 510              		.loc 1 326 4 is_stmt 1 view .LVU140
 511 003a FFF7FEFF 		bl	USBHwEPWrite
 512              	.LVL37:
 513              	.L31:
 326:ubertooth_usb.c **** 		}
 514              		.loc 1 326 4 is_stmt 0 view .LVU141
 515              	.LBE8:
 516 003e 2046     		mov	r0, r4
 517              	.LVL38:
 326:ubertooth_usb.c **** 		}
 518              		.loc 1 326 4 view .LVU142
 519 0040 ECE7     		b	.L28
 520              	.L33:
 521 0042 00BF     		.align	2
 522              	.L32:
 523 0044 00000000 		.word	.LANCHOR1
 524 0048 801A0600 		.word	400000
 525              	.LBE7:
 526              	.LBE6:
 527              		.cfi_endproc
 528              	.LFE6:
 530              		.section	.text.handle_usb,"ax",%progbits
 531              		.align	1
 532              		.global	handle_usb
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	handle_usb:
 539              	.LVL39:
 540              	.LFB7:
 331:ubertooth_usb.c **** 
 332:ubertooth_usb.c **** void handle_usb(u32 clkn)
 333:ubertooth_usb.c **** {
ARM GAS  /tmp/ccs08v8g.s 			page 17


 541              		.loc 1 333 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		.loc 1 333 1 is_stmt 0 view .LVU144
 546 0000 38B5     		push	{r3, r4, r5, lr}
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 3, -16
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 5, -8
 551              		.cfi_offset 14, -4
 334:ubertooth_usb.c **** 	u8 epstat;
 552              		.loc 1 334 2 is_stmt 1 view .LVU145
 335:ubertooth_usb.c **** 
 336:ubertooth_usb.c **** 	/* write queued packets to USB if possible */
 337:ubertooth_usb.c **** 	epstat = USBHwEPGetStatus(BULK_IN_EP);
 553              		.loc 1 337 2 view .LVU146
 333:ubertooth_usb.c **** 	u8 epstat;
 554              		.loc 1 333 1 is_stmt 0 view .LVU147
 555 0002 0446     		mov	r4, r0
 556              		.loc 1 337 11 view .LVU148
 557 0004 8220     		movs	r0, #130
 558              	.LVL40:
 559              		.loc 1 337 11 view .LVU149
 560 0006 FFF7FEFF 		bl	USBHwEPGetStatus
 561              	.LVL41:
 338:ubertooth_usb.c **** 	if (!(epstat & EPSTAT_B1FULL)) {
 562              		.loc 1 338 5 view .LVU150
 563 000a 8206     		lsls	r2, r0, #26
 337:ubertooth_usb.c **** 	if (!(epstat & EPSTAT_B1FULL)) {
 564              		.loc 1 337 11 view .LVU151
 565 000c 0546     		mov	r5, r0
 566              	.LVL42:
 567              		.loc 1 338 2 is_stmt 1 view .LVU152
 568              		.loc 1 338 5 is_stmt 0 view .LVU153
 569 000e 02D4     		bmi	.L35
 339:ubertooth_usb.c **** 		dequeue_send(clkn);
 570              		.loc 1 339 3 is_stmt 1 view .LVU154
 571 0010 2046     		mov	r0, r4
 572              	.LVL43:
 573              		.loc 1 339 3 is_stmt 0 view .LVU155
 574 0012 FFF7FEFF 		bl	dequeue_send
 575              	.LVL44:
 576              	.L35:
 340:ubertooth_usb.c **** 	}
 341:ubertooth_usb.c **** 	if (!(epstat & EPSTAT_B2FULL)) {
 577              		.loc 1 341 2 is_stmt 1 view .LVU156
 578              		.loc 1 341 5 is_stmt 0 view .LVU157
 579 0016 6B06     		lsls	r3, r5, #25
 580 0018 02D4     		bmi	.L36
 342:ubertooth_usb.c **** 		dequeue_send(clkn);
 581              		.loc 1 342 3 is_stmt 1 view .LVU158
 582 001a 2046     		mov	r0, r4
 583 001c FFF7FEFF 		bl	dequeue_send
 584              	.LVL45:
 585              	.L36:
 343:ubertooth_usb.c **** 	}
ARM GAS  /tmp/ccs08v8g.s 			page 18


 344:ubertooth_usb.c **** 
 345:ubertooth_usb.c **** 	/* polled "interrupt" */
 346:ubertooth_usb.c **** 	USBHwISR();
 586              		.loc 1 346 2 view .LVU159
 347:ubertooth_usb.c **** }
 587              		.loc 1 347 1 is_stmt 0 view .LVU160
 588 0020 BDE83840 		pop	{r3, r4, r5, lr}
 589              		.cfi_restore 14
 590              		.cfi_restore 5
 591              		.cfi_restore 4
 592              		.cfi_restore 3
 593              		.cfi_def_cfa_offset 0
 594              	.LVL46:
 346:ubertooth_usb.c **** }
 595              		.loc 1 346 2 view .LVU161
 596 0024 FFF7FEBF 		b	USBHwISR
 597              	.LVL47:
 598              		.cfi_endproc
 599              	.LFE7:
 601              		.global	last_usb_pkt
 602              		.global	tail
 603              		.global	head
 604              		.comm	fifo,8192,4
 605              		.comm	v_req_handler,4,4
 606              		.comm	abVendorReqData,258,1
 607              		.data
 608              		.set	.LANCHOR0,. + 0
 611              	abDescriptors:
 612 0000 12010002 		.ascii	"\022\001\000\002\377\000\000@P\035\002`\007\001\001"
 612      FF000040 
 612      501D0260 
 612      070101
 613 000f 02030109 		.ascii	"\002\003\001\011\002 \000\001\001\000\200n\011\004\000"
 613      02200001 
 613      0100806E 
 613      090400
 614 001e 0002FF00 		.ascii	"\000\002\377\000\000\000\007\005\202\002@\000\000\007"
 614      00000705 
 614      82024000 
 614      0007
 615 002c 05050240 		.ascii	"\005\005\002@\000\000\004\003\011\004(\003G\000r\000"
 615      00000403 
 615      09042803 
 615      47007200 
 616 003c 65006100 		.ascii	"e\000a\000t\000 \000S\000c\000o\000t\000t\000 \000G"
 616      74002000 
 616      53006300 
 616      6F007400 
 616      74002000 
 617 0051 00610064 		.ascii	"\000a\000d\000g\000e\000t\000s\000\034\003U\000b\000"
 617      00670065 
 617      00740073 
 617      001C0355 
 617      006200
 618 0064 65007200 		.ascii	"e\000r\000t\000o\000o\000t\000h\000 \000O\000n\000e"
 618      74006F00 
 618      6F007400 
ARM GAS  /tmp/ccs08v8g.s 			page 19


 618      68002000 
 618      4F006E00 
 619 0079 00420330 		.ascii	"\000B\0030\0000\0000\0000\0000\0000\0000\0000\0000\000"
 619      00300030 
 619      00300030 
 619      00300030 
 619      00300030 
 620 008e 30003000 		.ascii	"0\0000\0000\0000\0000\0000\0000\0000\0000\0000\0000"
 620      30003000 
 620      30003000 
 620      30003000 
 620      30003000 
 621 00a3 00300030 		.ascii	"\0000\0000\0000\0000\0000\0000\0000\0000\0000\0000\000"
 621      00300030 
 621      00300030 
 621      00300030 
 621      00300030 
 622 00b8 30003100 		.ascii	"0\0001\000\000"
 622      00
 623              		.bss
 624              		.align	2
 625              		.set	.LANCHOR1,. + 0
 628              	head:
 629 0000 00000000 		.space	4
 632              	tail:
 633 0004 00000000 		.space	4
 636              	last_usb_pkt:
 637 0008 00000000 		.space	4
 638              		.text
 639              	.Letext0:
 640              		.file 2 "../common/lpcusb/target/type.h"
 641              		.file 3 "../common/lpcusb/target/usbstruct.h"
 642              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 643              		.file 5 "../../host/libubertooth/src/ubertooth_interface.h"
 644              		.file 6 "../common/ubertooth.h"
 645              		.file 7 "ubertooth_usb.h"
 646              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 647              		.file 9 "/usr/include/newlib/sys/_types.h"
 648              		.file 10 "/usr/include/newlib/sys/reent.h"
 649              		.file 11 "/usr/include/newlib/sys/lock.h"
 650              		.file 12 "../common/lpcusb/target/usbhw_lpc.h"
 651              		.file 13 "../common/lpcusb/target/usbapi.h"
 652              		.file 14 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccs08v8g.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ubertooth_usb.c
     /tmp/ccs08v8g.s:16     .text.usb_vendor_request_handler:0000000000000000 $t
     /tmp/ccs08v8g.s:24     .text.usb_vendor_request_handler:0000000000000000 usb_vendor_request_handler
     /tmp/ccs08v8g.s:78     .text.usb_vendor_request_handler:000000000000002c $d
                            *COM*:0000000000000004 v_req_handler
     /tmp/ccs08v8g.s:83     .text.set_serial_descriptor:0000000000000000 $t
     /tmp/ccs08v8g.s:90     .text.set_serial_descriptor:0000000000000000 set_serial_descriptor
     /tmp/ccs08v8g.s:191    .text.ubertooth_usb_init:0000000000000000 $t
     /tmp/ccs08v8g.s:198    .text.ubertooth_usb_init:0000000000000000 ubertooth_usb_init
     /tmp/ccs08v8g.s:258    .text.ubertooth_usb_init:0000000000000038 $d
                            *COM*:0000000000000102 abVendorReqData
     /tmp/ccs08v8g.s:267    .text.usb_queue_init:0000000000000000 $t
     /tmp/ccs08v8g.s:274    .text.usb_queue_init:0000000000000000 usb_queue_init
     /tmp/ccs08v8g.s:299    .text.usb_queue_init:0000000000000014 $d
                            *COM*:0000000000002000 fifo
     /tmp/ccs08v8g.s:305    .text.usb_enqueue:0000000000000000 $t
     /tmp/ccs08v8g.s:312    .text.usb_enqueue:0000000000000000 usb_enqueue
     /tmp/ccs08v8g.s:364    .text.usb_enqueue:000000000000002c $d
     /tmp/ccs08v8g.s:370    .text.dequeue:0000000000000000 $t
     /tmp/ccs08v8g.s:377    .text.dequeue:0000000000000000 dequeue
     /tmp/ccs08v8g.s:420    .text.dequeue:0000000000000024 $d
     /tmp/ccs08v8g.s:426    .text.dequeue_send:0000000000000000 $t
     /tmp/ccs08v8g.s:433    .text.dequeue_send:0000000000000000 dequeue_send
     /tmp/ccs08v8g.s:523    .text.dequeue_send:0000000000000044 $d
     /tmp/ccs08v8g.s:531    .text.handle_usb:0000000000000000 $t
     /tmp/ccs08v8g.s:538    .text.handle_usb:0000000000000000 handle_usb
     /tmp/ccs08v8g.s:636    .bss:0000000000000008 last_usb_pkt
     /tmp/ccs08v8g.s:632    .bss:0000000000000004 tail
     /tmp/ccs08v8g.s:628    .bss:0000000000000000 head
     /tmp/ccs08v8g.s:611    .data:0000000000000000 abDescriptors
     /tmp/ccs08v8g.s:624    .bss:0000000000000000 $d

UNDEFINED SYMBOLS
get_device_serial
USBInit
USBRegisterDescriptors
USBRegisterRequestHandler
USBRegisterWinusbInterface
USBHwConnect
memset
USBHwEPWrite
USBHwEPGetStatus
USBHwISR
