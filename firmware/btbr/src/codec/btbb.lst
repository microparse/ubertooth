ARM GAS  /tmp/ccTTJHg8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"btbb.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.btbb_gen_syncword,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	btbb_gen_syncword
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	btbb_gen_syncword:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "src/codec/btbb.c"
   1:src/codec/btbb.c **** /* -*- c -*- */
   2:src/codec/btbb.c **** /*
   3:src/codec/btbb.c ****  * Copyright 2007 - 2013 Dominic Spill, Michael Ossmann, Will Code
   4:src/codec/btbb.c ****  *
   5:src/codec/btbb.c ****  * This file is part of libbtbb
   6:src/codec/btbb.c ****  *
   7:src/codec/btbb.c ****  * This program is free software; you can redistribute it and/or modify
   8:src/codec/btbb.c ****  * it under the terms of the GNU General Public License as published by
   9:src/codec/btbb.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:src/codec/btbb.c ****  * any later version.
  11:src/codec/btbb.c ****  *
  12:src/codec/btbb.c ****  * This program is distributed in the hope that it will be useful,
  13:src/codec/btbb.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:src/codec/btbb.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:src/codec/btbb.c ****  * GNU General Public License for more details.
  16:src/codec/btbb.c ****  *
  17:src/codec/btbb.c ****  * You should have received a copy of the GNU General Public License
  18:src/codec/btbb.c ****  * along with libbtbb; see the file COPYING.  If not, write to
  19:src/codec/btbb.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:src/codec/btbb.c ****  * Boston, MA 02110-1301, USA.
  21:src/codec/btbb.c ****  */
  22:src/codec/btbb.c **** 
  23:src/codec/btbb.c **** #include <stdint.h>
  24:src/codec/btbb.c **** 
  25:src/codec/btbb.c **** /* default codeword modified for PN sequence and barker code */
  26:src/codec/btbb.c **** #define DEFAULT_CODEWORD 0xb0000002c7820e7eULL
  27:src/codec/btbb.c **** /*
  28:src/codec/btbb.c ****  * generator matrix for sync word (64,30) linear block code
  29:src/codec/btbb.c ****  * based on polynomial 0260534236651
  30:src/codec/btbb.c ****  * thanks to http://www.ee.unb.ca/cgi-bin/tervo/polygen.pl
ARM GAS  /tmp/ccTTJHg8.s 			page 2


  31:src/codec/btbb.c ****  * modified for barker code
  32:src/codec/btbb.c ****  */
  33:src/codec/btbb.c **** static const uint64_t sw_matrix[24] = {
  34:src/codec/btbb.c ****         0xfe000002a0d1c014ULL, 0x01000003f0b9201fULL, 0x008000033ae40edbULL, 0x004000035fca99b9ULL,
  35:src/codec/btbb.c ****         0x002000036d5dd208ULL, 0x00100001b6aee904ULL, 0x00080000db577482ULL, 0x000400006dabba41ULL,
  36:src/codec/btbb.c ****         0x00020002f46d43f4ULL, 0x000100017a36a1faULL, 0x00008000bd1b50fdULL, 0x000040029c3536aaULL,
  37:src/codec/btbb.c ****         0x000020014e1a9b55ULL, 0x0000100265b5d37eULL, 0x0000080132dae9bfULL, 0x000004025bd5ea0bULL,
  38:src/codec/btbb.c ****         0x00000203ef526bd1ULL, 0x000001033511ab3cULL, 0x000000819a88d59eULL, 0x00000040cd446acfULL,
  39:src/codec/btbb.c ****         0x00000022a41aabb3ULL, 0x0000001390b5cb0dULL, 0x0000000b0ae27b52ULL, 0x0000000585713da9ULL}
  40:src/codec/btbb.c **** 
  41:src/codec/btbb.c **** /* Generate Sync Word from an LAP */
  42:src/codec/btbb.c **** uint64_t btbb_gen_syncword(const uint32_t LAP)
  43:src/codec/btbb.c **** {
  29              		.loc 1 43 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 43 1 is_stmt 0 view .LVU1
  35 0000 F0B4     		push	{r4, r5, r6, r7}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 7, -4
  44:src/codec/btbb.c ****         int i;
  41              		.loc 1 44 9 is_stmt 1 view .LVU2
  45:src/codec/btbb.c ****         uint64_t codeword = DEFAULT_CODEWORD;
  42              		.loc 1 45 9 view .LVU3
  43              	.LVL1:
  46:src/codec/btbb.c **** 
  47:src/codec/btbb.c ****         /* the sync word generated is in host order, not air order */
  48:src/codec/btbb.c ****         for (i = 0; i < 24; i++)
  44              		.loc 1 48 9 view .LVU4
  45              		.loc 1 48 21 view .LVU5
  46              		.loc 1 48 16 is_stmt 0 view .LVU6
  47 0002 0023     		movs	r3, #0
  49:src/codec/btbb.c ****                 if (LAP & (0x800000 >> i))
  48              		.loc 1 49 37 view .LVU7
  49 0004 4FF40006 		mov	r6, #8388608
  43:src/codec/btbb.c ****         int i;
  50              		.loc 1 43 1 view .LVU8
  51 0008 0546     		mov	r5, r0
  52 000a 094C     		ldr	r4, .L9
  45:src/codec/btbb.c **** 
  53              		.loc 1 45 18 view .LVU9
  54 000c 0948     		ldr	r0, .L9+4
  55              	.LVL2:
  45:src/codec/btbb.c **** 
  56              		.loc 1 45 18 view .LVU10
  57 000e 0A49     		ldr	r1, .L9+8
  58              	.LVL3:
  59              	.L3:
  60              		.loc 1 49 17 is_stmt 1 view .LVU11
  50:src/codec/btbb.c ****                         codeword ^= sw_matrix[i];
  61              		.loc 1 50 25 view .LVU12
  49:src/codec/btbb.c ****                         codeword ^= sw_matrix[i];
ARM GAS  /tmp/ccTTJHg8.s 			page 3


  62              		.loc 1 49 37 is_stmt 0 view .LVU13
  63 0010 46FA03F2 		asr	r2, r6, r3
  49:src/codec/btbb.c ****                         codeword ^= sw_matrix[i];
  64              		.loc 1 49 20 view .LVU14
  65 0014 2A42     		tst	r2, r5
  66 0016 03F10103 		add	r3, r3, #1
  67              	.LVL4:
  49:src/codec/btbb.c ****                         codeword ^= sw_matrix[i];
  68              		.loc 1 49 20 view .LVU15
  69 001a 03D0     		beq	.L2
  70              		.loc 1 50 34 view .LVU16
  71 001c D4E90072 		ldrd	r7, r2, [r4]
  72 0020 7840     		eors	r0, r0, r7
  73              	.LVL5:
  74              		.loc 1 50 34 view .LVU17
  75 0022 5140     		eors	r1, r1, r2
  76              	.L2:
  77              	.LVL6:
  48:src/codec/btbb.c ****                 if (LAP & (0x800000 >> i))
  78              		.loc 1 48 29 is_stmt 1 view .LVU18
  48:src/codec/btbb.c ****                 if (LAP & (0x800000 >> i))
  79              		.loc 1 48 21 view .LVU19
  48:src/codec/btbb.c ****                 if (LAP & (0x800000 >> i))
  80              		.loc 1 48 9 is_stmt 0 view .LVU20
  81 0024 182B     		cmp	r3, #24
  82 0026 04F10804 		add	r4, r4, #8
  83 002a F1D1     		bne	.L3
  51:src/codec/btbb.c **** 
  52:src/codec/btbb.c ****         return codeword;
  53:src/codec/btbb.c **** }
  84              		.loc 1 53 1 view .LVU21
  85 002c F0BC     		pop	{r4, r5, r6, r7}
  86              		.cfi_restore 7
  87              		.cfi_restore 6
  88              		.cfi_restore 5
  89              		.cfi_restore 4
  90              		.cfi_def_cfa_offset 0
  91              	.LVL7:
  92              		.loc 1 53 1 view .LVU22
  93 002e 7047     		bx	lr
  94              	.L10:
  95              		.align	2
  96              	.L9:
  97 0030 00000000 		.word	.LANCHOR0
  98 0034 7E0E82C7 		.word	-947777922
  99 0038 020000B0 		.word	-1342177278
 100              		.cfi_endproc
 101              	.LFE0:
 103              		.section	.rodata
 104              		.align	3
 105              		.set	.LANCHOR0,. + 0
 108              	sw_matrix:
 109 0000 14C0D1A0 		.word	-1596866540
 110 0004 020000FE 		.word	-33554430
 111 0008 1F20B9F0 		.word	-256303073
 112 000c 03000001 		.word	16777219
 113 0010 DB0EE43A 		.word	988024539
ARM GAS  /tmp/ccTTJHg8.s 			page 4


 114 0014 03008000 		.word	8388611
 115 0018 B999CA5F 		.word	1607113145
 116 001c 03004000 		.word	4194307
 117 0020 08D25D6D 		.word	1834865160
 118 0024 03002000 		.word	2097155
 119 0028 04E9AEB6 		.word	-1230051068
 120 002c 01001000 		.word	1048577
 121 0030 827457DB 		.word	-615025534
 122 0034 00000800 		.word	524288
 123 0038 41BAAB6D 		.word	1839970881
 124 003c 00000400 		.word	262144
 125 0040 F4436DF4 		.word	-194165772
 126 0044 02000200 		.word	131074
 127 0048 FAA1367A 		.word	2050400762
 128 004c 01000100 		.word	65537
 129 0050 FD501BBD 		.word	-1122283267
 130 0054 00800000 		.word	32768
 131 0058 AA36359C 		.word	-1674234198
 132 005c 02400000 		.word	16386
 133 0060 559B1A4E 		.word	1310366549
 134 0064 01200000 		.word	8193
 135 0068 7ED3B565 		.word	1706414974
 136 006c 02100000 		.word	4098
 137 0070 BFE9DA32 		.word	853207487
 138 0074 01080000 		.word	2049
 139 0078 0BEAD55B 		.word	1540745739
 140 007c 02040000 		.word	1026
 141 0080 D16B52EF 		.word	-279811119
 142 0084 03020000 		.word	515
 143 0088 3CAB1135 		.word	890350396
 144 008c 03010000 		.word	259
 145 0090 9ED5889A 		.word	-1702308450
 146 0094 81000000 		.word	129
 147 0098 CF6A44CD 		.word	-851154225
 148 009c 40000000 		.word	64
 149 00a0 B3AB1AA4 		.word	-1541755981
 150 00a4 22000000 		.word	34
 151 00a8 0DCBB590 		.word	-1867134195
 152 00ac 13000000 		.word	19
 153 00b0 527BE20A 		.word	182614866
 154 00b4 0B000000 		.word	11
 155 00b8 A93D7185 		.word	-2056176215
 156 00bc 05000000 		.word	5
 157              		.text
 158              	.Letext0:
 159              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
ARM GAS  /tmp/ccTTJHg8.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 btbb.c
     /tmp/ccTTJHg8.s:16     .text.btbb_gen_syncword:0000000000000000 $t
     /tmp/ccTTJHg8.s:25     .text.btbb_gen_syncword:0000000000000000 btbb_gen_syncword
     /tmp/ccTTJHg8.s:97     .text.btbb_gen_syncword:0000000000000030 $d
     /tmp/ccTTJHg8.s:104    .rodata:0000000000000000 $d
     /tmp/ccTTJHg8.s:108    .rodata:0000000000000000 sw_matrix

NO UNDEFINED SYMBOLS
