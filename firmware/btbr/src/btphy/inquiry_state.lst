ARM GAS  /tmp/ccMIbKr9.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"inquiry_state.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 696E7175 		.ascii	"inquiry timeout\012\000"
  18      69727920 
  18      74696D65 
  18      6F75740A 
  18      00
  19              		.section	.text.inquiry_start_sync,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	inquiry_start_sync:
  29              	.LVL0:
  30              	.LFB34:
  31              		.file 1 "src/btphy/inquiry_state.c"
   1:src/btphy/inquiry_state.c **** /* Inquiry state
   2:src/btphy/inquiry_state.c ****  *
   3:src/btphy/inquiry_state.c ****  * Copyright 2020 Etienne Helluy-Lafont, Univ. Lille, CNRS.
   4:src/btphy/inquiry_state.c ****  *
   5:src/btphy/inquiry_state.c ****  * This file is part of Project Ubertooth.
   6:src/btphy/inquiry_state.c ****  *
   7:src/btphy/inquiry_state.c ****  * This program is free software; you can redistribute it and/or modify
   8:src/btphy/inquiry_state.c ****  * it under the terms of the GNU General Public License as published by
   9:src/btphy/inquiry_state.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:src/btphy/inquiry_state.c ****  * any later version.
  11:src/btphy/inquiry_state.c ****  *
  12:src/btphy/inquiry_state.c ****  * This program is distributed in the hope that it will be useful,
  13:src/btphy/inquiry_state.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:src/btphy/inquiry_state.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:src/btphy/inquiry_state.c ****  * GNU General Public License for more details.
  16:src/btphy/inquiry_state.c ****  *
  17:src/btphy/inquiry_state.c ****  * You should have received a copy of the GNU General Public License
  18:src/btphy/inquiry_state.c ****  * along with this program; see the file COPYING.  If not, write to
  19:src/btphy/inquiry_state.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:src/btphy/inquiry_state.c ****  * Boston, MA 02110-1301, USA.
  21:src/btphy/inquiry_state.c ****  */
  22:src/btphy/inquiry_state.c **** #include <string.h>
  23:src/btphy/inquiry_state.c **** #include <ubtbr/cfg.h>
ARM GAS  /tmp/ccMIbKr9.s 			page 2


  24:src/btphy/inquiry_state.c **** #include <ubtbr/btctl_intf.h>
  25:src/btphy/inquiry_state.c **** #include <ubtbr/btphy.h>
  26:src/btphy/inquiry_state.c **** #include <ubtbr/tdma_sched.h>
  27:src/btphy/inquiry_state.c **** #include <ubtbr/bb.h>
  28:src/btphy/inquiry_state.c **** #include <ubtbr/rx_task.h>
  29:src/btphy/inquiry_state.c **** #include <ubtbr/tx_task.h>
  30:src/btphy/inquiry_state.c **** 
  31:src/btphy/inquiry_state.c **** /* Max duration : 60 seconds */
  32:src/btphy/inquiry_state.c **** #define INQ_MAX_TICKS (CLKN_RATE*60)
  33:src/btphy/inquiry_state.c **** 
  34:src/btphy/inquiry_state.c **** static struct {
  35:src/btphy/inquiry_state.c **** 	uint32_t clkn_start;
  36:src/btphy/inquiry_state.c **** } inquiry_state;
  37:src/btphy/inquiry_state.c **** 
  38:src/btphy/inquiry_state.c **** static int inquiry_canceled(void)
  39:src/btphy/inquiry_state.c **** {
  40:src/btphy/inquiry_state.c **** 	return btctl_get_state() != BTCTL_STATE_INQUIRY;
  41:src/btphy/inquiry_state.c **** }
  42:src/btphy/inquiry_state.c **** 
  43:src/btphy/inquiry_state.c **** #define TX_PREPARE_IDX	3  // We will transmit at clkn1_0 = 0
  44:src/btphy/inquiry_state.c **** 
  45:src/btphy/inquiry_state.c **** static void inquiry_schedule(unsigned delay);
  46:src/btphy/inquiry_state.c **** 
  47:src/btphy/inquiry_state.c **** static int inquiry_rx_cb(msg_t *msg, void *arg, int time_offset)
  48:src/btphy/inquiry_state.c **** {
  49:src/btphy/inquiry_state.c **** 	btctl_hdr_t *h = (btctl_hdr_t*)msg->data;
  50:src/btphy/inquiry_state.c **** 	btctl_rx_pkt_t *pkt;
  51:src/btphy/inquiry_state.c **** 
  52:src/btphy/inquiry_state.c **** 	if (inquiry_canceled())
  53:src/btphy/inquiry_state.c **** 	{
  54:src/btphy/inquiry_state.c **** 		msg_free(msg);
  55:src/btphy/inquiry_state.c **** 		return 0;
  56:src/btphy/inquiry_state.c **** 	}
  57:src/btphy/inquiry_state.c **** 
  58:src/btphy/inquiry_state.c **** 	if (h->type != BTCTL_RX_PKT)
  59:src/btphy/inquiry_state.c **** 		DIE("paging : expect acl rx");
  60:src/btphy/inquiry_state.c **** 	pkt = (btctl_rx_pkt_t *)h->data;
  61:src/btphy/inquiry_state.c **** 
  62:src/btphy/inquiry_state.c **** 	if (!BBPKT_GOOD_CRC(pkt))
  63:src/btphy/inquiry_state.c **** 	{
  64:src/btphy/inquiry_state.c **** 		msg_free(msg);
  65:src/btphy/inquiry_state.c **** 		inquiry_schedule(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));	// schedule tx in next slot
  66:src/btphy/inquiry_state.c **** 	}
  67:src/btphy/inquiry_state.c **** 	else
  68:src/btphy/inquiry_state.c **** 	{
  69:src/btphy/inquiry_state.c **** 		if (pkt->bb_hdr.type == BB_TYPE_FHS)
  70:src/btphy/inquiry_state.c **** 		{
  71:src/btphy/inquiry_state.c **** 			/* Schedule rx EFHS for next RX slot*/
  72:src/btphy/inquiry_state.c **** 			rx_task_schedule(2,
  73:src/btphy/inquiry_state.c **** 				inquiry_rx_cb, NULL,	// efhs rx callback
  74:src/btphy/inquiry_state.c **** 				1<<RX_F_PAYLOAD		// wait for payload
  75:src/btphy/inquiry_state.c **** 			);
  76:src/btphy/inquiry_state.c **** 		}
  77:src/btphy/inquiry_state.c **** 		else
  78:src/btphy/inquiry_state.c **** 		{
  79:src/btphy/inquiry_state.c **** 			/* Schedule normal inquiry */
  80:src/btphy/inquiry_state.c **** 			inquiry_schedule(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
ARM GAS  /tmp/ccMIbKr9.s 			page 3


  81:src/btphy/inquiry_state.c **** 		}
  82:src/btphy/inquiry_state.c **** 		if (btctl_tx_enqueue(msg))
  83:src/btphy/inquiry_state.c **** 		{
  84:src/btphy/inquiry_state.c **** 			DIE("txq full in inquiry\n");
  85:src/btphy/inquiry_state.c **** 		}
  86:src/btphy/inquiry_state.c **** 	}
  87:src/btphy/inquiry_state.c **** 	return 0;
  88:src/btphy/inquiry_state.c **** }
  89:src/btphy/inquiry_state.c **** 
  90:src/btphy/inquiry_state.c **** static void inquiry_schedule(unsigned delay)
  91:src/btphy/inquiry_state.c **** {
  92:src/btphy/inquiry_state.c **** 	/* FIXME: wrap */
  93:src/btphy/inquiry_state.c **** 	if (btphy.master_clkn >= inquiry_state.clkn_start + INQ_MAX_TICKS)
  94:src/btphy/inquiry_state.c **** 	{
  95:src/btphy/inquiry_state.c **** 		cprintf("inquiry timeout\n");
  96:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
  97:src/btphy/inquiry_state.c **** 		return;
  98:src/btphy/inquiry_state.c **** 	}
  99:src/btphy/inquiry_state.c **** 
 100:src/btphy/inquiry_state.c **** 	/* Schedule TX */
 101:src/btphy/inquiry_state.c **** 	tx_task_schedule(delay,
 102:src/btphy/inquiry_state.c **** 		NULL, NULL,
 103:src/btphy/inquiry_state.c **** 		NULL, NULL); // No packet / no payload
 104:src/btphy/inquiry_state.c **** 
 105:src/btphy/inquiry_state.c **** 	/* Schedule rx fhs: */
 106:src/btphy/inquiry_state.c **** 	rx_task_schedule(delay+2,
 107:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 108:src/btphy/inquiry_state.c **** 		1<<RX_F_PAYLOAD		// wait for payload
 109:src/btphy/inquiry_state.c **** 		);
 110:src/btphy/inquiry_state.c **** }
 111:src/btphy/inquiry_state.c **** 
 112:src/btphy/inquiry_state.c **** /* dummy tick handler to start TX'ing with a proper clock */
 113:src/btphy/inquiry_state.c **** static int inquiry_start_sync(uint8_t p1, uint8_t p2, uint16_t p3)
 114:src/btphy/inquiry_state.c **** {
  32              		.loc 1 114 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 114 1 is_stmt 0 view .LVU1
  37 0000 30B5     		push	{r4, r5, lr}
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 83B0     		sub	sp, sp, #12
  43              		.cfi_def_cfa_offset 24
 115:src/btphy/inquiry_state.c **** 	unsigned delay;
  44              		.loc 1 115 2 is_stmt 1 view .LVU2
 116:src/btphy/inquiry_state.c **** 
 117:src/btphy/inquiry_state.c **** 	/* Use the master clkn */
 118:src/btphy/inquiry_state.c **** 	btphy_cancel_clkn_delay();
  45              		.loc 1 118 2 view .LVU3
  46 0004 FFF7FEFF 		bl	btphy_cancel_clkn_delay
  47              	.LVL1:
 119:src/btphy/inquiry_state.c **** 	delay = 4+(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
  48              		.loc 1 119 2 view .LVU4
  49              		.loc 1 119 31 is_stmt 0 view .LVU5
ARM GAS  /tmp/ccMIbKr9.s 			page 4


  50 0008 144B     		ldr	r3, .L6
 120:src/btphy/inquiry_state.c **** 	inquiry_state.clkn_start = btphy.master_clkn+delay;
  51              		.loc 1 120 27 view .LVU6
  52 000a 154D     		ldr	r5, .L6+4
 119:src/btphy/inquiry_state.c **** 	delay = 4+(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
  53              		.loc 1 119 31 view .LVU7
  54 000c 5A68     		ldr	r2, [r3, #4]
 119:src/btphy/inquiry_state.c **** 	delay = 4+(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
  55              		.loc 1 119 30 view .LVU8
  56 000e D443     		mvns	r4, r2
 119:src/btphy/inquiry_state.c **** 	delay = 4+(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
  57              		.loc 1 119 14 view .LVU9
  58 0010 04F00304 		and	r4, r4, #3
 119:src/btphy/inquiry_state.c **** 	delay = 4+(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));
  59              		.loc 1 119 8 view .LVU10
  60 0014 201D     		adds	r0, r4, #4
  61              	.LVL2:
  62              		.loc 1 120 2 is_stmt 1 view .LVU11
  63              		.loc 1 120 46 is_stmt 0 view .LVU12
  64 0016 1118     		adds	r1, r2, r0
  65              	.LBB50:
  66              	.LBB51:
  93:src/btphy/inquiry_state.c **** 	{
  67              		.loc 1 93 52 view .LVU13
  68 0018 01F53B33 		add	r3, r1, #191488
  69 001c 03F50073 		add	r3, r3, #512
  93:src/btphy/inquiry_state.c **** 	{
  70              		.loc 1 93 5 view .LVU14
  71 0020 9A42     		cmp	r2, r3
  72              	.LBE51:
  73              	.LBE50:
  74              		.loc 1 120 27 view .LVU15
  75 0022 2960     		str	r1, [r5]
 121:src/btphy/inquiry_state.c **** 	inquiry_schedule(delay);
  76              		.loc 1 121 2 is_stmt 1 view .LVU16
  77              	.LVL3:
  78              	.LBB56:
  79              	.LBI50:
  90:src/btphy/inquiry_state.c **** {
  80              		.loc 1 90 13 view .LVU17
  81              	.LBB54:
  93:src/btphy/inquiry_state.c **** 	{
  82              		.loc 1 93 2 view .LVU18
  93:src/btphy/inquiry_state.c **** 	{
  83              		.loc 1 93 5 is_stmt 0 view .LVU19
  84 0024 0FD2     		bcs	.L5
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
  85              		.loc 1 101 2 is_stmt 1 view .LVU20
  86 0026 0025     		movs	r5, #0
  87 0028 2B46     		mov	r3, r5
  88 002a 2A46     		mov	r2, r5
  89 002c 2946     		mov	r1, r5
  90 002e 0095     		str	r5, [sp]
  91 0030 FFF7FEFF 		bl	tx_task_schedule
  92              	.LVL4:
 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
  93              		.loc 1 106 2 view .LVU21
ARM GAS  /tmp/ccMIbKr9.s 			page 5


  94 0034 A01D     		adds	r0, r4, #6
  95 0036 2A46     		mov	r2, r5
  96 0038 0123     		movs	r3, #1
  97 003a 0A49     		ldr	r1, .L6+8
  98 003c FFF7FEFF 		bl	rx_task_schedule
  99              	.LVL5:
 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 100              		.loc 1 106 2 is_stmt 0 view .LVU22
 101              	.LBE54:
 102              	.LBE56:
 122:src/btphy/inquiry_state.c **** 	return 0;
 103              		.loc 1 122 2 is_stmt 1 view .LVU23
 123:src/btphy/inquiry_state.c **** }
 104              		.loc 1 123 1 is_stmt 0 view .LVU24
 105 0040 0020     		movs	r0, #0
 106 0042 03B0     		add	sp, sp, #12
 107              		.cfi_remember_state
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0044 30BD     		pop	{r4, r5, pc}
 111              	.LVL6:
 112              	.L5:
 113              		.cfi_restore_state
 114              	.LBB57:
 115              	.LBB55:
 116              	.LBB52:
 117              	.LBI52:
  90:src/btphy/inquiry_state.c **** {
 118              		.loc 1 90 13 is_stmt 1 view .LVU25
 119              	.LBB53:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 120              		.loc 1 95 3 view .LVU26
 121 0046 0848     		ldr	r0, .L6+12
 122              	.LVL7:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 123              		.loc 1 95 3 is_stmt 0 view .LVU27
 124 0048 FFF7FEFF 		bl	cprintf
 125              	.LVL8:
  96:src/btphy/inquiry_state.c **** 		return;
 126              		.loc 1 96 3 is_stmt 1 view .LVU28
 127 004c 0121     		movs	r1, #1
 128 004e 0020     		movs	r0, #0
 129 0050 FFF7FEFF 		bl	btctl_set_state
 130              	.LVL9:
  97:src/btphy/inquiry_state.c **** 	}
 131              		.loc 1 97 3 view .LVU29
  97:src/btphy/inquiry_state.c **** 	}
 132              		.loc 1 97 3 is_stmt 0 view .LVU30
 133              	.LBE53:
 134              	.LBE52:
 135              	.LBE55:
 136              	.LBE57:
 122:src/btphy/inquiry_state.c **** }
 137              		.loc 1 122 2 is_stmt 1 view .LVU31
 138              		.loc 1 123 1 is_stmt 0 view .LVU32
 139 0054 0020     		movs	r0, #0
 140 0056 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccMIbKr9.s 			page 6


 141              		.cfi_def_cfa_offset 12
 142              		@ sp needed
 143 0058 30BD     		pop	{r4, r5, pc}
 144              	.LVL10:
 145              	.L7:
 146              		.loc 1 123 1 view .LVU33
 147 005a 00BF     		.align	2
 148              	.L6:
 149 005c 00000000 		.word	btphy
 150 0060 00000000 		.word	.LANCHOR0
 151 0064 00000000 		.word	inquiry_rx_cb
 152 0068 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE34:
 156              		.section	.rodata.str1.4
 157 0011 000000   		.align	2
 158              	.LC1:
 159 0014 4449457C 		.ascii	"DIE|paging : expect acl rx\012\000"
 159      70616769 
 159      6E67203A 
 159      20657870 
 159      65637420 
 160              		.align	2
 161              	.LC2:
 162 0030 4449457C 		.ascii	"DIE|txq full in inquiry\012\012\000"
 162      74787120 
 162      66756C6C 
 162      20696E20 
 162      696E7175 
 163              		.section	.text.inquiry_rx_cb,"ax",%progbits
 164              		.align	1
 165              		.p2align 2,,3
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu softvfp
 171              	inquiry_rx_cb:
 172              	.LVL11:
 173              	.LFB32:
  48:src/btphy/inquiry_state.c **** 	btctl_hdr_t *h = (btctl_hdr_t*)msg->data;
 174              		.loc 1 48 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
  48:src/btphy/inquiry_state.c **** 	btctl_hdr_t *h = (btctl_hdr_t*)msg->data;
 178              		.loc 1 48 1 is_stmt 0 view .LVU35
 179 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 180              		.cfi_def_cfa_offset 20
 181              		.cfi_offset 4, -20
 182              		.cfi_offset 5, -16
 183              		.cfi_offset 6, -12
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 83B0     		sub	sp, sp, #12
 187              		.cfi_def_cfa_offset 32
  49:src/btphy/inquiry_state.c **** 	btctl_rx_pkt_t *pkt;
 188              		.loc 1 49 2 is_stmt 1 view .LVU36
ARM GAS  /tmp/ccMIbKr9.s 			page 7


 189              	.LVL12:
  50:src/btphy/inquiry_state.c **** 
 190              		.loc 1 50 2 view .LVU37
  52:src/btphy/inquiry_state.c **** 	{
 191              		.loc 1 52 2 view .LVU38
 192              	.LBB91:
 193              	.LBI91:
  38:src/btphy/inquiry_state.c **** {
 194              		.loc 1 38 12 view .LVU39
 195              	.LBE91:
  40:src/btphy/inquiry_state.c **** }
 196              		.loc 1 40 2 view .LVU40
 197              	.LBB94:
 198              	.LBB92:
 199              	.LBI92:
 200              		.file 2 "include/ubtbr/btctl_intf.h"
   1:include/ubtbr/btctl_intf.h **** #ifndef __BTCTL_INTF_H
   2:include/ubtbr/btctl_intf.h **** #define __BTCTL_INTF_H
   3:include/ubtbr/btctl_intf.h **** #include <ubtbr/bb_msg.h>
   4:include/ubtbr/btctl_intf.h **** #include <ubtbr/queue.h>
   5:include/ubtbr/btctl_intf.h **** #include <ubtbr/system.h>
   6:include/ubtbr/btctl_intf.h **** #include <ubertooth_interface.h>
   7:include/ubtbr/btctl_intf.h **** 
   8:include/ubtbr/btctl_intf.h **** typedef struct btctl_s {
   9:include/ubtbr/btctl_intf.h **** 	btctl_state_t state;
  10:include/ubtbr/btctl_intf.h **** 	msg_queue_t rx_q;
  11:include/ubtbr/btctl_intf.h **** 	msg_queue_t tx_q;
  12:include/ubtbr/btctl_intf.h **** 	msg_queue_t acl_tx_q;
  13:include/ubtbr/btctl_intf.h **** 	msg_t *eir_msg;
  14:include/ubtbr/btctl_intf.h **** 	btctl_tx_pkt_t *eir_pkt;
  15:include/ubtbr/btctl_intf.h **** } btctl_t;
  16:include/ubtbr/btctl_intf.h **** 
  17:include/ubtbr/btctl_intf.h **** extern btctl_t btctl;
  18:include/ubtbr/btctl_intf.h **** 
  19:include/ubtbr/btctl_intf.h **** void btctl_init(void);
  20:include/ubtbr/btctl_intf.h **** int btctl_work(void);
  21:include/ubtbr/btctl_intf.h **** 
  22:include/ubtbr/btctl_intf.h **** void btctl_set_state(btctl_state_t state, btctl_reason_t reason);
  23:include/ubtbr/btctl_intf.h **** 
  24:include/ubtbr/btctl_intf.h **** static inline btctl_state_t btctl_get_state(void)
 201              		.loc 2 24 29 view .LVU41
 202              	.LBB93:
  25:include/ubtbr/btctl_intf.h **** {
  26:include/ubtbr/btctl_intf.h **** 	return btctl.state;
 203              		.loc 2 26 2 view .LVU42
 204              		.loc 2 26 14 is_stmt 0 view .LVU43
 205 0004 394B     		ldr	r3, .L26
 206              	.LBE93:
 207              	.LBE92:
 208              	.LBE94:
  48:src/btphy/inquiry_state.c **** 	btctl_hdr_t *h = (btctl_hdr_t*)msg->data;
 209              		.loc 1 48 1 view .LVU44
 210 0006 0446     		mov	r4, r0
  52:src/btphy/inquiry_state.c **** 	{
 211              		.loc 1 52 5 view .LVU45
 212 0008 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 213 000a 012E     		cmp	r6, #1
ARM GAS  /tmp/ccMIbKr9.s 			page 8


 214 000c 50D1     		bne	.L20
  58:src/btphy/inquiry_state.c **** 		DIE("paging : expect acl rx");
 215              		.loc 1 58 2 is_stmt 1 view .LVU46
  58:src/btphy/inquiry_state.c **** 		DIE("paging : expect acl rx");
 216              		.loc 1 58 5 is_stmt 0 view .LVU47
 217 000e 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 218 0010 282B     		cmp	r3, #40
 219 0012 68D1     		bne	.L21
  60:src/btphy/inquiry_state.c **** 
 220              		.loc 1 60 2 is_stmt 1 view .LVU48
 221              	.LVL13:
  62:src/btphy/inquiry_state.c **** 	{
 222              		.loc 1 62 2 view .LVU49
  62:src/btphy/inquiry_state.c **** 	{
 223              		.loc 1 62 5 is_stmt 0 view .LVU50
 224 0014 427D     		ldrb	r2, [r0, #21]	@ zero_extendqisi2
 225              	.LVL14:
  62:src/btphy/inquiry_state.c **** 	{
 226              		.loc 1 62 5 view .LVU51
 227 0016 12F00805 		ands	r5, r2, #8
 228 001a 2AD0     		beq	.L22
  69:src/btphy/inquiry_state.c **** 		{
 229              		.loc 1 69 3 is_stmt 1 view .LVU52
  69:src/btphy/inquiry_state.c **** 		{
 230              		.loc 1 69 6 is_stmt 0 view .LVU53
 231 001c 407E     		ldrb	r0, [r0, #25]	@ zero_extendqisi2
 232              	.LVL15:
  69:src/btphy/inquiry_state.c **** 		{
 233              		.loc 1 69 6 view .LVU54
 234 001e 0228     		cmp	r0, #2
 235 0020 5BD0     		beq	.L23
  80:src/btphy/inquiry_state.c **** 		}
 236              		.loc 1 80 4 is_stmt 1 view .LVU55
 237              	.LBB95:
 238              	.LBB96:
  93:src/btphy/inquiry_state.c **** 	{
 239              		.loc 1 93 40 is_stmt 0 view .LVU56
 240 0022 334B     		ldr	r3, .L26+4
 241              	.LBE96:
 242              	.LBE95:
  80:src/btphy/inquiry_state.c **** 		}
 243              		.loc 1 80 39 view .LVU57
 244 0024 334A     		ldr	r2, .L26+8
 245              	.LBB104:
 246              	.LBB99:
  93:src/btphy/inquiry_state.c **** 	{
 247              		.loc 1 93 52 view .LVU58
 248 0026 1B68     		ldr	r3, [r3]
 249              	.LBE99:
 250              	.LBE104:
  80:src/btphy/inquiry_state.c **** 		}
 251              		.loc 1 80 39 view .LVU59
 252 0028 5068     		ldr	r0, [r2, #4]
 253              	.LVL16:
 254              	.LBB105:
 255              	.LBI95:
  90:src/btphy/inquiry_state.c **** {
ARM GAS  /tmp/ccMIbKr9.s 			page 9


 256              		.loc 1 90 13 is_stmt 1 view .LVU60
 257              	.LBB100:
  93:src/btphy/inquiry_state.c **** 	{
 258              		.loc 1 93 2 view .LVU61
  93:src/btphy/inquiry_state.c **** 	{
 259              		.loc 1 93 52 is_stmt 0 view .LVU62
 260 002a 03F53B33 		add	r3, r3, #191488
 261 002e 03F50073 		add	r3, r3, #512
  93:src/btphy/inquiry_state.c **** 	{
 262              		.loc 1 93 5 view .LVU63
 263 0032 9842     		cmp	r0, r3
 264 0034 41D2     		bcs	.L24
 265              	.LBE100:
 266              	.LBE105:
  80:src/btphy/inquiry_state.c **** 		}
 267              		.loc 1 80 22 view .LVU64
 268 0036 C043     		mvns	r0, r0
 269              	.LVL17:
 270              	.LBB106:
 271              	.LBB101:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 272              		.loc 1 101 2 view .LVU65
 273 0038 0027     		movs	r7, #0
 274              	.LBE101:
 275              	.LBE106:
  80:src/btphy/inquiry_state.c **** 		}
 276              		.loc 1 80 4 view .LVU66
 277 003a 00F00305 		and	r5, r0, #3
 278              	.LBB107:
 279              	.LBB102:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 280              		.loc 1 101 2 is_stmt 1 view .LVU67
 281 003e 2846     		mov	r0, r5
 282              	.LVL18:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 283              		.loc 1 101 2 is_stmt 0 view .LVU68
 284 0040 3B46     		mov	r3, r7
 285 0042 3A46     		mov	r2, r7
 286              	.LVL19:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 287              		.loc 1 101 2 view .LVU69
 288 0044 3946     		mov	r1, r7
 289              	.LVL20:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 290              		.loc 1 101 2 view .LVU70
 291 0046 0097     		str	r7, [sp]
 292 0048 FFF7FEFF 		bl	tx_task_schedule
 293              	.LVL21:
 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 294              		.loc 1 106 2 is_stmt 1 view .LVU71
 295 004c 3346     		mov	r3, r6
 296 004e 3A46     		mov	r2, r7
 297 0050 2949     		ldr	r1, .L26+12
 298 0052 A81C     		adds	r0, r5, #2
 299 0054 FFF7FEFF 		bl	rx_task_schedule
 300              	.LVL22:
 301              	.L15:
ARM GAS  /tmp/ccMIbKr9.s 			page 10


 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 302              		.loc 1 106 2 is_stmt 0 view .LVU72
 303              	.LBE102:
 304              	.LBE107:
 305              	.LBB108:
 306              	.LBI108:
  47:src/btphy/inquiry_state.c **** {
 307              		.loc 1 47 12 is_stmt 1 view .LVU73
 308              	.LBB109:
  82:src/btphy/inquiry_state.c **** 		{
 309              		.loc 1 82 3 view .LVU74
 310              	.LBB110:
 311              	.LBI110:
  27:include/ubtbr/btctl_intf.h **** }
  28:include/ubtbr/btctl_intf.h **** 
  29:include/ubtbr/btctl_intf.h **** static inline btctl_tx_pkt_t *btctl_get_eir(void)
  30:include/ubtbr/btctl_intf.h **** {
  31:include/ubtbr/btctl_intf.h **** 	return btctl.eir_pkt;
  32:include/ubtbr/btctl_intf.h **** }
  33:include/ubtbr/btctl_intf.h **** 
  34:include/ubtbr/btctl_intf.h **** static inline msg_t *btctl_msg_alloc(unsigned type)
  35:include/ubtbr/btctl_intf.h **** {
  36:include/ubtbr/btctl_intf.h **** 	msg_t *msg;
  37:include/ubtbr/btctl_intf.h **** 	btctl_hdr_t *hdr;
  38:include/ubtbr/btctl_intf.h **** 
  39:include/ubtbr/btctl_intf.h **** 	/* maximum size ?*/
  40:include/ubtbr/btctl_intf.h **** 	msg = msg_alloc(sizeof(btctl_hdr_t)+sizeof(btctl_rx_pkt_t)+MAX_ACL_PACKET_SIZE);
  41:include/ubtbr/btctl_intf.h **** 	hdr = (btctl_hdr_t*) msg_put(msg, sizeof(*hdr));
  42:include/ubtbr/btctl_intf.h **** 	hdr->type = type;
  43:include/ubtbr/btctl_intf.h **** 
  44:include/ubtbr/btctl_intf.h **** 	return msg;
  45:include/ubtbr/btctl_intf.h **** }
  46:include/ubtbr/btctl_intf.h **** 
  47:include/ubtbr/btctl_intf.h **** static inline msg_t *safe_dequeue(msg_queue_t* q)
  48:include/ubtbr/btctl_intf.h **** {
  49:include/ubtbr/btctl_intf.h **** 	uint32_t flags = irq_save_disable();
  50:include/ubtbr/btctl_intf.h **** 	msg_t *msg;
  51:include/ubtbr/btctl_intf.h **** 
  52:include/ubtbr/btctl_intf.h **** 	msg = msg_dequeue(q);
  53:include/ubtbr/btctl_intf.h **** 	irq_restore(flags);
  54:include/ubtbr/btctl_intf.h **** 
  55:include/ubtbr/btctl_intf.h **** 	return msg;
  56:include/ubtbr/btctl_intf.h **** }
  57:include/ubtbr/btctl_intf.h **** 
  58:include/ubtbr/btctl_intf.h **** static inline int safe_enqueue(msg_queue_t *q, msg_t *msg)
  59:include/ubtbr/btctl_intf.h **** {
  60:include/ubtbr/btctl_intf.h **** 	uint32_t flags = irq_save_disable();
  61:include/ubtbr/btctl_intf.h **** 	int rc;
  62:include/ubtbr/btctl_intf.h **** 
  63:include/ubtbr/btctl_intf.h **** 	rc = msg_enqueue(q, msg);
  64:include/ubtbr/btctl_intf.h **** 	irq_restore(flags);
  65:include/ubtbr/btctl_intf.h **** 
  66:include/ubtbr/btctl_intf.h **** 	return rc;
  67:include/ubtbr/btctl_intf.h **** }
  68:include/ubtbr/btctl_intf.h **** 
  69:include/ubtbr/btctl_intf.h **** /* Called by usb driver to retreive next message to send to host */
  70:include/ubtbr/btctl_intf.h **** static inline msg_t *btctl_tx_dequeue(void)
ARM GAS  /tmp/ccMIbKr9.s 			page 11


  71:include/ubtbr/btctl_intf.h **** {
  72:include/ubtbr/btctl_intf.h **** 	return safe_dequeue(&btctl.tx_q);
  73:include/ubtbr/btctl_intf.h **** }
  74:include/ubtbr/btctl_intf.h **** 
  75:include/ubtbr/btctl_intf.h **** /* Enqueue a message for host */
  76:include/ubtbr/btctl_intf.h **** static inline int btctl_tx_enqueue(msg_t *msg)
 312              		.loc 2 76 19 view .LVU75
 313              	.LBB111:
  77:include/ubtbr/btctl_intf.h **** {
  78:include/ubtbr/btctl_intf.h **** 	return safe_enqueue(&btctl.tx_q, msg);
 314              		.loc 2 78 2 view .LVU76
 315              	.LBB112:
 316              	.LBI112:
  58:include/ubtbr/btctl_intf.h **** {
 317              		.loc 2 58 19 view .LVU77
 318              	.LBB113:
  60:include/ubtbr/btctl_intf.h **** 	int rc;
 319              		.loc 2 60 2 view .LVU78
 320              	.LBB114:
 321              	.LBI114:
 322              		.file 3 "include/ubtbr/system.h"
   1:include/ubtbr/system.h **** #ifndef __SYSTEM_H
   2:include/ubtbr/system.h **** #define __SYSTEM_H
   3:include/ubtbr/system.h **** #include <stdint.h>
   4:include/ubtbr/system.h **** 
   5:include/ubtbr/system.h **** static inline uint32_t irq_save_disable(void)
 323              		.loc 3 5 24 view .LVU79
 324              	.LBB115:
   6:include/ubtbr/system.h **** {
   7:include/ubtbr/system.h **** 	uint32_t primask;
 325              		.loc 3 7 2 view .LVU80
   8:include/ubtbr/system.h **** 
   9:include/ubtbr/system.h **** 	__asm__ __volatile__ (
 326              		.loc 3 9 2 view .LVU81
 327              		.syntax unified
 328              	@ 9 "include/ubtbr/system.h" 1
 329 0058 EFF31085 			mrs    r5, primask
 330 005c 72B6     		cpsid  i
 331              	
 332              	@ 0 "" 2
 333              	.LVL23:
  10:include/ubtbr/system.h **** 	"\tmrs    %0, primask\n"
  11:include/ubtbr/system.h **** 	"\tcpsid  i\n"
  12:include/ubtbr/system.h **** 	: "=r" (primask)
  13:include/ubtbr/system.h **** 	:
  14:include/ubtbr/system.h **** 	: "memory");
  15:include/ubtbr/system.h **** 
  16:include/ubtbr/system.h **** 	return primask;
 334              		.loc 3 16 2 view .LVU82
 335              		.loc 3 16 2 is_stmt 0 view .LVU83
 336              		.thumb
 337              		.syntax unified
 338              	.LBE115:
 339              	.LBE114:
  61:include/ubtbr/btctl_intf.h **** 
 340              		.loc 2 61 2 is_stmt 1 view .LVU84
  63:include/ubtbr/btctl_intf.h **** 	irq_restore(flags);
ARM GAS  /tmp/ccMIbKr9.s 			page 12


 341              		.loc 2 63 2 view .LVU85
  63:include/ubtbr/btctl_intf.h **** 	irq_restore(flags);
 342              		.loc 2 63 7 is_stmt 0 view .LVU86
 343 005e 2748     		ldr	r0, .L26+16
 344              	.LVL24:
  63:include/ubtbr/btctl_intf.h **** 	irq_restore(flags);
 345              		.loc 2 63 7 view .LVU87
 346 0060 2146     		mov	r1, r4
 347 0062 FFF7FEFF 		bl	msg_enqueue
 348              	.LVL25:
  64:include/ubtbr/btctl_intf.h **** 
 349              		.loc 2 64 2 is_stmt 1 view .LVU88
 350              	.LBB116:
 351              	.LBI116:
  17:include/ubtbr/system.h **** }
  18:include/ubtbr/system.h **** 
  19:include/ubtbr/system.h **** static inline void irq_restore(uint32_t primask)
 352              		.loc 3 19 20 view .LVU89
 353              	.LBB117:
  20:include/ubtbr/system.h **** {
  21:include/ubtbr/system.h **** 	__asm__ __volatile__ (
 354              		.loc 3 21 2 view .LVU90
 355              		.syntax unified
 356              	@ 21 "include/ubtbr/system.h" 1
 357 0066 85F31088 		msr primask, r5
 358              	@ 0 "" 2
 359              	.LVL26:
 360              		.loc 3 21 2 is_stmt 0 view .LVU91
 361              		.thumb
 362              		.syntax unified
 363              	.LBE117:
 364              	.LBE116:
  66:include/ubtbr/btctl_intf.h **** }
 365              		.loc 2 66 2 is_stmt 1 view .LVU92
  66:include/ubtbr/btctl_intf.h **** }
 366              		.loc 2 66 2 is_stmt 0 view .LVU93
 367              	.LBE113:
 368              	.LBE112:
 369              	.LBE111:
 370              	.LBE110:
  82:src/btphy/inquiry_state.c **** 		{
 371              		.loc 1 82 6 view .LVU94
 372 006a 18B3     		cbz	r0, .L10
  84:src/btphy/inquiry_state.c **** 		}
 373              		.loc 1 84 4 is_stmt 1 view .LVU95
 374 006c 2448     		ldr	r0, .L26+20
 375 006e FFF7FEFF 		bl	die
 376              	.LVL27:
 377              	.L22:
  84:src/btphy/inquiry_state.c **** 		}
 378              		.loc 1 84 4 is_stmt 0 view .LVU96
 379              	.LBE109:
 380              	.LBE108:
  64:src/btphy/inquiry_state.c **** 		inquiry_schedule(3&(TX_PREPARE_IDX-CUR_MASTER_SLOT_IDX()));	// schedule tx in next slot
 381              		.loc 1 64 3 is_stmt 1 view .LVU97
 382              	.LBB118:
 383              	.LBI118:
ARM GAS  /tmp/ccMIbKr9.s 			page 13


 384              		.file 4 "include/ubtbr/msg.h"
   1:include/ubtbr/msg.h **** #ifndef __DEF_MSG_H
   2:include/ubtbr/msg.h **** #define __DEF_MSG_H
   3:include/ubtbr/msg.h **** #include <stdint.h>
   4:include/ubtbr/msg.h **** 
   5:include/ubtbr/msg.h **** typedef struct msg_s {
   6:include/ubtbr/msg.h **** 	uint16_t len;
   7:include/ubtbr/msg.h **** 	uint16_t data_len;
   8:include/ubtbr/msg.h **** 	uint8_t *read;
   9:include/ubtbr/msg.h **** 	uint8_t *write;
  10:include/ubtbr/msg.h **** 	/* never move head */
  11:include/ubtbr/msg.h **** 	uint8_t data[0];
  12:include/ubtbr/msg.h **** } msg_t;
  13:include/ubtbr/msg.h **** 
  14:include/ubtbr/msg.h **** /* Allocate a msg_t wigh given room*/
  15:include/ubtbr/msg.h **** static inline msg_t *msg_alloc(unsigned size)
  16:include/ubtbr/msg.h **** {
  17:include/ubtbr/msg.h **** 	msg_t *msg = (msg_t*)btctl_mem_alloc(sizeof(msg_t)+size);
  18:include/ubtbr/msg.h **** 
  19:include/ubtbr/msg.h **** 	msg->write = msg->data;
  20:include/ubtbr/msg.h **** 	msg->read = msg->data;
  21:include/ubtbr/msg.h **** 	msg->data_len = size;
  22:include/ubtbr/msg.h **** 
  23:include/ubtbr/msg.h **** 	return msg;
  24:include/ubtbr/msg.h **** }
  25:include/ubtbr/msg.h **** 
  26:include/ubtbr/msg.h **** static inline void msg_free(msg_t *msg)
 385              		.loc 4 26 20 view .LVU98
 386              	.LBB119:
  27:include/ubtbr/msg.h **** {
  28:include/ubtbr/msg.h **** 	btctl_mem_free(msg);
 387              		.loc 4 28 2 view .LVU99
 388 0072 FFF7FEFF 		bl	mem_pool_free
 389              	.LVL28:
 390              		.loc 4 28 2 is_stmt 0 view .LVU100
 391              	.LBE119:
 392              	.LBE118:
  65:src/btphy/inquiry_state.c **** 	}
 393              		.loc 1 65 3 is_stmt 1 view .LVU101
 394              	.LBB120:
 395              	.LBB121:
  93:src/btphy/inquiry_state.c **** 	{
 396              		.loc 1 93 40 is_stmt 0 view .LVU102
 397 0076 1E4B     		ldr	r3, .L26+4
 398              	.LBE121:
 399              	.LBE120:
  65:src/btphy/inquiry_state.c **** 	}
 400              		.loc 1 65 38 view .LVU103
 401 0078 1E4A     		ldr	r2, .L26+8
 402              	.LBB128:
 403              	.LBB124:
  93:src/btphy/inquiry_state.c **** 	{
 404              		.loc 1 93 52 view .LVU104
 405 007a 1B68     		ldr	r3, [r3]
 406              	.LBE124:
 407              	.LBE128:
  65:src/btphy/inquiry_state.c **** 	}
ARM GAS  /tmp/ccMIbKr9.s 			page 14


 408              		.loc 1 65 38 view .LVU105
 409 007c 5068     		ldr	r0, [r2, #4]
 410              	.LVL29:
 411              	.LBB129:
 412              	.LBI120:
  90:src/btphy/inquiry_state.c **** {
 413              		.loc 1 90 13 is_stmt 1 view .LVU106
 414              	.LBB125:
  93:src/btphy/inquiry_state.c **** 	{
 415              		.loc 1 93 2 view .LVU107
  93:src/btphy/inquiry_state.c **** 	{
 416              		.loc 1 93 52 is_stmt 0 view .LVU108
 417 007e 03F53B33 		add	r3, r3, #191488
 418 0082 03F50073 		add	r3, r3, #512
  93:src/btphy/inquiry_state.c **** 	{
 419              		.loc 1 93 5 view .LVU109
 420 0086 9842     		cmp	r0, r3
 421 0088 1FD2     		bcs	.L25
 422              	.LBE125:
 423              	.LBE129:
  65:src/btphy/inquiry_state.c **** 	}
 424              		.loc 1 65 21 view .LVU110
 425 008a C043     		mvns	r0, r0
 426              	.LVL30:
  65:src/btphy/inquiry_state.c **** 	}
 427              		.loc 1 65 3 view .LVU111
 428 008c 00F00304 		and	r4, r0, #3
 429              	.LVL31:
 430              	.LBB130:
 431              	.LBB126:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 432              		.loc 1 101 2 is_stmt 1 view .LVU112
 433 0090 2046     		mov	r0, r4
 434              	.LVL32:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 435              		.loc 1 101 2 is_stmt 0 view .LVU113
 436 0092 2B46     		mov	r3, r5
 437 0094 2A46     		mov	r2, r5
 438              	.LVL33:
 101:src/btphy/inquiry_state.c **** 		NULL, NULL,
 439              		.loc 1 101 2 view .LVU114
 440 0096 2946     		mov	r1, r5
 441 0098 0095     		str	r5, [sp]
 442 009a FFF7FEFF 		bl	tx_task_schedule
 443              	.LVL34:
 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 444              		.loc 1 106 2 is_stmt 1 view .LVU115
 445 009e A01C     		adds	r0, r4, #2
 446 00a0 3346     		mov	r3, r6
 447 00a2 2A46     		mov	r2, r5
 448 00a4 1449     		ldr	r1, .L26+12
 449 00a6 FFF7FEFF 		bl	rx_task_schedule
 450              	.LVL35:
 106:src/btphy/inquiry_state.c **** 		inquiry_rx_cb, NULL,	// fhs rx callback
 451              		.loc 1 106 2 is_stmt 0 view .LVU116
 452              	.LBE126:
 453              	.LBE130:
ARM GAS  /tmp/ccMIbKr9.s 			page 15


  88:src/btphy/inquiry_state.c **** 
 454              		.loc 1 88 1 view .LVU117
 455 00aa 0020     		movs	r0, #0
 456 00ac 03B0     		add	sp, sp, #12
 457              		.cfi_remember_state
 458              		.cfi_def_cfa_offset 20
 459              		@ sp needed
 460 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 461              	.LVL36:
 462              	.L20:
 463              		.cfi_restore_state
  54:src/btphy/inquiry_state.c **** 		return 0;
 464              		.loc 1 54 3 is_stmt 1 view .LVU118
 465              	.LBB131:
 466              	.LBI131:
  26:include/ubtbr/msg.h **** {
 467              		.loc 4 26 20 view .LVU119
 468              	.LBB132:
 469              		.loc 4 28 2 view .LVU120
 470 00b0 FFF7FEFF 		bl	mem_pool_free
 471              	.LVL37:
 472              		.loc 4 28 2 is_stmt 0 view .LVU121
 473              	.LBE132:
 474              	.LBE131:
  55:src/btphy/inquiry_state.c **** 	}
 475              		.loc 1 55 3 is_stmt 1 view .LVU122
 476              	.L10:
  88:src/btphy/inquiry_state.c **** 
 477              		.loc 1 88 1 is_stmt 0 view .LVU123
 478 00b4 0020     		movs	r0, #0
 479 00b6 03B0     		add	sp, sp, #12
 480              		.cfi_remember_state
 481              		.cfi_def_cfa_offset 20
 482              		@ sp needed
 483 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 484              	.LVL38:
 485              	.L24:
 486              		.cfi_restore_state
 487              	.LBB133:
 488              	.LBB103:
 489              	.LBB97:
 490              	.LBI97:
  90:src/btphy/inquiry_state.c **** {
 491              		.loc 1 90 13 is_stmt 1 view .LVU124
 492              	.LBB98:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 493              		.loc 1 95 3 view .LVU125
 494 00ba 1248     		ldr	r0, .L26+24
 495              	.LVL39:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 496              		.loc 1 95 3 is_stmt 0 view .LVU126
 497 00bc FFF7FEFF 		bl	cprintf
 498              	.LVL40:
  96:src/btphy/inquiry_state.c **** 		return;
 499              		.loc 1 96 3 is_stmt 1 view .LVU127
 500 00c0 3146     		mov	r1, r6
 501 00c2 0020     		movs	r0, #0
ARM GAS  /tmp/ccMIbKr9.s 			page 16


 502 00c4 FFF7FEFF 		bl	btctl_set_state
 503              	.LVL41:
  97:src/btphy/inquiry_state.c **** 	}
 504              		.loc 1 97 3 view .LVU128
 505 00c8 C6E7     		b	.L15
 506              	.LVL42:
 507              	.L25:
  97:src/btphy/inquiry_state.c **** 	}
 508              		.loc 1 97 3 is_stmt 0 view .LVU129
 509              	.LBE98:
 510              	.LBE97:
 511              	.LBE103:
 512              	.LBE133:
 513              	.LBB134:
 514              	.LBB127:
 515              	.LBB122:
 516              	.LBI122:
  90:src/btphy/inquiry_state.c **** {
 517              		.loc 1 90 13 is_stmt 1 view .LVU130
 518              	.LBB123:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 519              		.loc 1 95 3 view .LVU131
 520 00ca 0E48     		ldr	r0, .L26+24
 521              	.LVL43:
  95:src/btphy/inquiry_state.c **** 		btctl_set_state(BTCTL_STATE_STANDBY, BTCTL_REASON_TIMEOUT);
 522              		.loc 1 95 3 is_stmt 0 view .LVU132
 523 00cc FFF7FEFF 		bl	cprintf
 524              	.LVL44:
  96:src/btphy/inquiry_state.c **** 		return;
 525              		.loc 1 96 3 is_stmt 1 view .LVU133
 526 00d0 3146     		mov	r1, r6
 527 00d2 2846     		mov	r0, r5
 528 00d4 FFF7FEFF 		bl	btctl_set_state
 529              	.LVL45:
  97:src/btphy/inquiry_state.c **** 	}
 530              		.loc 1 97 3 view .LVU134
 531 00d8 ECE7     		b	.L10
 532              	.LVL46:
 533              	.L23:
  97:src/btphy/inquiry_state.c **** 	}
 534              		.loc 1 97 3 is_stmt 0 view .LVU135
 535              	.LBE123:
 536              	.LBE122:
 537              	.LBE127:
 538              	.LBE134:
  72:src/btphy/inquiry_state.c **** 				inquiry_rx_cb, NULL,	// efhs rx callback
 539              		.loc 1 72 4 is_stmt 1 view .LVU136
 540 00da 3346     		mov	r3, r6
 541 00dc 0022     		movs	r2, #0
 542 00de 0649     		ldr	r1, .L26+12
 543              	.LVL47:
  72:src/btphy/inquiry_state.c **** 				inquiry_rx_cb, NULL,	// efhs rx callback
 544              		.loc 1 72 4 is_stmt 0 view .LVU137
 545 00e0 FFF7FEFF 		bl	rx_task_schedule
 546              	.LVL48:
 547 00e4 B8E7     		b	.L15
 548              	.LVL49:
ARM GAS  /tmp/ccMIbKr9.s 			page 17


 549              	.L21:
  59:src/btphy/inquiry_state.c **** 	pkt = (btctl_rx_pkt_t *)h->data;
 550              		.loc 1 59 3 is_stmt 1 view .LVU138
 551 00e6 0848     		ldr	r0, .L26+28
 552              	.LVL50:
  59:src/btphy/inquiry_state.c **** 	pkt = (btctl_rx_pkt_t *)h->data;
 553              		.loc 1 59 3 is_stmt 0 view .LVU139
 554 00e8 FFF7FEFF 		bl	die
 555              	.LVL51:
 556              	.L27:
  59:src/btphy/inquiry_state.c **** 	pkt = (btctl_rx_pkt_t *)h->data;
 557              		.loc 1 59 3 view .LVU140
 558              		.align	2
 559              	.L26:
 560 00ec 00000000 		.word	btctl
 561 00f0 00000000 		.word	.LANCHOR0
 562 00f4 00000000 		.word	btphy
 563 00f8 00000000 		.word	inquiry_rx_cb
 564 00fc 2C000000 		.word	btctl+44
 565 0100 30000000 		.word	.LC2
 566 0104 00000000 		.word	.LC0
 567 0108 14000000 		.word	.LC1
 568              		.cfi_endproc
 569              	.LFE32:
 571              		.section	.text.inquiry_state_setup,"ax",%progbits
 572              		.align	1
 573              		.p2align 2,,3
 574              		.global	inquiry_state_setup
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	inquiry_state_setup:
 581              	.LFB35:
 124:src/btphy/inquiry_state.c **** 
 125:src/btphy/inquiry_state.c **** /*
 126:src/btphy/inquiry_state.c ****  * Inquiry master
 127:src/btphy/inquiry_state.c ****  */
 128:src/btphy/inquiry_state.c **** void inquiry_state_setup(void)
 129:src/btphy/inquiry_state.c **** {
 582              		.loc 1 129 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 10B5     		push	{r4, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 590 0002 82B0     		sub	sp, sp, #8
 591              		.cfi_def_cfa_offset 16
 130:src/btphy/inquiry_state.c **** 	/* Init only with the lap, DCI(0) is used as UAP */
 131:src/btphy/inquiry_state.c **** 	btphy_set_mode(BT_MODE_INQUIRY, GIAC, 0);
 592              		.loc 1 131 2 view .LVU142
 593 0004 0022     		movs	r2, #0
 594 0006 0B49     		ldr	r1, .L29
 595 0008 1046     		mov	r0, r2
 596 000a FFF7FEFF 		bl	btphy_set_mode
ARM GAS  /tmp/ccMIbKr9.s 			page 18


 597              	.LVL52:
 132:src/btphy/inquiry_state.c **** 
 133:src/btphy/inquiry_state.c **** 	tdma_schedule(2, inquiry_start_sync, 0,0,0,-3);
 598              		.loc 1 133 2 view .LVU143
 599 000e 0024     		movs	r4, #0
 600 0010 6FF00203 		mvn	r3, #2
 601 0014 2246     		mov	r2, r4
 602 0016 CDE90043 		strd	r4, r3, [sp]
 603 001a 0749     		ldr	r1, .L29+4
 604 001c 2346     		mov	r3, r4
 605 001e 0220     		movs	r0, #2
 606 0020 FFF7FEFF 		bl	tdma_schedule
 607              	.LVL53:
 134:src/btphy/inquiry_state.c **** 	btctl_set_state(BTCTL_STATE_INQUIRY, BTCTL_REASON_SUCCESS);
 608              		.loc 1 134 2 view .LVU144
 609 0024 2146     		mov	r1, r4
 610 0026 0120     		movs	r0, #1
 135:src/btphy/inquiry_state.c **** }
 611              		.loc 1 135 1 is_stmt 0 view .LVU145
 612 0028 02B0     		add	sp, sp, #8
 613              		.cfi_def_cfa_offset 8
 614              		@ sp needed
 615 002a BDE81040 		pop	{r4, lr}
 616              		.cfi_restore 14
 617              		.cfi_restore 4
 618              		.cfi_def_cfa_offset 0
 134:src/btphy/inquiry_state.c **** 	btctl_set_state(BTCTL_STATE_INQUIRY, BTCTL_REASON_SUCCESS);
 619              		.loc 1 134 2 view .LVU146
 620 002e FFF7FEBF 		b	btctl_set_state
 621              	.LVL54:
 622              	.L30:
 623 0032 00BF     		.align	2
 624              	.L29:
 625 0034 338B9E00 		.word	10390323
 626 0038 00000000 		.word	inquiry_start_sync
 627              		.cfi_endproc
 628              	.LFE35:
 630              		.bss
 631              		.align	2
 632              		.set	.LANCHOR0,. + 0
 635              	inquiry_state:
 636 0000 00000000 		.space	4
 637              		.text
 638              	.Letext0:
 639              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 640              		.file 6 "/usr/include/newlib/sys/_types.h"
 641              		.file 7 "/usr/include/newlib/sys/reent.h"
 642              		.file 8 "/usr/include/newlib/sys/lock.h"
 643              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 644              		.file 10 "../../host/libubertooth/src/ubertooth_interface.h"
 645              		.file 11 "../common/ubertooth.h"
 646              		.file 12 "include/ubtbr/queue.h"
 647              		.file 13 "include/ubtbr/btphy.h"
 648              		.file 14 "include/ubtbr/bb.h"
 649              		.file 15 "include/ubtbr/tdma_sched.h"
 650              		.file 16 "include/ubtbr/debug.h"
 651              		.file 17 "include/ubtbr/tx_task.h"
ARM GAS  /tmp/ccMIbKr9.s 			page 19


 652              		.file 18 "include/ubtbr/rx_task.h"
 653              		.file 19 "include/ubtbr/mem_pool.h"
ARM GAS  /tmp/ccMIbKr9.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 inquiry_state.c
     /tmp/ccMIbKr9.s:16     .rodata.str1.4:0000000000000000 $d
     /tmp/ccMIbKr9.s:20     .text.inquiry_start_sync:0000000000000000 $t
     /tmp/ccMIbKr9.s:28     .text.inquiry_start_sync:0000000000000000 inquiry_start_sync
     /tmp/ccMIbKr9.s:149    .text.inquiry_start_sync:000000000000005c $d
     /tmp/ccMIbKr9.s:171    .text.inquiry_rx_cb:0000000000000000 inquiry_rx_cb
     /tmp/ccMIbKr9.s:164    .text.inquiry_rx_cb:0000000000000000 $t
     /tmp/ccMIbKr9.s:560    .text.inquiry_rx_cb:00000000000000ec $d
     /tmp/ccMIbKr9.s:572    .text.inquiry_state_setup:0000000000000000 $t
     /tmp/ccMIbKr9.s:580    .text.inquiry_state_setup:0000000000000000 inquiry_state_setup
     /tmp/ccMIbKr9.s:625    .text.inquiry_state_setup:0000000000000034 $d
     /tmp/ccMIbKr9.s:631    .bss:0000000000000000 $d
     /tmp/ccMIbKr9.s:635    .bss:0000000000000000 inquiry_state

UNDEFINED SYMBOLS
btphy_cancel_clkn_delay
tx_task_schedule
rx_task_schedule
cprintf
btctl_set_state
btphy
msg_enqueue
die
mem_pool_free
btctl
btphy_set_mode
tdma_schedule
