ARM GAS  /tmp/ccPTFhIq.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"mem_pool.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mem_pool_init,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	mem_pool_init
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	mem_pool_init:
  26              	.LFB11:
  27              		.file 1 "src/util/mem_pool.c"
   1:src/util/mem_pool.c **** /* Memory pool
   2:src/util/mem_pool.c ****  *
   3:src/util/mem_pool.c ****  * Copyright 2020 Etienne Helluy-Lafont, Univ. Lille, CNRS.
   4:src/util/mem_pool.c ****  *
   5:src/util/mem_pool.c ****  * This file is part of Project Ubertooth.
   6:src/util/mem_pool.c ****  *
   7:src/util/mem_pool.c ****  * This program is free software; you can redistribute it and/or modify
   8:src/util/mem_pool.c ****  * it under the terms of the GNU General Public License as published by
   9:src/util/mem_pool.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:src/util/mem_pool.c ****  * any later version.
  11:src/util/mem_pool.c ****  *
  12:src/util/mem_pool.c ****  * This program is distributed in the hope that it will be useful,
  13:src/util/mem_pool.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:src/util/mem_pool.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:src/util/mem_pool.c ****  * GNU General Public License for more details.
  16:src/util/mem_pool.c ****  *
  17:src/util/mem_pool.c ****  * You should have received a copy of the GNU General Public License
  18:src/util/mem_pool.c ****  * along with this program; see the file COPYING.  If not, write to
  19:src/util/mem_pool.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:src/util/mem_pool.c ****  * Boston, MA 02110-1301, USA.
  21:src/util/mem_pool.c ****  */
  22:src/util/mem_pool.c **** #include <stddef.h>
  23:src/util/mem_pool.c **** #include <ubertooth_interface.h>
  24:src/util/mem_pool.c **** #include <ubtbr/debug.h>
  25:src/util/mem_pool.c **** #include <ubtbr/system.h>
  26:src/util/mem_pool.c **** #include <ubtbr/bb_msg.h>
  27:src/util/mem_pool.c **** 
  28:src/util/mem_pool.c **** //#define MEM_DEBUG // this was to fix a small double free
  29:src/util/mem_pool.c **** 
  30:src/util/mem_pool.c **** #define BUF_NUM 16
  31:src/util/mem_pool.c **** 
ARM GAS  /tmp/ccPTFhIq.s 			page 2


  32:src/util/mem_pool.c **** /* shoult be enough for any ACL packet */
  33:src/util/mem_pool.c **** #define BUF_SIZE (sizeof(msg_t)+sizeof(btctl_hdr_t)+sizeof(btctl_rx_pkt_t)+344)
  34:src/util/mem_pool.c **** 
  35:src/util/mem_pool.c **** typedef struct pool_el_s {
  36:src/util/mem_pool.c **** #ifdef MEM_DEBUG
  37:src/util/mem_pool.c **** 	int allocated;
  38:src/util/mem_pool.c **** #endif
  39:src/util/mem_pool.c **** 	struct pool_el_s *li;
  40:src/util/mem_pool.c **** 	uint8_t buf[BUF_SIZE];
  41:src/util/mem_pool.c **** } pool_el_t;
  42:src/util/mem_pool.c **** 
  43:src/util/mem_pool.c **** static struct {
  44:src/util/mem_pool.c **** 	int init;
  45:src/util/mem_pool.c **** 	pool_el_t *li;
  46:src/util/mem_pool.c **** 	pool_el_t el[BUF_NUM];
  47:src/util/mem_pool.c **** } pool = {0};
  48:src/util/mem_pool.c **** 
  49:src/util/mem_pool.c **** void mem_pool_init(void)
  50:src/util/mem_pool.c **** {
  28              		.loc 1 50 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 30B4     		push	{r4, r5}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
  51:src/util/mem_pool.c **** 	int i;
  37              		.loc 1 51 2 view .LVU1
  52:src/util/mem_pool.c **** 
  53:src/util/mem_pool.c **** 	for(i=0;i<BUF_NUM-1;i++)
  38              		.loc 1 53 2 view .LVU2
  39              	.LVL0:
  40              		.loc 1 53 10 view .LVU3
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  41              		.loc 1 54 3 view .LVU4
  55:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
  56:src/util/mem_pool.c **** 	pool.li = pool.el;
  57:src/util/mem_pool.c **** 	pool.init = 1;
  42              		.loc 1 57 12 is_stmt 0 view .LVU5
  43 0002 0121     		movs	r1, #1
  55:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
  44              		.loc 1 55 24 view .LVU6
  45 0004 0025     		movs	r5, #0
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  46              		.loc 1 54 17 view .LVU7
  47 0006 1E4B     		ldr	r3, .L3
  48 0008 1E4C     		ldr	r4, .L3+4
  49 000a 03F5C072 		add	r2, r3, #384
  50 000e 9A60     		str	r2, [r3, #8]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  51              		.loc 1 53 22 is_stmt 1 view .LVU8
  52              	.LVL1:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  53              		.loc 1 53 10 view .LVU9
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
ARM GAS  /tmp/ccPTFhIq.s 			page 3


  54              		.loc 1 54 3 view .LVU10
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  55              		.loc 1 54 17 is_stmt 0 view .LVU11
  56 0010 03F53E72 		add	r2, r3, #760
  57 0014 C3F88021 		str	r2, [r3, #384]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  58              		.loc 1 53 22 is_stmt 1 view .LVU12
  59              	.LVL2:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  60              		.loc 1 53 10 view .LVU13
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  61              		.loc 1 54 3 view .LVU14
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  62              		.loc 1 54 17 is_stmt 0 view .LVU15
  63 0018 03F58E62 		add	r2, r3, #1136
  64 001c C3F8F822 		str	r2, [r3, #760]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  65              		.loc 1 53 22 is_stmt 1 view .LVU16
  66              	.LVL3:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  67              		.loc 1 53 10 view .LVU17
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  68              		.loc 1 54 3 view .LVU18
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  69              		.loc 1 54 17 is_stmt 0 view .LVU19
  70 0020 03F5BD62 		add	r2, r3, #1512
  71 0024 C3F87024 		str	r2, [r3, #1136]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  72              		.loc 1 53 22 is_stmt 1 view .LVU20
  73              	.LVL4:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  74              		.loc 1 53 10 view .LVU21
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  75              		.loc 1 54 3 view .LVU22
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  76              		.loc 1 54 17 is_stmt 0 view .LVU23
  77 0028 03F5EC62 		add	r2, r3, #1888
  78 002c C3F8E825 		str	r2, [r3, #1512]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  79              		.loc 1 53 22 is_stmt 1 view .LVU24
  80              	.LVL5:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  81              		.loc 1 53 10 view .LVU25
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  82              		.loc 1 54 3 view .LVU26
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  83              		.loc 1 54 17 is_stmt 0 view .LVU27
  84 0030 03F6D802 		addw	r2, r3, #2264
  85 0034 C3F86027 		str	r2, [r3, #1888]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  86              		.loc 1 53 22 is_stmt 1 view .LVU28
  87              	.LVL6:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  88              		.loc 1 53 10 view .LVU29
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  89              		.loc 1 54 3 view .LVU30
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
ARM GAS  /tmp/ccPTFhIq.s 			page 4


  90              		.loc 1 54 17 is_stmt 0 view .LVU31
  91 0038 03F52562 		add	r2, r3, #2640
  92 003c C3F8D828 		str	r2, [r3, #2264]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  93              		.loc 1 53 22 is_stmt 1 view .LVU32
  94              	.LVL7:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  95              		.loc 1 53 10 view .LVU33
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  96              		.loc 1 54 3 view .LVU34
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
  97              		.loc 1 54 17 is_stmt 0 view .LVU35
  98 0040 03F6C832 		addw	r2, r3, #3016
  99 0044 C3F8502A 		str	r2, [r3, #2640]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 100              		.loc 1 53 22 is_stmt 1 view .LVU36
 101              	.LVL8:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 102              		.loc 1 53 10 view .LVU37
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 103              		.loc 1 54 3 view .LVU38
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 104              		.loc 1 54 17 is_stmt 0 view .LVU39
 105 0048 03F55462 		add	r2, r3, #3392
 106 004c C3F8C82B 		str	r2, [r3, #3016]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 107              		.loc 1 53 22 is_stmt 1 view .LVU40
 108              	.LVL9:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 109              		.loc 1 53 10 view .LVU41
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 110              		.loc 1 54 3 view .LVU42
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 111              		.loc 1 54 17 is_stmt 0 view .LVU43
 112 0050 03F6B862 		addw	r2, r3, #3768
 113 0054 C3F8402D 		str	r2, [r3, #3392]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 114              		.loc 1 53 22 is_stmt 1 view .LVU44
 115              	.LVL10:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 116              		.loc 1 53 10 view .LVU45
  54:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 117              		.loc 1 54 3 view .LVU46
  56:src/util/mem_pool.c **** 	pool.init = 1;
 118              		.loc 1 56 10 is_stmt 0 view .LVU47
 119 0058 03F10802 		add	r2, r3, #8
 120              		.loc 1 57 12 view .LVU48
 121 005c 1960     		str	r1, [r3]
  56:src/util/mem_pool.c **** 	pool.init = 1;
 122              		.loc 1 56 10 view .LVU49
 123 005e 5A60     		str	r2, [r3, #4]
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 124              		.loc 1 54 17 view .LVU50
 125 0060 03F59951 		add	r1, r3, #4896
 126 0064 084A     		ldr	r2, .L3+8
 127 0066 C3F8B84E 		str	r4, [r3, #3768]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
ARM GAS  /tmp/ccPTFhIq.s 			page 5


 128              		.loc 1 53 22 is_stmt 1 view .LVU51
 129              	.LVL11:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 130              		.loc 1 53 10 view .LVU52
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 131              		.loc 1 54 3 view .LVU53
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 132              		.loc 1 54 17 is_stmt 0 view .LVU54
 133 006a 084B     		ldr	r3, .L3+12
 134 006c 04F5BC70 		add	r0, r4, #376
 135 0070 2060     		str	r0, [r4]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 136              		.loc 1 53 22 is_stmt 1 view .LVU55
 137              	.LVL12:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 138              		.loc 1 53 10 view .LVU56
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 139              		.loc 1 54 3 view .LVU57
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 140              		.loc 1 54 17 is_stmt 0 view .LVU58
 141 0072 C4F87811 		str	r1, [r4, #376]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 142              		.loc 1 53 22 is_stmt 1 view .LVU59
 143              	.LVL13:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 144              		.loc 1 53 10 view .LVU60
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 145              		.loc 1 54 3 view .LVU61
  55:src/util/mem_pool.c **** 	pool.li = pool.el;
 146              		.loc 1 55 24 is_stmt 0 view .LVU62
 147 0076 1D60     		str	r5, [r3]
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 148              		.loc 1 54 17 view .LVU63
 149 0078 0A60     		str	r2, [r1]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 150              		.loc 1 53 22 is_stmt 1 view .LVU64
 151              	.LVL14:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 152              		.loc 1 53 10 view .LVU65
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 153              		.loc 1 54 3 view .LVU66
  54:src/util/mem_pool.c **** 	pool.el[BUF_NUM-1].li = NULL;
 154              		.loc 1 54 17 is_stmt 0 view .LVU67
 155 007a 1360     		str	r3, [r2]
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 156              		.loc 1 53 22 is_stmt 1 view .LVU68
 157              	.LVL15:
  53:src/util/mem_pool.c **** 		pool.el[i].li = &pool.el[i+1];
 158              		.loc 1 53 10 view .LVU69
  55:src/util/mem_pool.c **** 	pool.li = pool.el;
 159              		.loc 1 55 2 view .LVU70
  56:src/util/mem_pool.c **** 	pool.init = 1;
 160              		.loc 1 56 2 view .LVU71
 161              		.loc 1 57 2 view .LVU72
  58:src/util/mem_pool.c **** }
 162              		.loc 1 58 1 is_stmt 0 view .LVU73
 163 007c 30BC     		pop	{r4, r5}
ARM GAS  /tmp/ccPTFhIq.s 			page 6


 164              		.cfi_restore 5
 165              		.cfi_restore 4
 166              		.cfi_def_cfa_offset 0
 167 007e 7047     		bx	lr
 168              	.L4:
 169              		.align	2
 170              	.L3:
 171 0080 00000000 		.word	pool
 172 0084 30100000 		.word	pool+4144
 173 0088 98140000 		.word	pool+5272
 174 008c 10160000 		.word	pool+5648
 175              		.cfi_endproc
 176              	.LFE11:
 178              		.section	.rodata.str1.4,"aMS",%progbits,1
 179              		.align	2
 180              	.LC0:
 181 0000 4449457C 		.ascii	"DIE|pool ny initalized\012\012\000"
 181      706F6F6C 
 181      206E7920 
 181      696E6974 
 181      616C697A 
 182 0019 000000   		.align	2
 183              	.LC1:
 184 001c 4449457C 		.ascii	"DIE|Cannot alloc %d\012\012\000"
 184      43616E6E 
 184      6F742061 
 184      6C6C6F63 
 184      2025640A 
 185 0032 0000     		.align	2
 186              	.LC2:
 187 0034 4449457C 		.ascii	"DIE|No more buffers\012\012\000"
 187      4E6F206D 
 187      6F726520 
 187      62756666 
 187      6572730A 
 188              		.section	.text.mem_pool_alloc,"ax",%progbits
 189              		.align	1
 190              		.p2align 2,,3
 191              		.global	mem_pool_alloc
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	mem_pool_alloc:
 198              	.LVL16:
 199              	.LFB12:
  59:src/util/mem_pool.c **** 
  60:src/util/mem_pool.c **** void *mem_pool_alloc(unsigned size)
  61:src/util/mem_pool.c **** {
 200              		.loc 1 61 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		.loc 1 61 1 is_stmt 0 view .LVU75
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
ARM GAS  /tmp/ccPTFhIq.s 			page 7


 208              		.cfi_offset 14, -4
  62:src/util/mem_pool.c **** 	uint32_t flags = irq_save_disable();
 209              		.loc 1 62 2 is_stmt 1 view .LVU76
 210              	.LBB10:
 211              	.LBI10:
 212              		.file 2 "include/ubtbr/system.h"
   1:include/ubtbr/system.h **** #ifndef __SYSTEM_H
   2:include/ubtbr/system.h **** #define __SYSTEM_H
   3:include/ubtbr/system.h **** #include <stdint.h>
   4:include/ubtbr/system.h **** 
   5:include/ubtbr/system.h **** static inline uint32_t irq_save_disable(void)
 213              		.loc 2 5 24 view .LVU77
 214              	.LBB11:
   6:include/ubtbr/system.h **** {
   7:include/ubtbr/system.h **** 	uint32_t primask;
 215              		.loc 2 7 2 view .LVU78
   8:include/ubtbr/system.h **** 
   9:include/ubtbr/system.h **** 	__asm__ __volatile__ (
 216              		.loc 2 9 2 view .LVU79
 217              		.syntax unified
 218              	@ 9 "include/ubtbr/system.h" 1
 219 0002 EFF31081 			mrs    r1, primask
 220 0006 72B6     		cpsid  i
 221              	
 222              	@ 0 "" 2
 223              	.LVL17:
  10:include/ubtbr/system.h **** 	"\tmrs    %0, primask\n"
  11:include/ubtbr/system.h **** 	"\tcpsid  i\n"
  12:include/ubtbr/system.h **** 	: "=r" (primask)
  13:include/ubtbr/system.h **** 	:
  14:include/ubtbr/system.h **** 	: "memory");
  15:include/ubtbr/system.h **** 
  16:include/ubtbr/system.h **** 	return primask;
 224              		.loc 2 16 2 view .LVU80
 225              		.loc 2 16 2 is_stmt 0 view .LVU81
 226              		.thumb
 227              		.syntax unified
 228              	.LBE11:
 229              	.LBE10:
  63:src/util/mem_pool.c **** 	pool_el_t *el;
 230              		.loc 1 63 2 is_stmt 1 view .LVU82
  64:src/util/mem_pool.c **** 	void *buf;
 231              		.loc 1 64 2 view .LVU83
  65:src/util/mem_pool.c **** 
  66:src/util/mem_pool.c **** 	if (!pool.init)
 232              		.loc 1 66 2 view .LVU84
 233              		.loc 1 66 11 is_stmt 0 view .LVU85
 234 0008 0B4B     		ldr	r3, .L12
 235              		.loc 1 66 5 view .LVU86
 236 000a 1A68     		ldr	r2, [r3]
 237 000c 52B1     		cbz	r2, .L9
  67:src/util/mem_pool.c **** 		DIE("pool ny initalized\n");
  68:src/util/mem_pool.c **** 
  69:src/util/mem_pool.c **** 	if (size > BUF_SIZE)
 238              		.loc 1 69 2 is_stmt 1 view .LVU87
 239              		.loc 1 69 5 is_stmt 0 view .LVU88
 240 000e B0F5BA7F 		cmp	r0, #372
ARM GAS  /tmp/ccPTFhIq.s 			page 8


 241 0012 0DD8     		bhi	.L10
  70:src/util/mem_pool.c **** 		DIE("Cannot alloc %d\n", size);
  71:src/util/mem_pool.c **** 
  72:src/util/mem_pool.c **** 	if ((el = pool.li) == NULL)
 242              		.loc 1 72 2 is_stmt 1 view .LVU89
 243              		.loc 1 72 10 is_stmt 0 view .LVU90
 244 0014 5868     		ldr	r0, [r3, #4]
 245              	.LVL18:
 246              		.loc 1 72 5 view .LVU91
 247 0016 40B1     		cbz	r0, .L11
  73:src/util/mem_pool.c **** 		DIE("No more buffers\n");
  74:src/util/mem_pool.c **** #ifdef MEM_DEBUG
  75:src/util/mem_pool.c **** 	if (el->allocated)
  76:src/util/mem_pool.c **** 		DIE("el already allocated\n");
  77:src/util/mem_pool.c **** #endif
  78:src/util/mem_pool.c **** 
  79:src/util/mem_pool.c **** 	pool.li = el->li;
 248              		.loc 1 79 2 is_stmt 1 view .LVU92
 249              		.loc 1 79 10 is_stmt 0 view .LVU93
 250 0018 50F8042B 		ldr	r2, [r0], #4
 251              	.LVL19:
 252              		.loc 1 79 10 view .LVU94
 253 001c 5A60     		str	r2, [r3, #4]
 254              	.LVL20:
  80:src/util/mem_pool.c **** #ifdef MEM_DEBUG
  81:src/util/mem_pool.c **** 	el->allocated = 1;
  82:src/util/mem_pool.c **** #endif
  83:src/util/mem_pool.c **** 	irq_restore(flags);
 255              		.loc 1 83 2 is_stmt 1 view .LVU95
 256              	.LBB12:
 257              	.LBI12:
  17:include/ubtbr/system.h **** }
  18:include/ubtbr/system.h **** 
  19:include/ubtbr/system.h **** static inline void irq_restore(uint32_t primask)
 258              		.loc 2 19 20 view .LVU96
 259              	.LBB13:
  20:include/ubtbr/system.h **** {
  21:include/ubtbr/system.h **** 	__asm__ __volatile__ (
 260              		.loc 2 21 2 view .LVU97
 261              		.syntax unified
 262              	@ 21 "include/ubtbr/system.h" 1
 263 001e 81F31088 		msr primask, r1
 264              	@ 0 "" 2
 265              	.LVL21:
 266              		.loc 2 21 2 is_stmt 0 view .LVU98
 267              		.thumb
 268              		.syntax unified
 269              	.LBE13:
 270              	.LBE12:
  84:src/util/mem_pool.c **** 
  85:src/util/mem_pool.c **** 	return &el->buf;
 271              		.loc 1 85 2 is_stmt 1 view .LVU99
  86:src/util/mem_pool.c **** }
 272              		.loc 1 86 1 is_stmt 0 view .LVU100
 273 0022 08BD     		pop	{r3, pc}
 274              	.LVL22:
 275              	.L9:
ARM GAS  /tmp/ccPTFhIq.s 			page 9


  67:src/util/mem_pool.c **** 
 276              		.loc 1 67 3 is_stmt 1 view .LVU101
 277 0024 0548     		ldr	r0, .L12+4
 278              	.LVL23:
  67:src/util/mem_pool.c **** 
 279              		.loc 1 67 3 is_stmt 0 view .LVU102
 280 0026 FFF7FEFF 		bl	die
 281              	.LVL24:
 282              	.L11:
  73:src/util/mem_pool.c **** #ifdef MEM_DEBUG
 283              		.loc 1 73 3 is_stmt 1 view .LVU103
 284 002a 0548     		ldr	r0, .L12+8
 285              	.LVL25:
  73:src/util/mem_pool.c **** #ifdef MEM_DEBUG
 286              		.loc 1 73 3 is_stmt 0 view .LVU104
 287 002c FFF7FEFF 		bl	die
 288              	.LVL26:
 289              	.L10:
  70:src/util/mem_pool.c **** 
 290              		.loc 1 70 3 is_stmt 1 view .LVU105
 291 0030 0146     		mov	r1, r0
 292              	.LVL27:
  70:src/util/mem_pool.c **** 
 293              		.loc 1 70 3 is_stmt 0 view .LVU106
 294 0032 0448     		ldr	r0, .L12+12
 295              	.LVL28:
  70:src/util/mem_pool.c **** 
 296              		.loc 1 70 3 view .LVU107
 297 0034 FFF7FEFF 		bl	die
 298              	.LVL29:
 299              	.L13:
  70:src/util/mem_pool.c **** 
 300              		.loc 1 70 3 view .LVU108
 301              		.align	2
 302              	.L12:
 303 0038 00000000 		.word	pool
 304 003c 00000000 		.word	.LC0
 305 0040 34000000 		.word	.LC2
 306 0044 1C000000 		.word	.LC1
 307              		.cfi_endproc
 308              	.LFE12:
 310              		.section	.text.mem_pool_free,"ax",%progbits
 311              		.align	1
 312              		.p2align 2,,3
 313              		.global	mem_pool_free
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	mem_pool_free:
 320              	.LVL30:
 321              	.LFB13:
  87:src/util/mem_pool.c **** 
  88:src/util/mem_pool.c **** void mem_pool_free(void *p)
  89:src/util/mem_pool.c **** {
 322              		.loc 1 89 1 is_stmt 1 view -0
 323              		.cfi_startproc
ARM GAS  /tmp/ccPTFhIq.s 			page 10


 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              		.loc 1 89 1 is_stmt 0 view .LVU110
 328 0000 10B4     		push	{r4}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 4, -4
  90:src/util/mem_pool.c **** #ifdef MEM_DEBUG
  91:src/util/mem_pool.c **** 	uint32_t lr = get_lr();
  92:src/util/mem_pool.c **** #endif
  93:src/util/mem_pool.c **** 	pool_el_t * el = (pool_el_t*)((unsigned long)p-offsetof(pool_el_t, buf));
 331              		.loc 1 93 2 is_stmt 1 view .LVU111
 332              		.loc 1 93 48 is_stmt 0 view .LVU112
 333 0002 011F     		subs	r1, r0, #4
 334              	.LVL31:
  94:src/util/mem_pool.c **** 	uint32_t flags = irq_save_disable();
 335              		.loc 1 94 2 is_stmt 1 view .LVU113
 336              	.LBB14:
 337              	.LBI14:
   5:include/ubtbr/system.h **** {
 338              		.loc 2 5 24 view .LVU114
 339              	.LBB15:
   7:include/ubtbr/system.h **** 
 340              		.loc 2 7 2 view .LVU115
   9:include/ubtbr/system.h **** 	"\tmrs    %0, primask\n"
 341              		.loc 2 9 2 view .LVU116
 342              		.syntax unified
 343              	@ 9 "include/ubtbr/system.h" 1
 344 0004 EFF31082 			mrs    r2, primask
 345 0008 72B6     		cpsid  i
 346              	
 347              	@ 0 "" 2
 348              	.LVL32:
  16:include/ubtbr/system.h **** }
 349              		.loc 2 16 2 view .LVU117
  16:include/ubtbr/system.h **** }
 350              		.loc 2 16 2 is_stmt 0 view .LVU118
 351              		.thumb
 352              		.syntax unified
 353              	.LBE15:
 354              	.LBE14:
  95:src/util/mem_pool.c **** 
  96:src/util/mem_pool.c **** #ifdef MEM_DEBUG
  97:src/util/mem_pool.c **** 	if (el->allocated != 1)
  98:src/util/mem_pool.c **** 		DIE("el not allocated %08x|%d\n",lr,el->allocated);
  99:src/util/mem_pool.c **** 	el->allocated = 0;
 100:src/util/mem_pool.c **** #endif
 101:src/util/mem_pool.c **** 
 102:src/util/mem_pool.c **** 	el->li = pool.li;
 355              		.loc 1 102 2 is_stmt 1 view .LVU119
 356              		.loc 1 102 15 is_stmt 0 view .LVU120
 357 000a 044B     		ldr	r3, .L15
 358              		.loc 1 102 9 view .LVU121
 359 000c 5C68     		ldr	r4, [r3, #4]
 360 000e 40F8044C 		str	r4, [r0, #-4]
 103:src/util/mem_pool.c **** 	pool.li = el;
 361              		.loc 1 103 2 is_stmt 1 view .LVU122
ARM GAS  /tmp/ccPTFhIq.s 			page 11


 362              		.loc 1 103 10 is_stmt 0 view .LVU123
 363 0012 5960     		str	r1, [r3, #4]
 104:src/util/mem_pool.c **** 
 105:src/util/mem_pool.c **** 	irq_restore(flags);
 364              		.loc 1 105 2 is_stmt 1 view .LVU124
 365              	.LVL33:
 366              	.LBB16:
 367              	.LBI16:
  19:include/ubtbr/system.h **** {
 368              		.loc 2 19 20 view .LVU125
 369              	.LBB17:
 370              		.loc 2 21 2 view .LVU126
 371              		.syntax unified
 372              	@ 21 "include/ubtbr/system.h" 1
 373 0014 82F31088 		msr primask, r2
 374              	@ 0 "" 2
 375              	.LVL34:
 376              		.loc 2 21 2 is_stmt 0 view .LVU127
 377              		.thumb
 378              		.syntax unified
 379              	.LBE17:
 380              	.LBE16:
 106:src/util/mem_pool.c **** }
 381              		.loc 1 106 1 view .LVU128
 382 0018 10BC     		pop	{r4}
 383              		.cfi_restore 4
 384              		.cfi_def_cfa_offset 0
 385 001a 7047     		bx	lr
 386              	.L16:
 387              		.align	2
 388              	.L15:
 389 001c 00000000 		.word	pool
 390              		.cfi_endproc
 391              	.LFE13:
 393              		.bss
 394              		.align	2
 397              	pool:
 398 0000 00000000 		.space	6024
 398      00000000 
 398      00000000 
 398      00000000 
 398      00000000 
 399              		.text
 400              	.Letext0:
 401              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 402              		.file 4 "../common/ubertooth.h"
 403              		.file 5 "include/ubtbr/debug.h"
ARM GAS  /tmp/ccPTFhIq.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mem_pool.c
     /tmp/ccPTFhIq.s:16     .text.mem_pool_init:0000000000000000 $t
     /tmp/ccPTFhIq.s:25     .text.mem_pool_init:0000000000000000 mem_pool_init
     /tmp/ccPTFhIq.s:171    .text.mem_pool_init:0000000000000080 $d
     /tmp/ccPTFhIq.s:397    .bss:0000000000000000 pool
     /tmp/ccPTFhIq.s:179    .rodata.str1.4:0000000000000000 $d
     /tmp/ccPTFhIq.s:189    .text.mem_pool_alloc:0000000000000000 $t
     /tmp/ccPTFhIq.s:197    .text.mem_pool_alloc:0000000000000000 mem_pool_alloc
     /tmp/ccPTFhIq.s:303    .text.mem_pool_alloc:0000000000000038 $d
     /tmp/ccPTFhIq.s:311    .text.mem_pool_free:0000000000000000 $t
     /tmp/ccPTFhIq.s:319    .text.mem_pool_free:0000000000000000 mem_pool_free
     /tmp/ccPTFhIq.s:389    .text.mem_pool_free:000000000000001c $d
     /tmp/ccPTFhIq.s:394    .bss:0000000000000000 $d

UNDEFINED SYMBOLS
die
