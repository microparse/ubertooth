ARM GAS  /tmp/ccoI0Hpl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.msg_dequeue,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	msg_dequeue
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	msg_dequeue:
  26              	.LVL0:
  27              	.LFB11:
  28              		.file 1 "src/util/queue.c"
   1:src/util/queue.c **** /* Message queue
   2:src/util/queue.c ****  *
   3:src/util/queue.c ****  * Copyright 2020 Etienne Helluy-Lafont, Univ. Lille, CNRS.
   4:src/util/queue.c ****  *
   5:src/util/queue.c ****  * This file is part of Project Ubertooth.
   6:src/util/queue.c ****  *
   7:src/util/queue.c ****  * This program is free software; you can redistribute it and/or modify
   8:src/util/queue.c ****  * it under the terms of the GNU General Public License as published by
   9:src/util/queue.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:src/util/queue.c ****  * any later version.
  11:src/util/queue.c ****  *
  12:src/util/queue.c ****  * This program is distributed in the hope that it will be useful,
  13:src/util/queue.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:src/util/queue.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:src/util/queue.c ****  * GNU General Public License for more details.
  16:src/util/queue.c ****  *
  17:src/util/queue.c ****  * You should have received a copy of the GNU General Public License
  18:src/util/queue.c ****  * along with this program; see the file COPYING.  If not, write to
  19:src/util/queue.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:src/util/queue.c ****  * Boston, MA 02110-1301, USA.
  21:src/util/queue.c ****  */
  22:src/util/queue.c **** #include <stdlib.h>
  23:src/util/queue.c **** #include <ubtbr/defines.h>
  24:src/util/queue.c **** #include <ubtbr/debug.h>
  25:src/util/queue.c **** #include <ubtbr/queue.h>
  26:src/util/queue.c **** 
  27:src/util/queue.c **** msg_t *msg_dequeue(msg_queue_t*q)
  28:src/util/queue.c **** {
  29              		.loc 1 28 1 view -0
  30              		.cfi_startproc
ARM GAS  /tmp/ccoI0Hpl.s 			page 2


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 28 1 is_stmt 0 view .LVU1
  29:src/util/queue.c **** 	msg_t *p = NULL;
  35              		.loc 1 29 2 is_stmt 1 view .LVU2
  36              	.LVL1:
  30:src/util/queue.c **** 
  31:src/util/queue.c **** 	if (!msg_queue_empty(q))
  37              		.loc 1 31 2 view .LVU3
  38              		.loc 1 31 5 is_stmt 0 view .LVU4
  39 0000 D0E90012 		ldrd	r1, r2, [r0]
  40 0004 9142     		cmp	r1, r2
  28:src/util/queue.c **** 	msg_t *p = NULL;
  41              		.loc 1 28 1 view .LVU5
  42 0006 0346     		mov	r3, r0
  43              		.loc 1 31 5 view .LVU6
  44 0008 0DD0     		beq	.L3
  32:src/util/queue.c **** 	{
  33:src/util/queue.c **** 		p = q->msg[q->head];
  45              		.loc 1 33 3 is_stmt 1 view .LVU7
  34:src/util/queue.c **** 		q->head = (q->head+1)%MSG_QUEUE_SIZE;
  46              		.loc 1 34 21 is_stmt 0 view .LVU8
  47 000a 4A1C     		adds	r2, r1, #1
  48              		.loc 1 34 24 view .LVU9
  49 000c 5042     		rsbs	r0, r2, #0
  50              	.LVL2:
  51              		.loc 1 34 24 view .LVU10
  52 000e 00F00700 		and	r0, r0, #7
  53 0012 02F00702 		and	r2, r2, #7
  33:src/util/queue.c **** 		q->head = (q->head+1)%MSG_QUEUE_SIZE;
  54              		.loc 1 33 5 view .LVU11
  55 0016 01F10201 		add	r1, r1, #2
  56              		.loc 1 34 24 view .LVU12
  57 001a 58BF     		it	pl
  58 001c 4242     		rsbpl	r2, r0, #0
  33:src/util/queue.c **** 		q->head = (q->head+1)%MSG_QUEUE_SIZE;
  59              		.loc 1 33 5 view .LVU13
  60 001e 53F82100 		ldr	r0, [r3, r1, lsl #2]
  61              	.LVL3:
  62              		.loc 1 34 3 is_stmt 1 view .LVU14
  63              		.loc 1 34 11 is_stmt 0 view .LVU15
  64 0022 1A60     		str	r2, [r3]
  65 0024 7047     		bx	lr
  66              	.LVL4:
  67              	.L3:
  29:src/util/queue.c **** 
  68              		.loc 1 29 9 view .LVU16
  69 0026 0020     		movs	r0, #0
  70              	.LVL5:
  35:src/util/queue.c **** 	}
  36:src/util/queue.c **** 
  37:src/util/queue.c **** 	return p;
  71              		.loc 1 37 2 is_stmt 1 view .LVU17
  38:src/util/queue.c **** }
  72              		.loc 1 38 1 is_stmt 0 view .LVU18
  73 0028 7047     		bx	lr
ARM GAS  /tmp/ccoI0Hpl.s 			page 3


  74              		.cfi_endproc
  75              	.LFE11:
  77 002a 00BF     		.section	.text.msg_enqueue,"ax",%progbits
  78              		.align	1
  79              		.p2align 2,,3
  80              		.global	msg_enqueue
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	msg_enqueue:
  87              	.LVL6:
  88              	.LFB12:
  39:src/util/queue.c **** 
  40:src/util/queue.c **** int msg_enqueue(msg_queue_t *q, msg_t *p)
  41:src/util/queue.c **** {
  89              		.loc 1 41 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              		.loc 1 41 1 is_stmt 0 view .LVU20
  95 0000 30B4     		push	{r4, r5}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 5, -4
  42:src/util/queue.c **** 	if (msg_queue_full(q))
  99              		.loc 1 42 2 is_stmt 1 view .LVU21
  41:src/util/queue.c **** 	if (msg_queue_full(q))
 100              		.loc 1 41 1 is_stmt 0 view .LVU22
 101 0002 0246     		mov	r2, r0
 102              		.loc 1 42 6 view .LVU23
 103 0004 4068     		ldr	r0, [r0, #4]
 104              	.LVL7:
 105              	.LBB6:
 106              	.LBI6:
 107              		.file 2 "include/ubtbr/queue.h"
   1:include/ubtbr/queue.h **** #ifndef __QUEUE_H
   2:include/ubtbr/queue.h **** #define __QUEUE_H
   3:include/ubtbr/queue.h **** #include <ubertooth_interface.h>
   4:include/ubtbr/queue.h **** #include <ubtbr/bb_msg.h>
   5:include/ubtbr/queue.h **** 
   6:include/ubtbr/queue.h **** // must be power of two
   7:include/ubtbr/queue.h **** #define MSG_QUEUE_SIZE 8
   8:include/ubtbr/queue.h **** 
   9:include/ubtbr/queue.h **** typedef struct msg_queue_s {
  10:include/ubtbr/queue.h **** 	int head;
  11:include/ubtbr/queue.h **** 	int tail;
  12:include/ubtbr/queue.h **** 	msg_t *msg[MSG_QUEUE_SIZE];
  13:include/ubtbr/queue.h **** } msg_queue_t;
  14:include/ubtbr/queue.h **** 
  15:include/ubtbr/queue.h **** static inline int msg_queue_empty(msg_queue_t *q)
  16:include/ubtbr/queue.h **** {
  17:include/ubtbr/queue.h **** 	return q->head == q->tail;
  18:include/ubtbr/queue.h **** }
  19:include/ubtbr/queue.h **** 
  20:include/ubtbr/queue.h **** static inline int msg_queue_full(msg_queue_t *q)
ARM GAS  /tmp/ccoI0Hpl.s 			page 4


 108              		.loc 2 20 19 is_stmt 1 view .LVU24
 109              	.LBB7:
  21:include/ubtbr/queue.h **** {
  22:include/ubtbr/queue.h **** 	return (q->tail+1)%MSG_QUEUE_SIZE == q->head;
 110              		.loc 2 22 2 view .LVU25
 111              	.LBE7:
 112              	.LBE6:
 113              		.loc 1 42 5 is_stmt 0 view .LVU26
 114 0006 1568     		ldr	r5, [r2]
 115              	.LBB9:
 116              	.LBB8:
 117              		.loc 2 22 17 view .LVU27
 118 0008 431C     		adds	r3, r0, #1
 119              		.loc 2 22 20 view .LVU28
 120 000a 5C42     		rsbs	r4, r3, #0
 121 000c 04F00704 		and	r4, r4, #7
 122 0010 03F00703 		and	r3, r3, #7
 123 0014 58BF     		it	pl
 124 0016 6342     		rsbpl	r3, r4, #0
 125              	.LBE8:
 126              	.LBE9:
 127              		.loc 1 42 5 view .LVU29
 128 0018 9D42     		cmp	r5, r3
 129 001a 06D0     		beq	.L7
  43:src/util/queue.c **** 		return -1;
  44:src/util/queue.c **** 
  45:src/util/queue.c **** 	q->msg[q->tail] = p;
 130              		.loc 1 45 2 is_stmt 1 view .LVU30
 131              		.loc 1 45 18 is_stmt 0 view .LVU31
 132 001c 0230     		adds	r0, r0, #2
 133 001e 42F82010 		str	r1, [r2, r0, lsl #2]
  46:src/util/queue.c **** 	q->tail = (q->tail+1)%MSG_QUEUE_SIZE;
 134              		.loc 1 46 2 is_stmt 1 view .LVU32
  47:src/util/queue.c **** 
  48:src/util/queue.c **** 	return 0;
 135              		.loc 1 48 9 is_stmt 0 view .LVU33
 136 0022 0020     		movs	r0, #0
  46:src/util/queue.c **** 	q->tail = (q->tail+1)%MSG_QUEUE_SIZE;
 137              		.loc 1 46 10 view .LVU34
 138 0024 5360     		str	r3, [r2, #4]
 139              		.loc 1 48 2 is_stmt 1 view .LVU35
 140              	.L5:
  49:src/util/queue.c **** }
 141              		.loc 1 49 1 is_stmt 0 view .LVU36
 142 0026 30BC     		pop	{r4, r5}
 143              		.cfi_remember_state
 144              		.cfi_restore 5
 145              		.cfi_restore 4
 146              		.cfi_def_cfa_offset 0
 147 0028 7047     		bx	lr
 148              	.L7:
 149              		.cfi_restore_state
  43:src/util/queue.c **** 
 150              		.loc 1 43 10 view .LVU37
 151 002a 4FF0FF30 		mov	r0, #-1
 152 002e FAE7     		b	.L5
 153              		.cfi_endproc
ARM GAS  /tmp/ccoI0Hpl.s 			page 5


 154              	.LFE12:
 156              		.section	.text.msg_queue_init,"ax",%progbits
 157              		.align	1
 158              		.p2align 2,,3
 159              		.global	msg_queue_init
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	msg_queue_init:
 166              	.LVL8:
 167              	.LFB13:
  50:src/util/queue.c **** 
  51:src/util/queue.c **** void msg_queue_init(msg_queue_t *q)
  52:src/util/queue.c **** {
 168              		.loc 1 52 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              		.loc 1 52 1 is_stmt 0 view .LVU39
  53:src/util/queue.c **** 	q->head = q->tail = 0;
 174              		.loc 1 53 2 is_stmt 1 view .LVU40
 175              		.loc 1 53 20 is_stmt 0 view .LVU41
 176 0000 0023     		movs	r3, #0
 177              		.loc 1 53 10 view .LVU42
 178 0002 C0E90033 		strd	r3, r3, [r0]
  54:src/util/queue.c **** }
 179              		.loc 1 54 1 view .LVU43
 180 0006 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE13:
 184              		.text
 185              	.Letext0:
 186              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 187              		.file 4 "/usr/include/newlib/sys/_types.h"
 188              		.file 5 "/usr/include/newlib/sys/reent.h"
 189              		.file 6 "/usr/include/newlib/sys/lock.h"
 190              		.file 7 "/usr/include/newlib/stdlib.h"
 191              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 192              		.file 9 "../common/ubertooth.h"
 193              		.file 10 "include/ubtbr/msg.h"
ARM GAS  /tmp/ccoI0Hpl.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccoI0Hpl.s:16     .text.msg_dequeue:0000000000000000 $t
     /tmp/ccoI0Hpl.s:25     .text.msg_dequeue:0000000000000000 msg_dequeue
     /tmp/ccoI0Hpl.s:78     .text.msg_enqueue:0000000000000000 $t
     /tmp/ccoI0Hpl.s:86     .text.msg_enqueue:0000000000000000 msg_enqueue
     /tmp/ccoI0Hpl.s:157    .text.msg_queue_init:0000000000000000 $t
     /tmp/ccoI0Hpl.s:165    .text.msg_queue_init:0000000000000000 msg_queue_init

NO UNDEFINED SYMBOLS
